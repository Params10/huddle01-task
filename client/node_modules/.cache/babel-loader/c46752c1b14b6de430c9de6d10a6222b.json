{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eosSignTx = exports.eosGetPublicKey = exports.eosGetAccountPaths = void 0;\n\nconst EosMessages = __importStar(require(\"@keepkey/device-protocol/lib/messages-eos_pb\"));\n\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\n\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\n\nconst createHash = require(\"create-hash\");\n\nfunction eosSigFormatter(r, s, v) {\n  const base58 = require(\"bs58\");\n\n  var recoverId = 0x1f;\n  var signature = \"SIG_K1_\";\n  console.log(\"formatter logs\");\n  var keyBuffer = Buffer.alloc(65);\n  var rbuf = Buffer.from(r);\n  var sbuf = Buffer.from(s);\n  keyBuffer.writeUInt8(recoverId, 0);\n  rbuf.copy(keyBuffer, 1);\n  sbuf.copy(keyBuffer, 33);\n  console.log(keyBuffer);\n  const check = [keyBuffer];\n  var keyType = \"K1\"; // we only sign using K1 curve\n\n  check.push(Buffer.from(keyType));\n  console.log(check);\n  console.log(\"hash\");\n  console.log(createHash(\"ripemd160\").update(core.compatibleBufferConcat(check)).digest());\n  const chksum = createHash(\"ripemd160\").update(core.compatibleBufferConcat(check)).digest().slice(0, 4);\n  console.log(chksum);\n  signature = signature.concat(base58.encode(core.compatibleBufferConcat([keyBuffer, chksum])));\n  console.log(signature);\n  return signature;\n}\n\nfunction charToSymbol(c) {\n  if (c.charCodeAt(0) >= \"a\".charCodeAt(0) && c.charCodeAt(0) <= \"z\".charCodeAt(0)) {\n    return c.charCodeAt(0) - \"a\".charCodeAt(0) + 6;\n  }\n\n  if (c.charCodeAt(0) >= \"1\".charCodeAt(0) && c.charCodeAt(0) <= \"5\".charCodeAt(0)) {\n    return c.charCodeAt(0) - \"1\".charCodeAt(0) + 1;\n  }\n\n  return 0;\n}\n\nfunction nameToNumber(name) {\n  var Long = require(\"long\");\n\n  let value = new Long(0, 0, true);\n  let c = new Long(0, 0, true);\n\n  for (let i = 0; i < 13; i++) {\n    if (i < name.length && i < 13) {\n      c = Long.fromNumber(charToSymbol(name[i]), true);\n    }\n\n    if (i < 12) {\n      c = c.and(Long.fromString(\"1f\", true, 16));\n      c = c.shl(64 - 5 * (i + 1));\n    } else {\n      // last iteration\n      c = c.and(Long.fromString(\"0f\", true, 16));\n    }\n\n    value = value.or(c);\n  }\n\n  return value.toString();\n}\n\nfunction assetToNumber(asset) {\n  let assetSplit = asset.split(\" \"); // amount, symbol\n\n  let dot_pos = assetSplit[0].indexOf(\".\");\n  let fract_part = 0;\n  let int_part = 0;\n  let precision_digit = 0; // parse symbol\n\n  if (dot_pos != -1) {\n    precision_digit = assetSplit[0].length - dot_pos - 1;\n  } else {\n    precision_digit = 0;\n  }\n\n  let sym = symbolFromString(precision_digit, assetSplit[1]); //parse amount\n\n  if (dot_pos != -1) {\n    int_part = parseInt(assetSplit[0].slice(0, dot_pos));\n    fract_part = parseInt(assetSplit[0].slice(dot_pos + 1));\n\n    if (int_part < 0) {\n      fract_part *= -1;\n    }\n  } else {\n    int_part = parseInt(assetSplit[0]);\n  }\n\n  let amount = int_part;\n  amount *= Math.pow(10, sym & 0xff);\n  amount += fract_part;\n  return [amount, sym];\n}\n\nfunction symbolFromString(p, name) {\n  let result = 0;\n\n  for (var i = 0; i < name.length; i++) {\n    result |= name.charCodeAt(i) << 8 * (i + 1);\n  }\n\n  result |= p;\n  return result;\n}\n\nfunction eosGetAccountPaths(msg) {\n  return [{\n    addressNList: [0x80000000 + 44, 0x80000000 + core.slip44ByCoin(\"Eos\"), 0x80000000 + msg.accountIdx, 0, 0]\n  }];\n}\n\nexports.eosGetAccountPaths = eosGetAccountPaths;\n\nfunction eosGetPublicKey(transport, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const getPubkey = new EosMessages.EosGetPublicKey();\n    getPubkey.setAddressNList(msg.addressNList);\n    getPubkey.setShowDisplay(msg.showDisplay !== false);\n    getPubkey.setKind(msg.kind);\n    const response = yield transport.call(Messages.MessageType.MESSAGETYPE_EOSGETPUBLICKEY, getPubkey, core.LONG_TIMEOUT);\n    if (response.message_type === core.Events.FAILURE) throw response;\n    const eosPubkey = response.proto;\n    return core.mustBeDefined(eosPubkey.getWifPublicKey());\n  });\n}\n\nexports.eosGetPublicKey = eosGetPublicKey;\n\nfunction eosSignTx(transport, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {\n      let resp; // check some params\n\n      if (msg.tx.actions.length > 1) {\n        throw new Error(`Too many actions in Eos transaction: Keepkey only supports one!`);\n      }\n\n      const signTx = new EosMessages.EosSignTx();\n      signTx.setAddressNList(msg.addressNList);\n      signTx.setChainId(core.fromHexString(msg.chain_id));\n      const txHeader = new EosMessages.EosTxHeader();\n      txHeader.setExpiration((Date.parse(msg.tx.expiration) - Date.parse(\"01 Jan 1970 00:00:00Z\") - new Date().getTimezoneOffset() * 60 * 1000) / 1000);\n      txHeader.setRefBlockNum(msg.tx.ref_block_num);\n      txHeader.setRefBlockPrefix(msg.tx.ref_block_prefix);\n      txHeader.setMaxNetUsageWords(msg.tx.max_net_usage_words);\n      txHeader.setMaxCpuUsageMs(msg.tx.max_cpu_usage_ms);\n      txHeader.setDelaySec(msg.tx.delay_sec);\n      signTx.setHeader(txHeader);\n      signTx.setNumActions(msg.tx.actions.length);\n      console.log(\"tx header\");\n      console.log(txHeader);\n      resp = yield transport.call(Messages.MessageType.MESSAGETYPE_EOSSIGNTX, signTx, core.LONG_TIMEOUT, true);\n\n      if (resp.message_type === core.Events.FAILURE) {\n        throw resp;\n      }\n\n      if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_EOSTXACTIONREQUEST) {\n        throw new Error(`eos: unexpected response ${resp.message_type}`);\n      } // parse the common block of the action\n\n\n      let actCommon = new EosMessages.EosActionCommon();\n      actCommon.setAccount(nameToNumber(msg.tx.actions[0].account).toString());\n      actCommon.setName(nameToNumber(msg.tx.actions[0].name).toString()); // interate through authorizations and add them\n\n      for (let n = 0; n < msg.tx.actions[0].authorization.length; n++) {\n        let actPerm = new EosMessages.EosPermissionLevel();\n        actPerm.setActor(nameToNumber(msg.tx.actions[0].authorization[n].actor).toString());\n        actPerm.setPermission(nameToNumber(msg.tx.actions[0].authorization[n].permission).toString());\n        actCommon.addAuthorization(actPerm);\n      }\n\n      let actAck = new EosMessages.EosTxActionAck();\n      actAck.setCommon(actCommon); // parse the various action types here.\n\n      switch (msg.tx.actions[0].name) {\n        case \"transfer\":\n          {\n            // build the transfer action\n            let actType = new EosMessages.EosActionTransfer();\n            actType.setSender(nameToNumber(msg.tx.actions[0].data.from).toString());\n            actType.setReceiver(nameToNumber(msg.tx.actions[0].data.to).toString());\n            let actAsset = new EosMessages.EosAsset();\n            let assetParse = assetToNumber(msg.tx.actions[0].data.quantity);\n            actAsset.setAmount(assetParse[0].toString());\n            actAsset.setSymbol(assetParse[1].toString());\n            actType.setQuantity(actAsset);\n            actType.setMemo(msg.tx.actions[0].data.memo);\n            actAck.setTransfer(actType);\n            break;\n          }\n\n        default:\n          {}\n      }\n\n      console.log(\"action data\");\n      console.log(actAck);\n      resp = yield transport.call(Messages.MessageType.MESSAGETYPE_EOSTXACTIONACK, actAck, core.LONG_TIMEOUT, true);\n\n      if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_EOSSIGNEDTX) {\n        throw new Error(`eos: unexpected response ${resp.message_type}`);\n      }\n\n      const signedTx = resp.proto; // format signature for use in the eos system\n      //    const EosFormatSig = eosSigFormatter(signedTx.getSignatureR() as Uint8Array, signedTx.getSignatureS() as Uint8Array, signedTx.getSignatureV())\n\n      const signatureR = signedTx.getSignatureR_asU8();\n      const signatureS = signedTx.getSignatureS_asU8();\n      const signatureV = signedTx.getSignatureV();\n      if (signatureV === undefined) throw new Error(\"missing signatureV\");\n      var sig = {\n        signatureV,\n        signatureR,\n        signatureS,\n        hash: signedTx.getHash(),\n        eosFormSig: eosSigFormatter(signatureR, signatureS, signatureV)\n      };\n      return sig;\n    }));\n  });\n}\n\nexports.eosSignTx = eosSignTx;","map":{"version":3,"sources":["../src/eos.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eosSignTx = exports.eosGetPublicKey = exports.eosGetAccountPaths = void 0;\nconst EosMessages = __importStar(require(\"@keepkey/device-protocol/lib/messages-eos_pb\"));\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\nconst createHash = require(\"create-hash\");\nfunction eosSigFormatter(r, s, v) {\n    const base58 = require(\"bs58\");\n    var recoverId = 0x1f;\n    var signature = \"SIG_K1_\";\n    console.log(\"formatter logs\");\n    var keyBuffer = Buffer.alloc(65);\n    var rbuf = Buffer.from(r);\n    var sbuf = Buffer.from(s);\n    keyBuffer.writeUInt8(recoverId, 0);\n    rbuf.copy(keyBuffer, 1);\n    sbuf.copy(keyBuffer, 33);\n    console.log(keyBuffer);\n    const check = [keyBuffer];\n    var keyType = \"K1\"; // we only sign using K1 curve\n    check.push(Buffer.from(keyType));\n    console.log(check);\n    console.log(\"hash\");\n    console.log(createHash(\"ripemd160\").update(core.compatibleBufferConcat(check)).digest());\n    const chksum = createHash(\"ripemd160\").update(core.compatibleBufferConcat(check)).digest().slice(0, 4);\n    console.log(chksum);\n    signature = signature.concat(base58.encode(core.compatibleBufferConcat([keyBuffer, chksum])));\n    console.log(signature);\n    return signature;\n}\nfunction charToSymbol(c) {\n    if (c.charCodeAt(0) >= \"a\".charCodeAt(0) && c.charCodeAt(0) <= \"z\".charCodeAt(0)) {\n        return c.charCodeAt(0) - \"a\".charCodeAt(0) + 6;\n    }\n    if (c.charCodeAt(0) >= \"1\".charCodeAt(0) && c.charCodeAt(0) <= \"5\".charCodeAt(0)) {\n        return c.charCodeAt(0) - \"1\".charCodeAt(0) + 1;\n    }\n    return 0;\n}\nfunction nameToNumber(name) {\n    var Long = require(\"long\");\n    let value = new Long(0, 0, true);\n    let c = new Long(0, 0, true);\n    for (let i = 0; i < 13; i++) {\n        if (i < name.length && i < 13) {\n            c = Long.fromNumber(charToSymbol(name[i]), true);\n        }\n        if (i < 12) {\n            c = c.and(Long.fromString(\"1f\", true, 16));\n            c = c.shl(64 - 5 * (i + 1));\n        }\n        else {\n            // last iteration\n            c = c.and(Long.fromString(\"0f\", true, 16));\n        }\n        value = value.or(c);\n    }\n    return value.toString();\n}\nfunction assetToNumber(asset) {\n    let assetSplit = asset.split(\" \"); // amount, symbol\n    let dot_pos = assetSplit[0].indexOf(\".\");\n    let fract_part = 0;\n    let int_part = 0;\n    let precision_digit = 0;\n    // parse symbol\n    if (dot_pos != -1) {\n        precision_digit = assetSplit[0].length - dot_pos - 1;\n    }\n    else {\n        precision_digit = 0;\n    }\n    let sym = symbolFromString(precision_digit, assetSplit[1]);\n    //parse amount\n    if (dot_pos != -1) {\n        int_part = parseInt(assetSplit[0].slice(0, dot_pos));\n        fract_part = parseInt(assetSplit[0].slice(dot_pos + 1));\n        if (int_part < 0) {\n            fract_part *= -1;\n        }\n    }\n    else {\n        int_part = parseInt(assetSplit[0]);\n    }\n    let amount = int_part;\n    amount *= Math.pow(10, sym & 0xff);\n    amount += fract_part;\n    return [amount, sym];\n}\nfunction symbolFromString(p, name) {\n    let result = 0;\n    for (var i = 0; i < name.length; i++) {\n        result |= name.charCodeAt(i) << (8 * (i + 1));\n    }\n    result |= p;\n    return result;\n}\nfunction eosGetAccountPaths(msg) {\n    return [\n        {\n            addressNList: [0x80000000 + 44, 0x80000000 + core.slip44ByCoin(\"Eos\"), 0x80000000 + msg.accountIdx, 0, 0],\n        },\n    ];\n}\nexports.eosGetAccountPaths = eosGetAccountPaths;\nfunction eosGetPublicKey(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const getPubkey = new EosMessages.EosGetPublicKey();\n        getPubkey.setAddressNList(msg.addressNList);\n        getPubkey.setShowDisplay(msg.showDisplay !== false);\n        getPubkey.setKind(msg.kind);\n        const response = yield transport.call(Messages.MessageType.MESSAGETYPE_EOSGETPUBLICKEY, getPubkey, core.LONG_TIMEOUT);\n        if (response.message_type === core.Events.FAILURE)\n            throw response;\n        const eosPubkey = response.proto;\n        return core.mustBeDefined(eosPubkey.getWifPublicKey());\n    });\n}\nexports.eosGetPublicKey = eosGetPublicKey;\nfunction eosSignTx(transport, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            // check some params\n            if (msg.tx.actions.length > 1) {\n                throw new Error(`Too many actions in Eos transaction: Keepkey only supports one!`);\n            }\n            const signTx = new EosMessages.EosSignTx();\n            signTx.setAddressNList(msg.addressNList);\n            signTx.setChainId(core.fromHexString(msg.chain_id));\n            const txHeader = new EosMessages.EosTxHeader();\n            txHeader.setExpiration((Date.parse(msg.tx.expiration) -\n                Date.parse(\"01 Jan 1970 00:00:00Z\") -\n                new Date().getTimezoneOffset() * 60 * 1000) /\n                1000);\n            txHeader.setRefBlockNum(msg.tx.ref_block_num);\n            txHeader.setRefBlockPrefix(msg.tx.ref_block_prefix);\n            txHeader.setMaxNetUsageWords(msg.tx.max_net_usage_words);\n            txHeader.setMaxCpuUsageMs(msg.tx.max_cpu_usage_ms);\n            txHeader.setDelaySec(msg.tx.delay_sec);\n            signTx.setHeader(txHeader);\n            signTx.setNumActions(msg.tx.actions.length);\n            console.log(\"tx header\");\n            console.log(txHeader);\n            resp = yield transport.call(Messages.MessageType.MESSAGETYPE_EOSSIGNTX, signTx, core.LONG_TIMEOUT, true);\n            if (resp.message_type === core.Events.FAILURE) {\n                throw resp;\n            }\n            if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_EOSTXACTIONREQUEST) {\n                throw new Error(`eos: unexpected response ${resp.message_type}`);\n            }\n            // parse the common block of the action\n            let actCommon = new EosMessages.EosActionCommon();\n            actCommon.setAccount(nameToNumber(msg.tx.actions[0].account).toString());\n            actCommon.setName(nameToNumber(msg.tx.actions[0].name).toString());\n            // interate through authorizations and add them\n            for (let n = 0; n < msg.tx.actions[0].authorization.length; n++) {\n                let actPerm = new EosMessages.EosPermissionLevel();\n                actPerm.setActor(nameToNumber(msg.tx.actions[0].authorization[n].actor).toString());\n                actPerm.setPermission(nameToNumber(msg.tx.actions[0].authorization[n].permission).toString());\n                actCommon.addAuthorization(actPerm);\n            }\n            let actAck = new EosMessages.EosTxActionAck();\n            actAck.setCommon(actCommon);\n            // parse the various action types here.\n            switch (msg.tx.actions[0].name) {\n                case \"transfer\": {\n                    // build the transfer action\n                    let actType = new EosMessages.EosActionTransfer();\n                    actType.setSender(nameToNumber(msg.tx.actions[0].data.from).toString());\n                    actType.setReceiver(nameToNumber(msg.tx.actions[0].data.to).toString());\n                    let actAsset = new EosMessages.EosAsset();\n                    let assetParse = assetToNumber(msg.tx.actions[0].data.quantity);\n                    actAsset.setAmount(assetParse[0].toString());\n                    actAsset.setSymbol(assetParse[1].toString());\n                    actType.setQuantity(actAsset);\n                    actType.setMemo(msg.tx.actions[0].data.memo);\n                    actAck.setTransfer(actType);\n                    break;\n                }\n                default: {\n                }\n            }\n            console.log(\"action data\");\n            console.log(actAck);\n            resp = yield transport.call(Messages.MessageType.MESSAGETYPE_EOSTXACTIONACK, actAck, core.LONG_TIMEOUT, true);\n            if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_EOSSIGNEDTX) {\n                throw new Error(`eos: unexpected response ${resp.message_type}`);\n            }\n            const signedTx = resp.proto;\n            // format signature for use in the eos system\n            //    const EosFormatSig = eosSigFormatter(signedTx.getSignatureR() as Uint8Array, signedTx.getSignatureS() as Uint8Array, signedTx.getSignatureV())\n            const signatureR = signedTx.getSignatureR_asU8();\n            const signatureS = signedTx.getSignatureS_asU8();\n            const signatureV = signedTx.getSignatureV();\n            if (signatureV === undefined)\n                throw new Error(\"missing signatureV\");\n            var sig = {\n                signatureV,\n                signatureR,\n                signatureS,\n                hash: signedTx.getHash(),\n                eosFormSig: eosSigFormatter(signatureR, signatureS, signatureV),\n            };\n            return sig;\n        }));\n    });\n}\nexports.eosSignTx = eosSignTx;\n//# sourceMappingURL=eos.js.map"]},"metadata":{},"sourceType":"script"}