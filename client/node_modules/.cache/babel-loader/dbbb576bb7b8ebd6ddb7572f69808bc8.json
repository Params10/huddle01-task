{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EnhancedEventEmitter = void 0;\n\nconst events_1 = require(\"events\");\n\nconst Logger_1 = require(\"./Logger\");\n\nconst logger = new Logger_1.Logger('EnhancedEventEmitter');\n\nclass EnhancedEventEmitter extends events_1.EventEmitter {\n  constructor() {\n    super();\n    this.setMaxListeners(Infinity);\n  }\n\n  safeEmit(event, ...args) {\n    const numListeners = this.listenerCount(event);\n\n    try {\n      return this.emit(event, ...args);\n    } catch (error) {\n      logger.error('safeEmit() | event listener threw an error [event:%s]:%o', event, error);\n      return Boolean(numListeners);\n    }\n  }\n\n  async safeEmitAsPromise(event, ...args) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.emit(event, ...args, resolve, reject);\n      } catch (error) {\n        logger.error('safeEmitAsPromise() | event listener threw an error [event:%s]:%o', event, error);\n        reject(error);\n      }\n    });\n  }\n\n}\n\nexports.EnhancedEventEmitter = EnhancedEventEmitter;","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/mediasoup-client/lib/EnhancedEventEmitter.js"],"names":["Object","defineProperty","exports","value","EnhancedEventEmitter","events_1","require","Logger_1","logger","Logger","EventEmitter","constructor","setMaxListeners","Infinity","safeEmit","event","args","numListeners","listenerCount","emit","error","Boolean","safeEmitAsPromise","Promise","resolve","reject"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,MAAM,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB,sBAApB,CAAf;;AACA,MAAML,oBAAN,SAAmCC,QAAQ,CAACK,YAA5C,CAAyD;AACrDC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,eAAL,CAAqBC,QAArB;AACH;;AACDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ,GAAGC,IAAX,EAAiB;AACrB,UAAMC,YAAY,GAAG,KAAKC,aAAL,CAAmBH,KAAnB,CAArB;;AACA,QAAI;AACA,aAAO,KAAKI,IAAL,CAAUJ,KAAV,EAAiB,GAAGC,IAApB,CAAP;AACH,KAFD,CAGA,OAAOI,KAAP,EAAc;AACVZ,MAAAA,MAAM,CAACY,KAAP,CAAa,0DAAb,EAAyEL,KAAzE,EAAgFK,KAAhF;AACA,aAAOC,OAAO,CAACJ,YAAD,CAAd;AACH;AACJ;;AACsB,QAAjBK,iBAAiB,CAACP,KAAD,EAAQ,GAAGC,IAAX,EAAiB;AACpC,WAAO,IAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAI;AACA,aAAKN,IAAL,CAAUJ,KAAV,EAAiB,GAAGC,IAApB,EAA0BQ,OAA1B,EAAmCC,MAAnC;AACH,OAFD,CAGA,OAAOL,KAAP,EAAc;AACVZ,QAAAA,MAAM,CAACY,KAAP,CAAa,mEAAb,EAAkFL,KAAlF,EAAyFK,KAAzF;AACAK,QAAAA,MAAM,CAACL,KAAD,CAAN;AACH;AACJ,KARM,CAAP;AASH;;AAzBoD;;AA2BzDlB,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnhancedEventEmitter = void 0;\nconst events_1 = require(\"events\");\nconst Logger_1 = require(\"./Logger\");\nconst logger = new Logger_1.Logger('EnhancedEventEmitter');\nclass EnhancedEventEmitter extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.setMaxListeners(Infinity);\n    }\n    safeEmit(event, ...args) {\n        const numListeners = this.listenerCount(event);\n        try {\n            return this.emit(event, ...args);\n        }\n        catch (error) {\n            logger.error('safeEmit() | event listener threw an error [event:%s]:%o', event, error);\n            return Boolean(numListeners);\n        }\n    }\n    async safeEmitAsPromise(event, ...args) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.emit(event, ...args, resolve, reject);\n            }\n            catch (error) {\n                logger.error('safeEmitAsPromise() | event listener threw an error [event:%s]:%o', event, error);\n                reject(error);\n            }\n        });\n    }\n}\nexports.EnhancedEventEmitter = EnhancedEventEmitter;\n"]},"metadata":{},"sourceType":"script"}