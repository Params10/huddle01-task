{"ast":null,"code":"var _jsxFileName = \"/home/param/Desktop/huddle01-task/client/src/components/PeerViewPort.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PeerVideo = ({\n  videoTrack\n}) => {\n  _s();\n\n  const peerVideoTrack = useRef(null);\n  useEffect(() => {\n    peerVideoTrack.current.srcObject = videoTrack;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: peerVideoTrack,\n      height: \"400px\",\n      width: \"400px\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PeerVideo, \"MpQLV7wUfi9LPfruCxIe/br6GdA=\");\n\n_c = PeerVideo;\nexport const PeerScreen = ({\n  screenTrack\n}) => {\n  _s2();\n\n  const peerScreenTrack = useRef(null);\n  useEffect(() => {\n    peerScreenTrack.current.srcObject = screenTrack;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: peerScreenTrack,\n      height: \"400px\",\n      width: \"400px\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(PeerScreen, \"4Eva1yLj/FFfa7nuNQaVjEnhb6o=\");\n\n_c2 = PeerScreen;\nexport const PeerAudio = ({\n  audioTrack\n}) => {\n  _s3();\n\n  const peerAudioTrack = useRef(null);\n  useEffect(() => {\n    console.log(audioTrack);\n    peerAudioTrack.current.srcObject = audioTrack;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: peerAudioTrack,\n      autoPlay: true,\n      playsInline: true,\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(PeerAudio, \"2caBD5TpjU1fJdXPsj1kjYWziLM=\");\n\n_c3 = PeerAudio;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PeerVideo\");\n$RefreshReg$(_c2, \"PeerScreen\");\n$RefreshReg$(_c3, \"PeerAudio\");","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/src/components/PeerViewPort.js"],"names":["useEffect","useRef","PeerVideo","videoTrack","peerVideoTrack","current","srcObject","PeerScreen","screenTrack","peerScreenTrack","PeerAudio","audioTrack","peerAudioTrack","console","log"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACzC,QAAMC,cAAc,GAAGH,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACC,OAAf,CAAuBC,SAAvB,GAAmCH,UAAnC;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,2BACI;AAAO,MAAA,GAAG,EAAEC,cAAZ;AAA4B,MAAA,MAAM,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAC,OAAjD;AAAyD,MAAA,QAAQ;AAAjE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAXM;;GAAMF,S;;KAAAA,S;AAab,OAAO,MAAMK,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAC3C,QAAMC,eAAe,GAAGR,MAAM,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,eAAe,CAACJ,OAAhB,CAAwBC,SAAxB,GAAoCE,WAApC;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,2BACI;AAAO,MAAA,GAAG,EAAEC,eAAZ;AAA6B,MAAA,MAAM,EAAC,OAApC;AAA4C,MAAA,KAAK,EAAC,OAAlD;AAA0D,MAAA,QAAQ;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAXM;;IAAMF,U;;MAAAA,U;AAab,OAAO,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACzC,QAAMC,cAAc,GAAGX,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAC,IAAAA,cAAc,CAACP,OAAf,CAAuBC,SAAvB,GAAmCK,UAAnC;AACH,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI;AAAA,2BACI;AAAO,MAAA,GAAG,EAAEC,cAAZ;AAA4B,MAAA,QAAQ,MAApC;AAAqC,MAAA,WAAW,MAAhD;AAAiD,MAAA,QAAQ,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAZM;;IAAMF,S;;MAAAA,S","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport const PeerVideo = ({ videoTrack }) => {\n    const peerVideoTrack = useRef(null);\n\n    useEffect(() => {\n        peerVideoTrack.current.srcObject = videoTrack;\n    }, []);\n    return (\n        <div>\n            <video ref={peerVideoTrack} height=\"400px\" width=\"400px\" autoPlay />\n        </div>\n    );\n};\n\nexport const PeerScreen = ({ screenTrack }) => {\n    const peerScreenTrack = useRef(null);\n\n    useEffect(() => {\n        peerScreenTrack.current.srcObject = screenTrack;\n    }, []);\n    return (\n        <div>\n            <video ref={peerScreenTrack} height=\"400px\" width=\"400px\" autoPlay />\n        </div>\n    );\n};\n\nexport const PeerAudio = ({ audioTrack }) => {\n    const peerAudioTrack = useRef(null);\n\n    useEffect(() => {\n        console.log(audioTrack);\n        peerAudioTrack.current.srcObject = audioTrack;\n    }, []);\n    return (\n        <div>\n            <audio ref={peerAudioTrack} autoPlay playsInline controls={false} />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}