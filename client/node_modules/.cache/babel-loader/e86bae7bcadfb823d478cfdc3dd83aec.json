{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegistryTypes = exports.RegistryType = void 0;\n\nclass RegistryType {\n  constructor(type, tag) {\n    this.type = type;\n    this.tag = tag;\n\n    this.getTag = () => this.tag;\n\n    this.getType = () => this.type;\n  }\n\n}\n\nexports.RegistryType = RegistryType;\nexports.RegistryTypes = {\n  UUID: new RegistryType('uuid', 37),\n  BYTES: new RegistryType('bytes', undefined),\n  CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),\n  CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),\n  CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),\n  CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),\n  CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),\n  CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),\n  CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311)\n};","map":{"version":3,"sources":["../src/RegistryType.ts"],"names":[],"mappings":";;;;;;;AAGA,MAAa,YAAb,CAAyB;AACvB,EAAA,WAAA,CAAoB,IAApB,EAA0C,GAA1C,EAAsD;AAAlC,SAAA,IAAA,GAAA,IAAA;AAAsB,SAAA,GAAA,GAAA,GAAA;;AAC1C,SAAA,MAAA,GAAS,MAAM,KAAK,GAApB;;AACA,SAAA,OAAA,GAAU,MAAM,KAAK,IAArB;AAF0D;;AADnC;;AAAzB,OAAA,CAAA,YAAA,GAAA,YAAA;AAMa,OAAA,CAAA,aAAA,GAAgB;AAC3B,EAAA,IAAI,EAAE,IAAI,YAAJ,CAAiB,MAAjB,EAAyB,EAAzB,CADqB;AAE3B,EAAA,KAAK,EAAE,IAAI,YAAJ,CAAiB,OAAjB,EAA0B,SAA1B,CAFoB;AAG3B,EAAA,YAAY,EAAE,IAAI,YAAJ,CAAiB,cAAjB,EAAiC,GAAjC,CAHa;AAI3B,EAAA,cAAc,EAAE,IAAI,YAAJ,CAAiB,gBAAjB,EAAmC,GAAnC,CAJW;AAK3B,EAAA,gBAAgB,EAAE,IAAI,YAAJ,CAAiB,kBAAjB,EAAqC,GAArC,CALS;AAM3B,EAAA,YAAY,EAAE,IAAI,YAAJ,CAAiB,cAAjB,EAAiC,GAAjC,CANa;AAO3B,EAAA,aAAa,EAAE,IAAI,YAAJ,CAAiB,eAAjB,EAAkC,GAAlC,CAPY;AAQ3B,EAAA,WAAW,EAAE,IAAI,YAAJ,CAAiB,aAAjB,EAAgC,GAAhC,CARc;AAS3B,EAAA,cAAc,EAAE,IAAI,YAAJ,CAAiB,gBAAjB,EAAmC,GAAnC;AATW,CAAhB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegistryTypes = exports.RegistryType = void 0;\nclass RegistryType {\n    constructor(type, tag) {\n        this.type = type;\n        this.tag = tag;\n        this.getTag = () => this.tag;\n        this.getType = () => this.type;\n    }\n}\nexports.RegistryType = RegistryType;\nexports.RegistryTypes = {\n    UUID: new RegistryType('uuid', 37),\n    BYTES: new RegistryType('bytes', undefined),\n    CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),\n    CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),\n    CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),\n    CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),\n    CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),\n    CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),\n    CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311),\n};\n//# sourceMappingURL=RegistryType.js.map"]},"metadata":{},"sourceType":"script"}