{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.CBOR = factory();\n  }\n})(this, function () {\n  var CBOR = function () {\n    function BinaryHex(hex) {\n      this.$hex = hex;\n    }\n\n    BinaryHex.prototype = {\n      length: function () {\n        return this.$hex.length / 2;\n      },\n      toString: function (format) {\n        if (!format || format === 'hex' || format === 16) return this.$hex;\n\n        if (format === 'utf-8') {\n          var encoded = '';\n\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded += '%' + this.$hex.substring(i, i + 2);\n          }\n\n          return decodeURIComponent(encoded);\n        }\n\n        if (format === 'latin') {\n          var encoded = [];\n\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n          }\n\n          return String.fromCharCode.apply(String, encoded);\n        }\n\n        throw new Error('Unrecognised format: ' + format);\n      }\n    };\n\n    BinaryHex.fromLatinString = function (latinString) {\n      var hex = '';\n\n      for (var i = 0; i < latinString.length; i++) {\n        var pair = latinString.charCodeAt(i).toString(16);\n        if (pair.length === 1) pair = \"0\" + pair;\n        hex += pair;\n      }\n\n      return new BinaryHex(hex);\n    };\n\n    BinaryHex.fromUtf8String = function (utf8String) {\n      var encoded = encodeURIComponent(utf8String);\n      var hex = '';\n\n      for (var i = 0; i < encoded.length; i++) {\n        if (encoded.charAt(i) === '%') {\n          hex += encoded.substring(i + 1, i + 3);\n          i += 2;\n        } else {\n          var hexPair = encoded.charCodeAt(i).toString(16);\n          if (hexPair.length < 2) hexPair = \"0\" + hexPair;\n          hex += hexPair;\n        }\n      }\n\n      return new BinaryHex(hex);\n    };\n\n    var semanticEncoders = [];\n    var semanticDecoders = {};\n\n    var notImplemented = function (label) {\n      return function () {\n        throw new Error(label + ' not implemented');\n      };\n    };\n\n    function Reader() {}\n\n    Reader.prototype = {\n      peekByte: notImplemented('peekByte'),\n      readByte: notImplemented('readByte'),\n      readChunk: notImplemented('readChunk'),\n      readFloat16: function () {\n        var half = this.readUint16();\n        var exponent = (half & 0x7fff) >> 10;\n        var mantissa = half & 0x3ff;\n        var negative = half & 0x8000;\n\n        if (exponent === 0x1f) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n\n          return NaN;\n        }\n\n        var magnitude = exponent ? Math.pow(2, exponent - 25) * (1024 + mantissa) : Math.pow(2, -24) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat32: function () {\n        var intValue = this.readUint32();\n        var exponent = (intValue & 0x7fffffff) >> 23;\n        var mantissa = intValue & 0x7fffff;\n        var negative = intValue & 0x80000000;\n\n        if (exponent === 0xff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n\n          return NaN;\n        }\n\n        var magnitude = exponent ? Math.pow(2, exponent - 23 - 127) * (8388608 + mantissa) : Math.pow(2, -23 - 126) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat64: function () {\n        var int1 = this.readUint32(),\n            int2 = this.readUint32();\n        var exponent = int1 >> 20 & 0x7ff;\n        var mantissa = (int1 & 0xfffff) * 4294967296 + int2;\n        var negative = int1 & 0x80000000;\n\n        if (exponent === 0x7ff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n\n          return NaN;\n        }\n\n        var magnitude = exponent ? Math.pow(2, exponent - 52 - 1023) * (4503599627370496 + mantissa) : Math.pow(2, -52 - 1022) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readUint16: function () {\n        return this.readByte() * 256 + this.readByte();\n      },\n      readUint32: function () {\n        return this.readUint16() * 65536 + this.readUint16();\n      },\n      readUint64: function () {\n        return this.readUint32() * 4294967296 + this.readUint32();\n      }\n    };\n\n    function Writer() {}\n\n    Writer.prototype = {\n      writeByte: notImplemented('writeByte'),\n      result: notImplemented('result'),\n      writeFloat16: notImplemented('writeFloat16'),\n      writeFloat32: notImplemented('writeFloat32'),\n      writeFloat64: notImplemented('writeFloat64'),\n      writeUint16: function (value) {\n        this.writeByte(value >> 8 & 0xff);\n        this.writeByte(value & 0xff);\n      },\n      writeUint32: function (value) {\n        this.writeUint16(value >> 16 & 0xffff);\n        this.writeUint16(value & 0xffff);\n      },\n      writeUint64: function (value) {\n        if (value >= 9007199254740992 || value <= -9007199254740992) {\n          throw new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');\n        }\n\n        this.writeUint32(Math.floor(value / 4294967296));\n        this.writeUint32(value % 4294967296);\n      },\n      writeString: notImplemented('writeString'),\n      canWriteBinary: function (chunk) {\n        return false;\n      },\n      writeBinary: notImplemented('writeChunk')\n    };\n\n    function readHeaderRaw(reader) {\n      var firstByte = reader.readByte();\n      var majorType = firstByte >> 5,\n          value = firstByte & 0x1f;\n      return {\n        type: majorType,\n        value: value\n      };\n    }\n\n    function valueFromHeader(header, reader) {\n      var value = header.value;\n\n      if (value < 24) {\n        return value;\n      } else if (value == 24) {\n        return reader.readByte();\n      } else if (value == 25) {\n        return reader.readUint16();\n      } else if (value == 26) {\n        return reader.readUint32();\n      } else if (value == 27) {\n        return reader.readUint64();\n      } else if (value == 31) {\n        // special value for non-terminating arrays/objects\n        return null;\n      }\n\n      notImplemented('Additional info: ' + value)();\n    }\n\n    function writeHeaderRaw(type, value, writer) {\n      writer.writeByte(type << 5 | value);\n    }\n\n    function writeHeader(type, value, writer) {\n      var firstByte = type << 5;\n\n      if (value < 24) {\n        writer.writeByte(firstByte | value);\n      } else if (value < 256) {\n        writer.writeByte(firstByte | 24);\n        writer.writeByte(value);\n      } else if (value < 65536) {\n        writer.writeByte(firstByte | 25);\n        writer.writeUint16(value);\n      } else if (value < 4294967296) {\n        writer.writeByte(firstByte | 26);\n        writer.writeUint32(value);\n      } else {\n        writer.writeByte(firstByte | 27);\n        writer.writeUint64(value);\n      }\n    }\n\n    var stopCode = new Error(); // Just a unique object, that won't compare strictly equal to anything else\n\n    function decodeReader(reader) {\n      var header = readHeaderRaw(reader);\n\n      switch (header.type) {\n        case 0:\n          return valueFromHeader(header, reader);\n\n        case 1:\n          return -1 - valueFromHeader(header, reader);\n\n        case 2:\n          return reader.readChunk(valueFromHeader(header, reader));\n\n        case 3:\n          var buffer = reader.readChunk(valueFromHeader(header, reader));\n          return buffer.toString('utf-8');\n\n        case 4:\n        case 5:\n          var arrayLength = valueFromHeader(header, reader);\n          var result = [];\n\n          if (arrayLength !== null) {\n            if (header.type === 5) {\n              arrayLength *= 2;\n            }\n\n            for (var i = 0; i < arrayLength; i++) {\n              result[i] = decodeReader(reader);\n            }\n          } else {\n            var item;\n\n            while ((item = decodeReader(reader)) !== stopCode) {\n              result.push(item);\n            }\n          }\n\n          if (header.type === 5) {\n            var objResult = {};\n\n            for (var i = 0; i < result.length; i += 2) {\n              objResult[result[i]] = result[i + 1];\n            }\n\n            return objResult;\n          } else {\n            return result;\n          }\n\n        case 6:\n          var tag = valueFromHeader(header, reader);\n          var decoder = semanticDecoders[tag];\n          var result = decodeReader(reader);\n          return decoder ? decoder(result) : result;\n\n        case 7:\n          if (header.value === 25) {\n            return reader.readFloat16();\n          } else if (header.value === 26) {\n            return reader.readFloat32();\n          } else if (header.value === 27) {\n            return reader.readFloat64();\n          }\n\n          switch (valueFromHeader(header, reader)) {\n            case 20:\n              return false;\n\n            case 21:\n              return true;\n\n            case 22:\n              return null;\n\n            case 23:\n              return undefined;\n\n            case null:\n              return stopCode;\n\n            default:\n              throw new Error('Unknown fixed value: ' + header.value);\n          }\n\n        default:\n          throw new Error('Unsupported header: ' + JSON.stringify(header));\n      }\n\n      throw new Error('not implemented yet');\n    }\n\n    function encodeWriter(data, writer) {\n      for (var i = 0; i < semanticEncoders.length; i++) {\n        var replacement = semanticEncoders[i].fn(data);\n\n        if (replacement !== undefined) {\n          writeHeader(6, semanticEncoders[i].tag, writer);\n          return encodeWriter(replacement, writer);\n        }\n      }\n\n      if (data && typeof data.toCBOR === 'function') {\n        data = data.toCBOR();\n      }\n\n      if (data === false) {\n        writeHeader(7, 20, writer);\n      } else if (data === true) {\n        writeHeader(7, 21, writer);\n      } else if (data === null) {\n        writeHeader(7, 22, writer);\n      } else if (data === undefined) {\n        writeHeader(7, 23, writer);\n      } else if (typeof data === 'number') {\n        if (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {\n          // Integer\n          if (data < 0) {\n            writeHeader(1, -1 - data, writer);\n          } else {\n            writeHeader(0, data, writer);\n          }\n        } else {\n          writeHeaderRaw(7, 27, writer);\n          writer.writeFloat64(data);\n        }\n      } else if (typeof data === 'string') {\n        writer.writeString(data, function (length) {\n          writeHeader(3, length, writer);\n        });\n      } else if (writer.canWriteBinary(data)) {\n        writer.writeBinary(data, function (length) {\n          writeHeader(2, length, writer);\n        });\n      } else if (typeof data === 'object') {\n        if (api.config.useToJSON && typeof data.toJSON === 'function') {\n          data = data.toJSON();\n        }\n\n        if (Array.isArray(data)) {\n          writeHeader(4, data.length, writer);\n\n          for (var i = 0; i < data.length; i++) {\n            encodeWriter(data[i], writer);\n          }\n        } else {\n          var keys = Object.keys(data);\n          writeHeader(5, keys.length, writer);\n\n          for (var i = 0; i < keys.length; i++) {\n            encodeWriter(keys[i], writer);\n            encodeWriter(data[keys[i]], writer);\n          }\n        }\n      } else {\n        throw new Error('CBOR encoding not supported: ' + data);\n      }\n    }\n\n    var readerFunctions = [];\n    var writerFunctions = [];\n    var api = {\n      config: {\n        useToJSON: true\n      },\n      addWriter: function (format, writerFunction) {\n        if (typeof format === 'string') {\n          writerFunctions.push(function (f) {\n            if (format === f) return writerFunction(f);\n          });\n        } else {\n          writerFunctions.push(format);\n        }\n      },\n      addReader: function (format, readerFunction) {\n        if (typeof format === 'string') {\n          readerFunctions.push(function (data, f) {\n            if (format === f) return readerFunction(data, f);\n          });\n        } else {\n          readerFunctions.push(format);\n        }\n      },\n      encode: function (data, format) {\n        for (var i = 0; i < writerFunctions.length; i++) {\n          var func = writerFunctions[i];\n          var writer = func(format);\n\n          if (writer) {\n            encodeWriter(data, writer);\n            return writer.result();\n          }\n        }\n\n        throw new Error('Unsupported output format: ' + format);\n      },\n      decode: function (data, format) {\n        for (var i = 0; i < readerFunctions.length; i++) {\n          var func = readerFunctions[i];\n          var reader = func(data, format);\n\n          if (reader) {\n            return decodeReader(reader);\n          }\n        }\n\n        throw new Error('Unsupported input format: ' + format);\n      },\n      addSemanticEncode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n\n        semanticEncoders.push({\n          tag: tag,\n          fn: fn\n        });\n        return this;\n      },\n      addSemanticDecode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n\n        semanticDecoders[tag] = fn;\n        return this;\n      },\n      Reader: Reader,\n      Writer: Writer\n    };\n    /** Node.js Buffers **/\n\n    function BufferReader(buffer) {\n      this.buffer = buffer;\n      this.pos = 0;\n    }\n\n    BufferReader.prototype = Object.create(Reader.prototype);\n\n    BufferReader.prototype.peekByte = function () {\n      return this.buffer[this.pos];\n    };\n\n    BufferReader.prototype.readByte = function () {\n      return this.buffer[this.pos++];\n    };\n\n    BufferReader.prototype.readUint16 = function () {\n      var result = this.buffer.readUInt16BE(this.pos);\n      this.pos += 2;\n      return result;\n    };\n\n    BufferReader.prototype.readUint32 = function () {\n      var result = this.buffer.readUInt32BE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n\n    BufferReader.prototype.readFloat32 = function () {\n      var result = this.buffer.readFloatBE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n\n    BufferReader.prototype.readFloat64 = function () {\n      var result = this.buffer.readDoubleBE(this.pos);\n      this.pos += 8;\n      return result;\n    };\n\n    BufferReader.prototype.readChunk = function (length) {\n      var result = Buffer.alloc(length);\n      this.buffer.copy(result, 0, this.pos, this.pos += length);\n      return result;\n    };\n\n    function BufferWriter(stringFormat) {\n      this.byteLength = 0;\n      this.defaultBufferLength = 16384; // 16k\n\n      this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n      this.latestBufferOffset = 0;\n      this.completeBuffers = [];\n      this.stringFormat = stringFormat;\n    }\n\n    BufferWriter.prototype = Object.create(Writer.prototype);\n\n    BufferWriter.prototype.writeByte = function (value) {\n      this.latestBuffer[this.latestBufferOffset++] = value;\n\n      if (this.latestBufferOffset >= this.latestBuffer.length) {\n        this.completeBuffers.push(this.latestBuffer);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n\n      this.byteLength++;\n    };\n\n    BufferWriter.prototype.writeFloat32 = function (value) {\n      var buffer = Buffer.alloc(4);\n      buffer.writeFloatBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n\n    BufferWriter.prototype.writeFloat64 = function (value) {\n      var buffer = Buffer.alloc(8);\n      buffer.writeDoubleBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n\n    BufferWriter.prototype.writeString = function (string, lengthFunc) {\n      var buffer = Buffer.from(string, 'utf-8');\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n\n    BufferWriter.prototype.canWriteBinary = function (data) {\n      return data instanceof Buffer;\n    };\n\n    BufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n\n    BufferWriter.prototype.writeBuffer = function (chunk) {\n      if (!(chunk instanceof Buffer)) throw new TypeError('BufferWriter only accepts Buffers');\n\n      if (!this.latestBufferOffset) {\n        this.completeBuffers.push(chunk);\n      } else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {\n        chunk.copy(this.latestBuffer, this.latestBufferOffset);\n        this.latestBufferOffset += chunk.length;\n\n        if (this.latestBufferOffset >= this.latestBuffer.length) {\n          this.completeBuffers.push(this.latestBuffer);\n          this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n          this.latestBufferOffset = 0;\n        }\n      } else {\n        this.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));\n        this.completeBuffers.push(chunk);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n\n      this.byteLength += chunk.length;\n    };\n\n    BufferWriter.prototype.result = function () {\n      // Copies them all into a single Buffer\n      var result = Buffer.alloc(this.byteLength);\n      var offset = 0;\n\n      for (var i = 0; i < this.completeBuffers.length; i++) {\n        var buffer = this.completeBuffers[i];\n        buffer.copy(result, offset, 0, buffer.length);\n        offset += buffer.length;\n      }\n\n      if (this.latestBufferOffset) {\n        this.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n      }\n\n      if (this.stringFormat) return result.toString(this.stringFormat);\n      return result;\n    };\n\n    if (typeof Buffer === 'function') {\n      api.addReader(function (data, format) {\n        if (data instanceof Buffer) {\n          return new BufferReader(data);\n        }\n\n        if (format === 'hex' || format === 'base64') {\n          var buffer = Buffer.from(data, format);\n          return new BufferReader(buffer);\n        }\n      });\n      api.addWriter(function (format) {\n        if (!format || format === 'buffer') {\n          return new BufferWriter();\n        } else if (format === 'hex' || format === 'base64') {\n          return new BufferWriter(format);\n        }\n      });\n    }\n    /** Hex-encoding (and Latin1) for browser **/\n\n\n    function HexReader(hex) {\n      this.hex = hex;\n      this.pos = 0;\n    }\n\n    HexReader.prototype = Object.create(Reader.prototype);\n\n    HexReader.prototype.peekByte = function () {\n      var pair = this.hex.substring(this.pos, 2);\n      return parseInt(pair, 16);\n    };\n\n    HexReader.prototype.readByte = function () {\n      var pair = this.hex.substring(this.pos, this.pos + 2);\n      this.pos += 2;\n      return parseInt(pair, 16);\n    };\n\n    HexReader.prototype.readChunk = function (length) {\n      var hex = this.hex.substring(this.pos, this.pos + length * 2);\n      this.pos += length * 2;\n      if (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n      return new BinaryHex(hex);\n    };\n\n    function HexWriter(finalFormat) {\n      this.$hex = '';\n      this.finalFormat = finalFormat || 'hex';\n    }\n\n    HexWriter.prototype = Object.create(Writer.prototype);\n\n    HexWriter.prototype.writeByte = function (value) {\n      if (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);\n      var hex = value.toString(16);\n\n      if (hex.length == 1) {\n        hex = '0' + hex;\n      }\n\n      this.$hex += hex;\n    };\n\n    HexWriter.prototype.canWriteBinary = function (chunk) {\n      return chunk instanceof BinaryHex || typeof Buffer === 'function' && chunk instanceof Buffer;\n    };\n\n    HexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n      if (chunk instanceof BinaryHex) {\n        lengthFunction(chunk.length());\n        this.$hex += chunk.$hex;\n      } else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n        lengthFunction(chunk.length);\n        this.$hex += chunk.toString('hex');\n      } else {\n        throw new TypeError('HexWriter only accepts BinaryHex or Buffers');\n      }\n    };\n\n    HexWriter.prototype.result = function () {\n      if (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n        return Buffer.from(this.$hex, 'hex');\n      }\n\n      return new BinaryHex(this.$hex).toString(this.finalFormat);\n    };\n\n    HexWriter.prototype.writeString = function (string, lengthFunction) {\n      var buffer = BinaryHex.fromUtf8String(string);\n      lengthFunction(buffer.length());\n      this.$hex += buffer.$hex;\n    };\n\n    api.addReader(function (data, format) {\n      if (data instanceof BinaryHex || data.$hex) {\n        return new HexReader(data.$hex);\n      }\n\n      if (format === 'hex') {\n        return new HexReader(data);\n      }\n    });\n    api.addWriter(function (format) {\n      if (format === 'hex') {\n        return new HexWriter();\n      }\n    });\n    return api;\n  }();\n\n  CBOR.addSemanticEncode(0, function (data) {\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n  }).addSemanticDecode(0, function (isoString) {\n    return new Date(isoString);\n  }).addSemanticDecode(1, function (isoString) {\n    return new Date(isoString);\n  });\n  return CBOR;\n});","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/cbor-sync/main.js"],"names":["global","factory","define","amd","module","exports","CBOR","BinaryHex","hex","$hex","prototype","length","toString","format","encoded","i","substring","decodeURIComponent","push","parseInt","String","fromCharCode","apply","Error","fromLatinString","latinString","pair","charCodeAt","fromUtf8String","utf8String","encodeURIComponent","charAt","hexPair","semanticEncoders","semanticDecoders","notImplemented","label","Reader","peekByte","readByte","readChunk","readFloat16","half","readUint16","exponent","mantissa","negative","Infinity","NaN","magnitude","Math","pow","readFloat32","intValue","readUint32","readFloat64","int1","int2","readUint64","Writer","writeByte","result","writeFloat16","writeFloat32","writeFloat64","writeUint16","value","writeUint32","writeUint64","floor","writeString","canWriteBinary","chunk","writeBinary","readHeaderRaw","reader","firstByte","majorType","type","valueFromHeader","header","writeHeaderRaw","writer","writeHeader","stopCode","decodeReader","buffer","arrayLength","item","objResult","tag","decoder","undefined","JSON","stringify","encodeWriter","data","replacement","fn","toCBOR","api","config","useToJSON","toJSON","Array","isArray","keys","Object","readerFunctions","writerFunctions","addWriter","writerFunction","f","addReader","readerFunction","encode","func","decode","addSemanticEncode","addSemanticDecode","BufferReader","pos","create","readUInt16BE","readUInt32BE","readFloatBE","readDoubleBE","Buffer","alloc","copy","BufferWriter","stringFormat","byteLength","defaultBufferLength","latestBuffer","latestBufferOffset","completeBuffers","writeFloatBE","writeBuffer","writeDoubleBE","string","lengthFunc","from","TypeError","slice","offset","HexReader","HexWriter","finalFormat","lengthFunction","Date","toISOString","isoString"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine([], factory);\n\t} else if (typeof module !== 'undefined' && module.exports){\n\t\tmodule.exports = factory();\n\t} else {\n\t\tglobal.CBOR = factory();\n\t}\n})(this, function () {\n\tvar CBOR = (function () {\n\t\tfunction BinaryHex(hex) {\n\t\t\tthis.$hex = hex;\n\t\t}\n\t\tBinaryHex.prototype = {\n\t\t\tlength: function () {\n\t\t\t\treturn this.$hex.length/2;\n\t\t\t},\n\t\t\ttoString: function (format) {\n\t\t\t\tif (!format || format === 'hex' || format === 16) return this.$hex;\n\t\t\t\tif (format === 'utf-8') {\n\t\t\t\t\tvar encoded = '';\n\t\t\t\t\tfor (var i = 0; i < this.$hex.length; i += 2) {\n\t\t\t\t\t\tencoded += '%' + this.$hex.substring(i, i + 2);\n\t\t\t\t\t}\n\t\t\t\t\treturn decodeURIComponent(encoded);\n\t\t\t\t}\n\t\t\t\tif (format === 'latin') {\n\t\t\t\t\tvar encoded = [];\n\t\t\t\t\tfor (var i = 0; i < this.$hex.length; i += 2) {\n\t\t\t\t\t\tencoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n\t\t\t\t\t}\n\t\t\t\t\treturn String.fromCharCode.apply(String, encoded);\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unrecognised format: ' + format);\n\t\t\t}\n\t\t};\n\t\tBinaryHex.fromLatinString = function (latinString) {\n\t\t\tvar hex = '';\n\t\t\tfor (var i = 0; i < latinString.length; i++) {\n\t\t\t\tvar pair = latinString.charCodeAt(i).toString(16);\n\t\t\t\tif (pair.length === 1) pair = \"0\" + pair;\n\t\t\t\thex += pair;\n\t\t\t}\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\t\tBinaryHex.fromUtf8String = function (utf8String) {\n\t\t\tvar encoded = encodeURIComponent(utf8String);\n\t\t\tvar hex = '';\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tif (encoded.charAt(i) === '%') {\n\t\t\t\t\thex += encoded.substring(i + 1, i + 3);\n\t\t\t\t\ti += 2;\n\t\t\t\t} else {\n\t\t\t\t\tvar hexPair = encoded.charCodeAt(i).toString(16);\n\t\t\t\t\tif (hexPair.length < 2) hexPair = \"0\" + hexPair;\n\t\t\t\t\thex += hexPair;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\n\t\tvar semanticEncoders = [];\n\t\tvar semanticDecoders = {};\n\t\n\t\tvar notImplemented = function (label) {\n\t\t\treturn function () {\n\t\t\t\tthrow new Error(label + ' not implemented');\n\t\t\t};\n\t\t};\n\t\n\t\tfunction Reader() {\n\t\t}\n\t\tReader.prototype = {\n\t\t\tpeekByte: notImplemented('peekByte'),\n\t\t\treadByte: notImplemented('readByte'),\n\t\t\treadChunk: notImplemented('readChunk'),\n\t\t\treadFloat16: function () {\n\t\t\t\tvar half = this.readUint16();\n\t\t\t\tvar exponent = (half&0x7fff) >> 10;\n\t\t\t\tvar mantissa = half&0x3ff;\n\t\t\t\tvar negative = half&0x8000;\n\t\t\t\tif (exponent === 0x1f) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 25)*(1024 + mantissa) : Math.pow(2, -24)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadFloat32: function () {\n\t\t\t\tvar intValue = this.readUint32();\n\t\t\t\tvar exponent = (intValue&0x7fffffff) >> 23;\n\t\t\t\tvar mantissa = intValue&0x7fffff;\n\t\t\t\tvar negative = intValue&0x80000000;\n\t\t\t\tif (exponent === 0xff) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 23 - 127)*(8388608 + mantissa) : Math.pow(2, -23 - 126)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadFloat64: function () {\n\t\t\t\tvar int1 = this.readUint32(), int2 = this.readUint32();\n\t\t\t\tvar exponent = (int1 >> 20)&0x7ff;\n\t\t\t\tvar mantissa = (int1&0xfffff)*4294967296 + int2;\n\t\t\t\tvar negative = int1&0x80000000;\n\t\t\t\tif (exponent === 0x7ff) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 52 - 1023)*(4503599627370496 + mantissa) : Math.pow(2, -52 - 1022)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadUint16: function () {\n\t\t\t\treturn this.readByte()*256 + this.readByte();\n\t\t\t},\n\t\t\treadUint32: function () {\n\t\t\t\treturn this.readUint16()*65536 + this.readUint16();\n\t\t\t},\n\t\t\treadUint64: function () {\n\t\t\t\treturn this.readUint32()*4294967296 + this.readUint32();\n\t\t\t}\n\t\t};\n\t\tfunction Writer() {\n\t\t}\n\t\tWriter.prototype = {\n\t\t\twriteByte: notImplemented('writeByte'),\n\t\t\tresult: notImplemented('result'),\n\t\t\twriteFloat16: notImplemented('writeFloat16'),\n\t\t\twriteFloat32: notImplemented('writeFloat32'),\n\t\t\twriteFloat64: notImplemented('writeFloat64'),\n\t\t\twriteUint16: function (value) {\n\t\t\t\tthis.writeByte((value >> 8)&0xff);\n\t\t\t\tthis.writeByte(value&0xff);\n\t\t\t},\n\t\t\twriteUint32: function (value) {\n\t\t\t\tthis.writeUint16((value>>16)&0xffff);\n\t\t\t\tthis.writeUint16(value&0xffff);\n\t\t\t},\n\t\t\twriteUint64: function (value) {\n\t\t\t\tif (value >= 9007199254740992 || value <= -9007199254740992) {\n\t\t\t\t\tthrow new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');\n\t\t\t\t}\n\t\t\t\tthis.writeUint32(Math.floor(value/4294967296));\n\t\t\t\tthis.writeUint32(value%4294967296);\n\t\t\t},\n\t\t\twriteString: notImplemented('writeString'),\n\t\t\tcanWriteBinary: function (chunk) {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\twriteBinary: notImplemented('writeChunk')\n\t\t};\n\n\t\tfunction readHeaderRaw(reader) {\n\t\t\tvar firstByte = reader.readByte();\n\t\t\tvar majorType = firstByte >> 5, value = firstByte&0x1f;\n\t\t\treturn {type: majorType, value: value};\n\t\t}\n\t\n\t\tfunction valueFromHeader(header, reader) {\n\t\t\tvar value = header.value;\n\t\t\tif (value < 24) {\n\t\t\t\treturn value;\n\t\t\t} else if (value == 24) {\n\t\t\t\treturn reader.readByte();\n\t\t\t} else if (value == 25) {\n\t\t\t\treturn reader.readUint16();\n\t\t\t} else if (value == 26) {\n\t\t\t\treturn reader.readUint32();\n\t\t\t} else if (value == 27) {\n\t\t\t\treturn reader.readUint64();\n\t\t\t} else if (value == 31) {\n\t\t\t\t// special value for non-terminating arrays/objects\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tnotImplemented('Additional info: ' + value)();\n\t\t}\n\t\n\t\tfunction writeHeaderRaw(type, value, writer) {\n\t\t\twriter.writeByte((type<<5)|value);\n\t\t}\n\t\n\t\tfunction writeHeader(type, value, writer) {\n\t\t\tvar firstByte = type<<5;\n\t\t\tif (value < 24) {\n\t\t\t\twriter.writeByte(firstByte|value);\n\t\t\t} else if (value < 256) {\n\t\t\t\twriter.writeByte(firstByte|24);\n\t\t\t\twriter.writeByte(value);\n\t\t\t} else if (value < 65536) {\n\t\t\t\twriter.writeByte(firstByte|25);\n\t\t\t\twriter.writeUint16(value);\n\t\t\t} else if (value < 4294967296) {\n\t\t\t\twriter.writeByte(firstByte|26);\n\t\t\t\twriter.writeUint32(value);\n\t\t\t} else {\n\t\t\t\twriter.writeByte(firstByte|27);\n\t\t\t\twriter.writeUint64(value);\n\t\t\t}\n\t\t}\n\t\n\t\tvar stopCode = new Error(); // Just a unique object, that won't compare strictly equal to anything else\n\t\n\t\tfunction decodeReader(reader) {\n\t\t\tvar header = readHeaderRaw(reader);\n\t\t\tswitch (header.type) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn valueFromHeader(header, reader);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn -1 -valueFromHeader(header, reader);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn reader.readChunk(valueFromHeader(header, reader));\n\t\t\t\tcase 3:\n\t\t\t\t\tvar buffer = reader.readChunk(valueFromHeader(header, reader));\n\t\t\t\t\treturn buffer.toString('utf-8');\n\t\t\t\tcase 4:\n\t\t\t\tcase 5:\n\t\t\t\t\tvar arrayLength = valueFromHeader(header, reader);\n\t\t\t\t\tvar result = [];\n\t\t\t\t\tif (arrayLength !== null) {\n\t\t\t\t\t\tif (header.type === 5) {\n\t\t\t\t\t\t\tarrayLength *= 2;\n\t\t\t\t\t\t} \n\t\t\t\t\t\tfor (var i = 0; i < arrayLength; i++) {\n\t\t\t\t\t\t\tresult[i] = decodeReader(reader);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar item;\n\t\t\t\t\t\twhile ((item = decodeReader(reader)) !== stopCode) {\n\t\t\t\t\t\t\tresult.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (header.type === 5) {\n\t\t\t\t\t\tvar objResult = {};\n\t\t\t\t\t\tfor (var i = 0; i < result.length; i += 2) {\n\t\t\t\t\t\t\tobjResult[result[i]] = result[i + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn objResult;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\tcase 6:\n\t\t\t\t\tvar tag = valueFromHeader(header, reader);\n\t\t\t\t\tvar decoder = semanticDecoders[tag];\n\t\t\t\t\tvar result = decodeReader(reader);\n\t\t\t\t\treturn decoder ? decoder(result) : result;\n\t\t\t\tcase 7:\n\t\t\t\t\tif (header.value === 25) {\n\t\t\t\t\t\treturn reader.readFloat16();\n\t\t\t\t\t} else if (header.value === 26) {\n\t\t\t\t\t\treturn reader.readFloat32();\n\t\t\t\t\t} else if (header.value === 27) {\n\t\t\t\t\t\treturn reader.readFloat64();\n\t\t\t\t\t}\n\t\t\t\t\tswitch (valueFromHeader(header, reader)) {\n\t\t\t\t\t\tcase 20:\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tcase 23:\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\tcase null:\n\t\t\t\t\t\t\treturn stopCode;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unknown fixed value: ' + header.value);\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unsupported header: ' + JSON.stringify(header));\n\t\t\t}\n\t\t\tthrow new Error('not implemented yet');\n\t\t}\n\t\n\t\tfunction encodeWriter(data, writer) {\n\t\t\tfor (var i = 0; i < semanticEncoders.length; i++) {\n\t\t\t\tvar replacement = semanticEncoders[i].fn(data);\n\t\t\t\tif (replacement !== undefined) {\n\t\t\t\t\twriteHeader(6, semanticEncoders[i].tag, writer);\n\t\t\t\t\treturn encodeWriter(replacement, writer);\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif (data && typeof data.toCBOR === 'function') {\n\t\t\t\tdata = data.toCBOR();\n\t\t\t}\n\t\t\n\t\t\tif (data === false) {\n\t\t\t\twriteHeader(7, 20, writer);\n\t\t\t} else if (data === true) {\n\t\t\t\twriteHeader(7, 21, writer);\n\t\t\t} else if (data === null) {\n\t\t\t\twriteHeader(7, 22, writer);\n\t\t\t} else if (data === undefined) {\n\t\t\t\twriteHeader(7, 23, writer);\n\t\t\t} else if (typeof data === 'number') {\n\t\t\t\tif (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {\n\t\t\t\t\t// Integer\n\t\t\t\t\tif (data < 0) {\n\t\t\t\t\t\twriteHeader(1, -1 - data, writer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriteHeader(0, data, writer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twriteHeaderRaw(7, 27, writer);\n\t\t\t\t\twriter.writeFloat64(data);\n\t\t\t\t}\n\t\t\t} else if (typeof data === 'string') {\n\t\t\t\twriter.writeString(data, function (length) {\n\t\t\t\t\twriteHeader(3, length, writer);\n\t\t\t\t});\n\t\t\t} else if (writer.canWriteBinary(data)) {\n\t\t\t\twriter.writeBinary(data, function (length) {\n\t\t\t\t\twriteHeader(2, length, writer);\n\t\t\t\t});\n\t\t\t} else if (typeof data === 'object') {\n\t\t\t\tif (api.config.useToJSON && typeof data.toJSON === 'function') {\n\t\t\t   \t\tdata = data.toJSON();\n\t\t\t   \t}\n\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\twriteHeader(4, data.length, writer);\n\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\tencodeWriter(data[i], writer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(data);\n\t\t\t\t\twriteHeader(5, keys.length, writer);\n\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tencodeWriter(keys[i], writer);\n\t\t\t\t\t\tencodeWriter(data[keys[i]], writer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('CBOR encoding not supported: ' + data);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar readerFunctions = [];\n\t\tvar writerFunctions = [];\n\t\n\t\tvar api = {\n\t\t\tconfig: {\n\t\t\t\tuseToJSON: true\n\t\t\t},\n\t\t\taddWriter: function (format, writerFunction) {\n\t\t\t\tif (typeof format === 'string') {\n\t\t\t\t\twriterFunctions.push(function (f) {\n\t\t\t\t\t\tif (format === f) return writerFunction(f);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twriterFunctions.push(format);\n\t\t\t\t}\n\t\t\t},\n\t\t\taddReader: function (format, readerFunction) {\n\t\t\t\tif (typeof format === 'string') {\n\t\t\t\t\treaderFunctions.push(function (data, f) {\n\t\t\t\t\t\tif (format === f) return readerFunction(data, f);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treaderFunctions.push(format);\n\t\t\t\t}\n\t\t\t},\n\t\t\tencode: function (data, format) {\n\t\t\t\tfor (var i = 0; i < writerFunctions.length; i++) {\n\t\t\t\t\tvar func = writerFunctions[i];\n\t\t\t\t\tvar writer = func(format);\n\t\t\t\t\tif (writer) {\n\t\t\t\t\t\tencodeWriter(data, writer);\n\t\t\t\t\t\treturn writer.result();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unsupported output format: ' + format);\n\t\t\t},\n\t\t\tdecode: function (data, format) {\n\t\t\t\tfor (var i = 0; i < readerFunctions.length; i++) {\n\t\t\t\t\tvar func = readerFunctions[i];\n\t\t\t\t\tvar reader = func(data, format);\n\t\t\t\t\tif (reader) {\n\t\t\t\t\t\treturn decodeReader(reader);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unsupported input format: ' + format);\n\t\t\t},\n\t\t\taddSemanticEncode: function (tag, fn) {\n\t\t\t\tif (typeof tag !== 'number' || tag%1 !== 0 || tag < 0) {\n\t\t\t\t\tthrow new Error('Tag must be a positive integer');\n\t\t\t\t}\n\t\t\t\tsemanticEncoders.push({tag: tag, fn: fn});\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\taddSemanticDecode: function (tag, fn) {\n\t\t\t\tif (typeof tag !== 'number' || tag%1 !== 0 || tag < 0) {\n\t\t\t\t\tthrow new Error('Tag must be a positive integer');\n\t\t\t\t}\n\t\t\t\tsemanticDecoders[tag] = fn;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tReader: Reader,\n\t\t\tWriter: Writer\n\t\t};\n\t\t\n\t\t/** Node.js Buffers **/\n\t\tfunction BufferReader(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.pos = 0;\n\t\t}\n\t\tBufferReader.prototype = Object.create(Reader.prototype);\n\t\tBufferReader.prototype.peekByte = function () {\n\t\t\treturn this.buffer[this.pos];\n\t\t};\n\t\tBufferReader.prototype.readByte = function () {\n\t\t\treturn this.buffer[this.pos++];\n\t\t};\n\t\tBufferReader.prototype.readUint16 = function () {\n\t\t\tvar result = this.buffer.readUInt16BE(this.pos);\n\t\t\tthis.pos += 2;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readUint32 = function () {\n\t\t\tvar result = this.buffer.readUInt32BE(this.pos);\n\t\t\tthis.pos += 4;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readFloat32 = function () {\n\t\t\tvar result = this.buffer.readFloatBE(this.pos);\n\t\t\tthis.pos += 4;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readFloat64 = function () {\n\t\t\tvar result = this.buffer.readDoubleBE(this.pos);\n\t\t\tthis.pos += 8;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readChunk = function (length) {\n\t\t\tvar result = Buffer.alloc(length);\n\t\t\tthis.buffer.copy(result, 0, this.pos, this.pos += length);\n\t\t\treturn result;\n\t\t};\n\t\n\t\tfunction BufferWriter(stringFormat) {\n\t\t\tthis.byteLength = 0;\n\t\t\tthis.defaultBufferLength = 16384; // 16k\n\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\tthis.latestBufferOffset = 0;\n\t\t\tthis.completeBuffers = [];\n\t\t\tthis.stringFormat = stringFormat;\n\t\t}\n\t\tBufferWriter.prototype = Object.create(Writer.prototype);\n\t\tBufferWriter.prototype.writeByte = function (value) {\n\t\t\tthis.latestBuffer[this.latestBufferOffset++] = value;\n\t\t\tif (this.latestBufferOffset >= this.latestBuffer.length) {\n\t\t\t\tthis.completeBuffers.push(this.latestBuffer);\n\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t}\n\t\t\tthis.byteLength++;\n\t\t}\n\t\tBufferWriter.prototype.writeFloat32 = function (value) {\n\t\t\tvar buffer = Buffer.alloc(4);\n\t\t\tbuffer.writeFloatBE(value, 0);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeFloat64 = function (value) {\n\t\t\tvar buffer = Buffer.alloc(8);\n\t\t\tbuffer.writeDoubleBE(value, 0);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeString = function (string, lengthFunc) {\n\t\t\tvar buffer = Buffer.from(string, 'utf-8');\n\t\t\tlengthFunc(buffer.length);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.canWriteBinary = function (data) {\n\t\t\treturn data instanceof Buffer;\n\t\t};\n\t\tBufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n\t\t\tlengthFunc(buffer.length);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeBuffer = function (chunk) {\n\t\t\tif (!(chunk instanceof Buffer)) throw new TypeError('BufferWriter only accepts Buffers');\n\t\t\tif (!this.latestBufferOffset) {\n\t\t\t\tthis.completeBuffers.push(chunk);\n\t\t\t} else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {\n\t\t\t\tchunk.copy(this.latestBuffer, this.latestBufferOffset);\n\t\t\t\tthis.latestBufferOffset += chunk.length;\n\t\t\t\tif (this.latestBufferOffset >= this.latestBuffer.length) {\n\t\t\t\t\tthis.completeBuffers.push(this.latestBuffer);\n\t\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));\n\t\t\t\tthis.completeBuffers.push(chunk);\n\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t}\n\t\t\tthis.byteLength += chunk.length;\n\t\t}\n\t\tBufferWriter.prototype.result = function () {\n\t\t\t// Copies them all into a single Buffer\n\t\t\tvar result = Buffer.alloc(this.byteLength);\n\t\t\tvar offset = 0;\n\t\t\tfor (var i = 0; i < this.completeBuffers.length; i++) {\n\t\t\t\tvar buffer = this.completeBuffers[i];\n\t\t\t\tbuffer.copy(result, offset, 0, buffer.length);\n\t\t\t\toffset += buffer.length;\n\t\t\t}\n\t\t\tif (this.latestBufferOffset) {\n\t\t\t\tthis.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.stringFormat) return result.toString(this.stringFormat);\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\tif (typeof Buffer === 'function') {\n\t\t\tapi.addReader(function (data, format) {\n\t\t\t\tif (data instanceof Buffer) {\n\t\t\t\t\treturn new BufferReader(data);\n\t\t\t\t}\n\t\t\t\tif (format === 'hex' || format === 'base64') {\n\t\t\t\t\tvar buffer = Buffer.from(data, format);\n\t\t\t\t\treturn new BufferReader(buffer);\n\t\t\t\t}\n\t\t\t});\n\t\t\tapi.addWriter(function (format) {\n\t\t\t\tif (!format || format === 'buffer') {\n\t\t\t\t\treturn new BufferWriter();\n\t\t\t\t} else if (format === 'hex' || format === 'base64') {\n\t\t\t\t\treturn new BufferWriter(format);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t/** Hex-encoding (and Latin1) for browser **/\n\t\tfunction HexReader(hex) {\n\t\t\tthis.hex = hex;\n\t\t\tthis.pos = 0;\n\t\t}\n\t\tHexReader.prototype = Object.create(Reader.prototype);\n\t\tHexReader.prototype.peekByte = function () {\n\t\t\tvar pair = this.hex.substring(this.pos, 2);\n\t\t\treturn parseInt(pair, 16);\n\t\t};\n\t\tHexReader.prototype.readByte = function () {\n\t\t\tvar pair = this.hex.substring(this.pos, this.pos + 2);\n\t\t\tthis.pos += 2;\n\t\t\treturn parseInt(pair, 16);\n\t\t};\n\t\tHexReader.prototype.readChunk = function (length) {\n\t\t\tvar hex = this.hex.substring(this.pos, this.pos + length*2);\n\t\t\tthis.pos += length*2;\n\t\t\tif (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\t\n\t\tfunction HexWriter(finalFormat) {\n\t\t\tthis.$hex = '';\n\t\t\tthis.finalFormat = finalFormat || 'hex'\n\t\t}\n\t\tHexWriter.prototype = Object.create(Writer.prototype);\n\t\tHexWriter.prototype.writeByte = function (value) {\n\t\t\tif (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);\n\t\t\tvar hex = value.toString(16);\n\t\t\tif (hex.length == 1) {\n\t\t\t\thex = '0' + hex;\n\t\t\t}\n\t\t\tthis.$hex += hex;\n\t\t}\n\t\tHexWriter.prototype.canWriteBinary = function (chunk) {\n\t\t\treturn chunk instanceof BinaryHex || (typeof Buffer === 'function' && chunk instanceof Buffer);\n\t\t}\n\t\tHexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n\t\t\tif (chunk instanceof BinaryHex) {\n\t\t\t\tlengthFunction(chunk.length());\n\t\t\t\tthis.$hex += chunk.$hex;\n\t\t\t} else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n\t\t\t\tlengthFunction(chunk.length);\n\t\t\t\tthis.$hex += chunk.toString('hex');\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('HexWriter only accepts BinaryHex or Buffers');\n\t\t\t}\n\t\t}\n\t\tHexWriter.prototype.result = function () {\n\t\t\tif (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n\t\t\t\treturn Buffer.from(this.$hex, 'hex');\n\t\t\t}\n\t\t\treturn new BinaryHex(this.$hex).toString(this.finalFormat);\n\t\t}\n\t\tHexWriter.prototype.writeString = function (string, lengthFunction) {\n\t\t\tvar buffer = BinaryHex.fromUtf8String(string);\n\t\t\tlengthFunction(buffer.length());\n\t\t\tthis.$hex += buffer.$hex;\n\t\t}\n\n\t\tapi.addReader(function (data, format) {\n\t\t\tif (data instanceof BinaryHex || data.$hex) {\n\t\t\t\treturn new HexReader(data.$hex);\n\t\t\t}\n\t\t\tif (format === 'hex') {\n\t\t\t\treturn new HexReader(data)\n\t\t\t}\n\t\t});\n\t\tapi.addWriter(function (format) {\n\t\t\tif (format === 'hex') {\n\t\t\t\treturn new HexWriter();\n\t\t\t}\n\t\t});\n\n\t\treturn api;\n\t})();\n\n\tCBOR.addSemanticEncode(0, function (data) {\n\t\tif (data instanceof Date) {\n\t\t\treturn data.toISOString();\n\t\t}\n\t}).addSemanticDecode(0, function (isoString) {\n\t\treturn new Date(isoString);\n\t}).addSemanticDecode(1, function (isoString) {\n\t\treturn new Date(isoString);\n\t});\n\n\treturn CBOR;\n});"]},"metadata":{},"sourceType":"script"}