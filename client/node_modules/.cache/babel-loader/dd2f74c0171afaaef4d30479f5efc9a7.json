{"ast":null,"code":"import _regeneratorRuntime from \"/home/param/Desktop/huddle01-task/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      customNetwork = options.customNetwork;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  customNetwork: customNetwork,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, _yield$import, Transaction, _yield$import2, Common, ethUtil, _yield$import3, createProvider, _yield$import4, generateAddresses, isValidPath, TrezorConnect, DEVICE_EVENT, DEVICE, TREZOR_DEFAULT_PATH, networkId, email, appUrl, rpcUrl, BigNumber, networkName, customNetwork, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(transactionData) {\n                var _transactionData$gas;\n\n                var path, BN, toBuffer, common, transaction, trezorResult, v, rv, cv;\n                return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        BN = ethUtil.BN, toBuffer = ethUtil.toBuffer;\n                        common = new Common({\n                          chain: customNetwork || networkName(networkId)\n                        });\n                        transaction = Transaction.fromTxData(_objectSpread(_objectSpread({}, transactionData), {}, {\n                          gasLimit: (_transactionData$gas = transactionData.gas) !== null && _transactionData$gas !== void 0 ? _transactionData$gas : transactionData.gasLimit\n                        }), {\n                          common: common,\n                          freeze: false\n                        });\n                        transaction.v = new BN(toBuffer(networkId));\n                        transaction.r = transaction.s = new BN(toBuffer(0));\n                        _context11.next = 11;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 11:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 14;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 14:\n                        v = trezorResult.payload.v.toString(16); // EIP155 support. check/recalc signature v value.\n\n                        rv = parseInt(v, 16);\n                        cv = networkId * 2 + 35;\n\n                        if (rv !== cv && (rv & cv) !== rv) {\n                          cv += 1; // add signature v bit.\n                        }\n\n                        v = cv.toString(16);\n                        transaction.v = new BN(toBuffer(\"0x\".concat(v)));\n                        transaction.r = new BN(toBuffer(\"\".concat(trezorResult.payload.r)));\n                        transaction.s = new BN(toBuffer(\"\".concat(trezorResult.payload.s)));\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 23:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('@ethereumjs/tx');\n\n          case 28:\n            _yield$import = _context13.sent;\n            Transaction = _yield$import.Transaction;\n            _context13.next = 32;\n            return import('@ethereumjs/common');\n\n          case 32:\n            _yield$import2 = _context13.sent;\n            Common = _yield$import2[\"default\"];\n            _context13.next = 36;\n            return import('ethereumjs-util');\n\n          case 36:\n            ethUtil = _context13.sent;\n            _context13.next = 39;\n            return import('./providerEngine-771e7e5b.js');\n\n          case 39:\n            _yield$import3 = _context13.sent;\n            createProvider = _yield$import3[\"default\"];\n            _context13.next = 43;\n            return import('./hd-wallet-51018814.js');\n\n          case 43:\n            _yield$import4 = _context13.sent;\n            generateAddresses = _yield$import4.generateAddresses;\n            isValidPath = _yield$import4.isValidPath;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, customNetwork = options.customNetwork, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 69:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/bnc-onboard/dist/esm/trezor-e8519013.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","undefined","trezorIcon","trezor","options","rpcUrl","networkId","email","appUrl","preferred","label","iconSrc","svg","customNetwork","wallet","_wallet","mark","_callee4","helpers","BigNumber","networkName","resetWalletState","provider","wrap","_callee4$","_context4","prev","trezorProvider","sent","abrupt","connect","enable","disconnect","address","get","_get","_callee","_callee$","_context","getPrimaryAddress","stop","network","_get2","_callee2","_callee2$","_context2","balance","_get3","_callee3","_callee3$","_context3","getBalance","_x","type","desktop","mobile","osExclusions","_x2","_trezorProvider","_callee13","TrezorConnectLibrary","_yield$import","Transaction","_yield$import2","Common","ethUtil","_yield$import3","createProvider","_yield$import4","generateAddresses","isValidPath","TrezorConnect","DEVICE_EVENT","DEVICE","TREZOR_DEFAULT_PATH","dPath","addressToPath","enabled","customPath","account","setPath","_setPath","isCustomPath","getAddress","_getAddress","addresses","setPrimaryAccount","getPublicKey","_getPublicKey","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","trezorSignTransaction","_signTransaction","_signTransaction2","_signMessage","_signMessage2","_callee13$","_context13","_signMessage4","_callee12","message","_","path","_callee12$","_context12","size","entries","ethereumSignMessage","stripHexPrefix","data","hex","response","success","payload","toChecksumAddress","Error","signature","concat","_signMessage3","_x9","_signTransaction4","_callee11","transactionData","_transactionData$gas","BN","toBuffer","common","transaction","trezorResult","v","rv","cv","_callee11$","_context11","values","chain","fromTxData","gasLimit","gas","freeze","r","s","parseInt","serialize","_signTransaction3","_x8","_trezorSignTransactio","nonce","gasPrice","to","ethereumSignTransaction","chainId","_getBalance","sendAsync","jsonrpc","method","params","id","e","res","result","_getBalances","all","map","_ref3","_callee5","_callee5$","_context5","_x7","_getAccounts4","_callee10","getMore","addressInfo","_callee10$","_context10","t0","_ref4","set","_getAccounts3","_x6","_getMoreAccounts3","_callee9","accounts","_callee9$","_context9","_getMoreAccounts2","_getPrimaryAddress","_getPublicKey3","_callee8","_callee8$","_context8","coin","publicKey","chainCode","serializedPath","_getPublicKey2","_setPrimaryAccount","accountIndex","findIndex","_ref","_ref2","accountAddress","unshift","splice","Map","_addresses","_getAddress3","_callee7","errorMsg","_callee7$","_context7","ethereumGetAddress","showOnTrezor","_getAddress2","_x5","_enable","_isCustomPath","_setPath3","_callee6","custom","_callee6$","_context6","_setPath2","_x3","_x4","_disconnect","manifest","getAccounts","callback","signTransaction","processMessage","messageData","processPersonalMessage","signMessage","signPersonalMessage","on","event","DISCONNECT","disconnected","walletName","send"],"mappings":";;AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;;AAAoD,QAAIC,cAAJ,EAAoB;AAAEI,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,eAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAAjG,CAAV;AAA+G;;AAACP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAEzV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,cAAT,CAAwBC,GAAxB,EAA6Bf,CAA7B,EAAgC;AAAE,SAAOgB,eAAe,CAACD,GAAD,CAAf,IAAwBE,qBAAqB,CAACF,GAAD,EAAMf,CAAN,CAA7C,IAAyDkB,2BAA2B,CAACH,GAAD,EAAMf,CAAN,CAApF,IAAgGmB,gBAAgB,EAAvH;AAA4H;;AAE9J,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AAAmK;;AAEjM,SAASH,qBAAT,CAA+BF,GAA/B,EAAoCf,CAApC,EAAuC;AAAE,MAAIqB,EAAE,GAAGN,GAAG,KAAK,OAAOO,MAAP,KAAkB,WAAlB,IAAiCP,GAAG,CAACO,MAAM,CAACC,QAAR,CAApC,IAAyDR,GAAG,CAAC,YAAD,CAAjE,CAAZ;;AAA8F,MAAIM,EAAE,IAAI,IAAV,EAAgB;AAAQ,MAAIG,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;;AAAgB,MAAIC,EAAJ,EAAQC,EAAR;;AAAY,MAAI;AAAE,SAAKP,EAAE,GAAGA,EAAE,CAACQ,IAAH,CAAQd,GAAR,CAAV,EAAwB,EAAEU,EAAE,GAAG,CAACE,EAAE,GAAGN,EAAE,CAACS,IAAH,EAAN,EAAiBC,IAAxB,CAAxB,EAAuDN,EAAE,GAAG,IAA5D,EAAkE;AAAED,MAAAA,IAAI,CAAC5B,IAAL,CAAU+B,EAAE,CAAChB,KAAb;;AAAqB,UAAIX,CAAC,IAAIwB,IAAI,CAACtB,MAAL,KAAgBF,CAAzB,EAA4B;AAAQ;AAAE,GAArI,CAAsI,OAAOgC,GAAP,EAAY;AAAEN,IAAAA,EAAE,GAAG,IAAL;AAAWE,IAAAA,EAAE,GAAGI,GAAL;AAAW,GAA1K,SAAmL;AAAE,QAAI;AAAE,UAAI,CAACP,EAAD,IAAOJ,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIK,EAAJ,EAAQ,MAAME,EAAN;AAAW;AAAE;;AAAC,SAAOJ,IAAP;AAAc;;AAErf,SAASR,eAAT,CAAyBD,GAAzB,EAA8B;AAAE,MAAIkB,KAAK,CAACC,OAAN,CAAcnB,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,SAASoB,kBAAT,CAA4BpB,GAA5B,EAAiC;AAAE,SAAOqB,kBAAkB,CAACrB,GAAD,CAAlB,IAA2BsB,gBAAgB,CAACtB,GAAD,CAA3C,IAAoDG,2BAA2B,CAACH,GAAD,CAA/E,IAAwFuB,kBAAkB,EAAjH;AAAsH;;AAEzJ,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIlB,SAAJ,CAAc,sIAAd,CAAN;AAA8J;;AAE9L,SAASF,2BAAT,CAAqCqB,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGrD,MAAM,CAACsD,SAAP,CAAiBC,QAAjB,CAA0Bf,IAA1B,CAA+BU,CAA/B,EAAkCM,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIH,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACO,WAAxB,EAAqCJ,CAAC,GAAGH,CAAC,CAACO,WAAF,CAAcC,IAAlB;AAAwB,MAAIL,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOT,KAAK,CAACe,IAAN,CAAWT,CAAX,CAAP;AAAsB,MAAIG,CAAC,KAAK,WAAN,IAAqB,2CAA2CO,IAA3C,CAAgDP,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASH,gBAAT,CAA0Ba,IAA1B,EAAgC;AAAE,MAAI,OAAO5B,MAAP,KAAkB,WAAlB,IAAiC4B,IAAI,CAAC5B,MAAM,CAACC,QAAR,CAAJ,IAAyB,IAA1D,IAAkE2B,IAAI,CAAC,YAAD,CAAJ,IAAsB,IAA5F,EAAkG,OAAOjB,KAAK,CAACe,IAAN,CAAWE,IAAX,CAAP;AAA0B;;AAE9J,SAASd,kBAAT,CAA4BrB,GAA5B,EAAiC;AAAE,MAAIkB,KAAK,CAACC,OAAN,CAAcnB,GAAd,CAAJ,EAAwB,OAAO0B,iBAAiB,CAAC1B,GAAD,CAAxB;AAAgC;;AAE3F,SAAS0B,iBAAT,CAA2B1B,GAA3B,EAAgCoC,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGpC,GAAG,CAACb,MAA7B,EAAqCiD,GAAG,GAAGpC,GAAG,CAACb,MAAV;;AAAkB,OAAK,IAAIF,CAAC,GAAG,CAAR,EAAWoD,IAAI,GAAG,IAAInB,KAAJ,CAAUkB,GAAV,CAAvB,EAAuCnD,CAAC,GAAGmD,GAA3C,EAAgDnD,CAAC,EAAjD,EAAqD;AAAEoD,IAAAA,IAAI,CAACpD,CAAD,CAAJ,GAAUe,GAAG,CAACf,CAAD,CAAb;AAAmB;;AAAC,SAAOoD,IAAP;AAAc;;AAEvL,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,MAAzD,EAAiErD,GAAjE,EAAsEsD,GAAtE,EAA2E;AAAE,MAAI;AAAE,QAAIC,IAAI,GAAGN,GAAG,CAACjD,GAAD,CAAH,CAASsD,GAAT,CAAX;AAA0B,QAAIhD,KAAK,GAAGiD,IAAI,CAACjD,KAAjB;AAAyB,GAAzD,CAA0D,OAAOkD,KAAP,EAAc;AAAEL,IAAAA,MAAM,CAACK,KAAD,CAAN;AAAe;AAAS;;AAAC,MAAID,IAAI,CAAC7B,IAAT,EAAe;AAAEwB,IAAAA,OAAO,CAAC5C,KAAD,CAAP;AAAiB,GAAlC,MAAwC;AAAEmD,IAAAA,OAAO,CAACP,OAAR,CAAgB5C,KAAhB,EAAuBoD,IAAvB,CAA4BN,KAA5B,EAAmCC,MAAnC;AAA6C;AAAE;;AAEzQ,SAASM,iBAAT,CAA2BC,EAA3B,EAA+B;AAAE,SAAO,YAAY;AAAE,QAAIC,IAAI,GAAG,IAAX;AAAA,QAAiBC,IAAI,GAAGlE,SAAxB;AAAmC,WAAO,IAAI6D,OAAJ,CAAY,UAAUP,OAAV,EAAmBC,MAAnB,EAA2B;AAAE,UAAIF,GAAG,GAAGW,EAAE,CAACpE,KAAH,CAASqE,IAAT,EAAeC,IAAf,CAAV;;AAAgC,eAASV,KAAT,CAAe9C,KAAf,EAAsB;AAAE0C,QAAAA,kBAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,MAAtC,EAA8C/C,KAA9C,CAAlB;AAAyE;;AAAC,eAAS+C,MAAT,CAAgB1B,GAAhB,EAAqB;AAAEqB,QAAAA,kBAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,OAAtC,EAA+C1B,GAA/C,CAAlB;AAAwE;;AAACyB,MAAAA,KAAK,CAACW,SAAD,CAAL;AAAmB,KAA9R,CAAP;AAAyS,GAAjW;AAAoW;;AAErY,IAAIC,UAAU,GAAG,syBAAjB;;AAEA,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;AACvB,MAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;AAAA,MACIC,SAAS,GAAGF,OAAO,CAACE,SADxB;AAAA,MAEIC,KAAK,GAAGH,OAAO,CAACG,KAFpB;AAAA,MAGIC,MAAM,GAAGJ,OAAO,CAACI,MAHrB;AAAA,MAIIC,SAAS,GAAGL,OAAO,CAACK,SAJxB;AAAA,MAKIC,KAAK,GAAGN,OAAO,CAACM,KALpB;AAAA,MAMIC,OAAO,GAAGP,OAAO,CAACO,OANtB;AAAA,MAOIC,GAAG,GAAGR,OAAO,CAACQ,GAPlB;AAAA,MAQIC,aAAa,GAAGT,OAAO,CAACS,aAR5B;AASA,SAAO;AACLjC,IAAAA,IAAI,EAAE8B,KAAK,IAAI,QADV;AAELE,IAAAA,GAAG,EAAEA,GAAG,IAAIV,UAFP;AAGLS,IAAAA,OAAO,EAAEA,OAHJ;AAILG,IAAAA,MAAM,EAAE,YAAY;AAClB,UAAIC,OAAO,GAAGlB,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAC/F,YAAIC,SAAJ,EAAeC,WAAf,EAA4BC,gBAA5B,EAA8CC,QAA9C;AACA,eAAO,oBAAmBC,IAAnB,CAAwB,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,iBAAO,CAAP,EAAU;AACR,oBAAQA,SAAS,CAACC,IAAV,GAAiBD,SAAS,CAAC9D,IAAnC;AACE,mBAAK,CAAL;AACEwD,gBAAAA,SAAS,GAAGD,OAAO,CAACC,SAApB,EAA+BC,WAAW,GAAGF,OAAO,CAACE,WAArD,EAAkEC,gBAAgB,GAAGH,OAAO,CAACG,gBAA7F;AACAI,gBAAAA,SAAS,CAAC9D,IAAV,GAAiB,CAAjB;AACA,uBAAOgE,cAAc,CAAC;AACpBtB,kBAAAA,MAAM,EAAEA,MADY;AAEpBC,kBAAAA,SAAS,EAAEA,SAFS;AAGpBC,kBAAAA,KAAK,EAAEA,KAHa;AAIpBC,kBAAAA,MAAM,EAAEA,MAJY;AAKpBW,kBAAAA,SAAS,EAAEA,SALS;AAMpBC,kBAAAA,WAAW,EAAEA,WANO;AAOpBP,kBAAAA,aAAa,EAAEA,aAPK;AAQpBQ,kBAAAA,gBAAgB,EAAEA;AARE,iBAAD,CAArB;;AAWF,mBAAK,CAAL;AACEC,gBAAAA,QAAQ,GAAGG,SAAS,CAACG,IAArB;AACA,uBAAOH,SAAS,CAACI,MAAV,CAAiB,QAAjB,EAA2B;AAChCP,kBAAAA,QAAQ,EAAEA,QADsB;AAEhC,+BAAa;AACX1C,oBAAAA,IAAI,EAAE,QADK;AAEXkD,oBAAAA,OAAO,EAAER,QAAQ,CAACS,MAFP;AAGXC,oBAAAA,UAAU,EAAEV,QAAQ,CAACU,UAHV;AAIXC,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,GAAG,EAAE,YAAY;AACf,4BAAIC,IAAI,GAAGtC,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASoB,OAAT,GAAmB;AACpF,iCAAO,oBAAmBb,IAAnB,CAAwB,SAASc,QAAT,CAAkBC,QAAlB,EAA4B;AACzD,mCAAO,CAAP,EAAU;AACR,sCAAQA,QAAQ,CAACZ,IAAT,GAAgBY,QAAQ,CAAC3E,IAAjC;AACE,qCAAK,CAAL;AACE,yCAAO2E,QAAQ,CAACT,MAAT,CAAgB,QAAhB,EAA0BP,QAAQ,CAACiB,iBAAT,EAA1B,CAAP;;AAEF,qCAAK,CAAL;AACA,qCAAK,KAAL;AACE,yCAAOD,QAAQ,CAACE,IAAT,EAAP;AANJ;AAQD;AACF,2BAXM,EAWJJ,OAXI,CAAP;AAYD,yBAb0C,CAAf,CAA5B;;AAeA,iCAASF,GAAT,GAAe;AACb,iCAAOC,IAAI,CAACzG,KAAL,CAAW,IAAX,EAAiBI,SAAjB,CAAP;AACD;;AAED,+BAAOoG,GAAP;AACD,uBArBI;AADE,qBAJE;AA4BXO,oBAAAA,OAAO,EAAE;AACPP,sBAAAA,GAAG,EAAE,YAAY;AACf,4BAAIQ,KAAK,GAAG7C,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAAS2B,QAAT,GAAoB;AACtF,iCAAO,oBAAmBpB,IAAnB,CAAwB,SAASqB,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,mCAAO,CAAP,EAAU;AACR,sCAAQA,SAAS,CAACnB,IAAV,GAAiBmB,SAAS,CAAClF,IAAnC;AACE,qCAAK,CAAL;AACE,yCAAOkF,SAAS,CAAChB,MAAV,CAAiB,QAAjB,EAA2BvB,SAA3B,CAAP;;AAEF,qCAAK,CAAL;AACA,qCAAK,KAAL;AACE,yCAAOuC,SAAS,CAACL,IAAV,EAAP;AANJ;AAQD;AACF,2BAXM,EAWJG,QAXI,CAAP;AAYD,yBAb2C,CAAf,CAA7B;;AAeA,iCAAST,GAAT,GAAe;AACb,iCAAOQ,KAAK,CAAChH,KAAN,CAAY,IAAZ,EAAkBI,SAAlB,CAAP;AACD;;AAED,+BAAOoG,GAAP;AACD,uBArBI;AADE,qBA5BE;AAoDXY,oBAAAA,OAAO,EAAE;AACPZ,sBAAAA,GAAG,EAAE,YAAY;AACf,4BAAIa,KAAK,GAAGlD,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASgC,QAAT,GAAoB;AACtF,8BAAIf,OAAJ;AACA,iCAAO,oBAAmBV,IAAnB,CAAwB,SAAS0B,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,mCAAO,CAAP,EAAU;AACR,sCAAQA,SAAS,CAACxB,IAAV,GAAiBwB,SAAS,CAACvF,IAAnC;AACE,qCAAK,CAAL;AACEsE,kCAAAA,OAAO,GAAGX,QAAQ,CAACiB,iBAAT,EAAV;AACA,yCAAOW,SAAS,CAACrB,MAAV,CAAiB,QAAjB,EAA2BI,OAAO,IAAIX,QAAQ,CAAC6B,UAAT,CAAoBlB,OAApB,CAAtC,CAAP;;AAEF,qCAAK,CAAL;AACA,qCAAK,KAAL;AACE,yCAAOiB,SAAS,CAACV,IAAV,EAAP;AAPJ;AASD;AACF,2BAZM,EAYJQ,QAZI,CAAP;AAaD,yBAf2C,CAAf,CAA7B;;AAiBA,iCAASd,GAAT,GAAe;AACb,iCAAOa,KAAK,CAACrH,KAAN,CAAY,IAAZ,EAAkBI,SAAlB,CAAP;AACD;;AAED,+BAAOoG,GAAP;AACD,uBAvBI;AADE;AApDE;AAFmB,iBAA3B,CAAP;;AAmFF,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAOT,SAAS,CAACe,IAAV,EAAP;AAtGJ;AAwGD;AACF,SA3GM,EA2GJvB,QA3GI,CAAP;AA4GD,OA9G6C,CAAf,CAA/B;;AAgHA,eAASH,MAAT,CAAgBsC,EAAhB,EAAoB;AAClB,eAAOrC,OAAO,CAACrF,KAAR,CAAc,IAAd,EAAoBI,SAApB,CAAP;AACD;;AAED,aAAOgF,MAAP;AACD,KAtHO,EAJH;AA2HLuC,IAAAA,IAAI,EAAE,UA3HD;AA4HLC,IAAAA,OAAO,EAAE,IA5HJ;AA6HLC,IAAAA,MAAM,EAAE,IA7HH;AA8HLC,IAAAA,YAAY,EAAE,CAAC,KAAD,CA9HT;AA+HL/C,IAAAA,SAAS,EAAEA;AA/HN,GAAP;AAiID;;AAED,SAASkB,cAAT,CAAwB8B,GAAxB,EAA6B;AAC3B,SAAOC,eAAe,CAAChI,KAAhB,CAAsB,IAAtB,EAA4BI,SAA5B,CAAP;AACD;;AAED,SAAS4H,eAAT,GAA2B;AACzBA,EAAAA,eAAe,GAAG7D,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAAS2C,SAAT,CAAmBvD,OAAnB,EAA4B;AACpG,QAAIwD,oBAAJ,EAA0BC,aAA1B,EAAyCC,WAAzC,EAAsDC,cAAtD,EAAsEC,MAAtE,EAA8EC,OAA9E,EAAuFC,cAAvF,EAAuGC,cAAvG,EAAuHC,cAAvH,EAAuIC,iBAAvI,EAA0JC,WAA1J,EAAuKC,aAAvK,EAAsLC,YAAtL,EAAoMC,MAApM,EAA4MC,mBAA5M,EAAiOpE,SAAjO,EAA4OC,KAA5O,EAAmPC,MAAnP,EAA2PH,MAA3P,EAAmQc,SAAnQ,EAA8QC,WAA9Q,EAA2RP,aAA3R,EAA0SQ,gBAA1S,EAA4TsD,KAA5T,EAAmUC,aAAnU,EAAkVC,OAAlV,EAA2VC,UAA3V,EAAuWC,OAAvW,EAAgXzD,QAAhX,EAA0XU,UAA1X,EAAsYgD,OAAtY,EAA+YC,QAA/Y,EAAyZC,YAAzZ,EAAuanD,MAAva,EAA+aoD,UAA/a,EAA2bC,WAA3b,EAAwcC,SAAxc,EAAmdC,iBAAnd,EAAseC,YAAte,EAAofC,aAApf,EAAmgBjD,iBAAngB,EAAshBkD,eAAthB,EAAuiBC,gBAAviB,EAAyjBC,YAAzjB,EAAukBC,aAAvkB,EAAslBC,WAAtlB,EAAmmB1C,UAAnmB,EAA+mB2C,qBAA/mB,EAAsoBC,gBAAtoB,EAAwpBC,iBAAxpB,EAA2qBC,YAA3qB,EAAyrBC,aAAzrB;;AAEA,WAAO,oBAAmB3E,IAAnB,CAAwB,SAAS4E,UAAT,CAAoBC,UAApB,EAAgC;AAC7D,aAAO,CAAP,EAAU;AACR,gBAAQA,UAAU,CAAC1E,IAAX,GAAkB0E,UAAU,CAACzI,IAArC;AACE,eAAK,CAAL;AACEuI,YAAAA,aAAa,GAAG,SAASG,aAAT,GAAyB;AACvCH,cAAAA,aAAa,GAAGrG,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASsF,SAAT,CAAmBC,OAAnB,EAA4B;AAClG,oBAAIC,CAAJ,EAAOvE,OAAP,EAAgBwE,IAAhB;;AAEA,uBAAO,oBAAmBlF,IAAnB,CAAwB,SAASmF,UAAT,CAAoBC,UAApB,EAAgC;AAC7D,yBAAO,CAAP,EAAU;AACR,4BAAQA,UAAU,CAACjF,IAAX,GAAkBiF,UAAU,CAAChJ,IAArC;AACE,2BAAK,CAAL;AACE,4BAAI,EAAEiH,aAAa,CAACgC,IAAd,KAAuB,CAAzB,CAAJ,EAAiC;AAC/BD,0BAAAA,UAAU,CAAChJ,IAAX,GAAkB,CAAlB;AACA;AACD;;AAEDgJ,wBAAAA,UAAU,CAAChJ,IAAX,GAAkB,CAAlB;AACA,+BAAOoE,MAAM,EAAb;;AAEF,2BAAK,CAAL;AACEyE,wBAAAA,CAAC,GAAG7J,cAAc,CAACqB,kBAAkB,CAAC4G,aAAa,CAACiC,OAAd,EAAD,CAAlB,CAA4C,CAA5C,CAAD,EAAiD,CAAjD,CAAlB,EAAuE5E,OAAO,GAAGuE,CAAC,CAAC,CAAD,CAAlF,EAAuFC,IAAI,GAAGD,CAAC,CAAC,CAAD,CAA/F;AACA,+BAAOG,UAAU,CAAC9E,MAAX,CAAkB,QAAlB,EAA4B,IAAIlC,OAAJ,CAAY,UAAUP,OAAV,EAAmBC,MAAnB,EAA2B;AACxEkF,0BAAAA,aAAa,CAACuC,mBAAd,CAAkC;AAChCL,4BAAAA,IAAI,EAAEA,IAD0B;AAEhCF,4BAAAA,OAAO,EAAEtC,OAAO,CAAC8C,cAAR,CAAuBR,OAAO,CAACS,IAA/B,CAFuB;AAGhCC,4BAAAA,GAAG,EAAE;AAH2B,2BAAlC,EAIGrH,IAJH,CAIQ,UAAUsH,QAAV,EAAoB;AAC1B,gCAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpB,kCAAID,QAAQ,CAACE,OAAT,CAAiBnF,OAAjB,KAA6BgC,OAAO,CAACoD,iBAAR,CAA0BpF,OAA1B,CAAjC,EAAqE;AACnE5C,gCAAAA,MAAM,CAAC,IAAIiI,KAAJ,CAAU,0CAAV,CAAD,CAAN;AACD;;AAED,kCAAIC,SAAS,GAAG,KAAKC,MAAL,CAAYN,QAAQ,CAACE,OAAT,CAAiBG,SAA7B,CAAhB;AACAnI,8BAAAA,OAAO,CAACmI,SAAD,CAAP;AACD,6BAPD,MAOO;AACLlI,8BAAAA,MAAM,CAAC,IAAIiI,KAAJ,CAAUJ,QAAQ,CAACE,OAAT,IAAoBF,QAAQ,CAACE,OAAT,CAAiB1H,KAArC,IAA8C,sCAAxD,CAAD,CAAN;AACD;AACF,2BAfD;AAgBD,yBAjBkC,CAA5B,CAAP;;AAmBF,2BAAK,CAAL;AACA,2BAAK,KAAL;AACE,+BAAOiH,UAAU,CAACnE,IAAX,EAAP;AAjCJ;AAmCD;AACF,iBAtCM,EAsCJ8D,SAtCI,CAAP;AAuCD,eA1C+C,CAAf,CAAjC;AA2CA,qBAAOJ,aAAa,CAACxK,KAAd,CAAoB,IAApB,EAA0BI,SAA1B,CAAP;AACD,aA7CD;;AA+CAmK,YAAAA,YAAY,GAAG,SAASwB,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,qBAAOxB,aAAa,CAACxK,KAAd,CAAoB,IAApB,EAA0BI,SAA1B,CAAP;AACD,aAFD;;AAIAkK,YAAAA,iBAAiB,GAAG,SAAS2B,iBAAT,GAA6B;AAC/C3B,cAAAA,iBAAiB,GAAGnG,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAAS4G,SAAT,CAAmBC,eAAnB,EAAoC;AAC9G,oBAAIC,oBAAJ;;AAEA,oBAAIrB,IAAJ,EAAUsB,EAAV,EAAcC,QAAd,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,YAA7C,EAA2DC,CAA3D,EAA8DC,EAA9D,EAAkEC,EAAlE;AACA,uBAAO,oBAAmB/G,IAAnB,CAAwB,SAASgH,UAAT,CAAoBC,UAApB,EAAgC;AAC7D,yBAAO,CAAP,EAAU;AACR,4BAAQA,UAAU,CAAC9G,IAAX,GAAkB8G,UAAU,CAAC7K,IAArC;AACE,2BAAK,CAAL;AACE,4BAAI,EAAEiH,aAAa,CAACgC,IAAd,KAAuB,CAAzB,CAAJ,EAAiC;AAC/B4B,0BAAAA,UAAU,CAAC7K,IAAX,GAAkB,CAAlB;AACA;AACD;;AAED6K,wBAAAA,UAAU,CAAC7K,IAAX,GAAkB,CAAlB;AACA,+BAAOoE,MAAM,EAAb;;AAEF,2BAAK,CAAL;AACE0E,wBAAAA,IAAI,GAAGzI,kBAAkB,CAAC4G,aAAa,CAAC6D,MAAd,EAAD,CAAlB,CAA2C,CAA3C,CAAP;AACAV,wBAAAA,EAAE,GAAG9D,OAAO,CAAC8D,EAAb,EAAiBC,QAAQ,GAAG/D,OAAO,CAAC+D,QAApC;AACAC,wBAAAA,MAAM,GAAG,IAAIjE,MAAJ,CAAW;AAClB0E,0BAAAA,KAAK,EAAE7H,aAAa,IAAIO,WAAW,CAACd,SAAD;AADjB,yBAAX,CAAT;AAGA4H,wBAAAA,WAAW,GAAGpE,WAAW,CAAC6E,UAAZ,CAAuBhN,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKkM,eAAL,CAAd,EAAqC,EAArC,EAAyC;AACzFe,0BAAAA,QAAQ,EAAE,CAACd,oBAAoB,GAAGD,eAAe,CAACgB,GAAxC,MAAiD,IAAjD,IAAyDf,oBAAoB,KAAK,KAAK,CAAvF,GAA2FA,oBAA3F,GAAkHD,eAAe,CAACe;AADnD,yBAAzC,CAApC,EAEV;AACFX,0BAAAA,MAAM,EAAEA,MADN;AAEFa,0BAAAA,MAAM,EAAE;AAFN,yBAFU,CAAd;AAMAZ,wBAAAA,WAAW,CAACE,CAAZ,GAAgB,IAAIL,EAAJ,CAAOC,QAAQ,CAAC1H,SAAD,CAAf,CAAhB;AACA4H,wBAAAA,WAAW,CAACa,CAAZ,GAAgBb,WAAW,CAACc,CAAZ,GAAgB,IAAIjB,EAAJ,CAAOC,QAAQ,CAAC,CAAD,CAAf,CAAhC;AACAQ,wBAAAA,UAAU,CAAC7K,IAAX,GAAkB,EAAlB;AACA,+BAAOmI,qBAAqB,CAACW,IAAD,EAAOoB,eAAP,CAA5B;;AAEF,2BAAK,EAAL;AACEM,wBAAAA,YAAY,GAAGK,UAAU,CAAC5G,IAA1B;;AAEA,4BAAIuG,YAAY,CAAChB,OAAjB,EAA0B;AACxBqB,0BAAAA,UAAU,CAAC7K,IAAX,GAAkB,EAAlB;AACA;AACD;;AAED,8BAAM,IAAI2J,KAAJ,CAAUa,YAAY,CAACf,OAAb,CAAqB1H,KAA/B,CAAN;;AAEF,2BAAK,EAAL;AACE0I,wBAAAA,CAAC,GAAGD,YAAY,CAACf,OAAb,CAAqBgB,CAArB,CAAuB3J,QAAvB,CAAgC,EAAhC,CAAJ,CADF,CAC2C;;AAEzC4J,wBAAAA,EAAE,GAAGY,QAAQ,CAACb,CAAD,EAAI,EAAJ,CAAb;AACAE,wBAAAA,EAAE,GAAGhI,SAAS,GAAG,CAAZ,GAAgB,EAArB;;AAEA,4BAAI+H,EAAE,KAAKC,EAAP,IAAa,CAACD,EAAE,GAAGC,EAAN,MAAcD,EAA/B,EAAmC;AACjCC,0BAAAA,EAAE,IAAI,CAAN,CADiC,CACxB;AACV;;AAEDF,wBAAAA,CAAC,GAAGE,EAAE,CAAC7J,QAAH,CAAY,EAAZ,CAAJ;AACAyJ,wBAAAA,WAAW,CAACE,CAAZ,GAAgB,IAAIL,EAAJ,CAAOC,QAAQ,CAAC,KAAKR,MAAL,CAAYY,CAAZ,CAAD,CAAf,CAAhB;AACAF,wBAAAA,WAAW,CAACa,CAAZ,GAAgB,IAAIhB,EAAJ,CAAOC,QAAQ,CAAC,GAAGR,MAAH,CAAUW,YAAY,CAACf,OAAb,CAAqB2B,CAA/B,CAAD,CAAf,CAAhB;AACAb,wBAAAA,WAAW,CAACc,CAAZ,GAAgB,IAAIjB,EAAJ,CAAOC,QAAQ,CAAC,GAAGR,MAAH,CAAUW,YAAY,CAACf,OAAb,CAAqB4B,CAA/B,CAAD,CAAf,CAAhB;AACA,+BAAOR,UAAU,CAAC3G,MAAX,CAAkB,QAAlB,EAA4B,KAAK2F,MAAL,CAAYU,WAAW,CAACgB,SAAZ,GAAwBzK,QAAxB,CAAiC,KAAjC,CAAZ,CAA5B,CAAP;;AAEF,2BAAK,EAAL;AACA,2BAAK,KAAL;AACE,+BAAO+J,UAAU,CAAChG,IAAX,EAAP;AAvDJ;AAyDD;AACF,iBA5DM,EA4DJoF,SA5DI,CAAP;AA6DD,eAjEmD,CAAf,CAArC;AAkEA,qBAAO5B,iBAAiB,CAACtK,KAAlB,CAAwB,IAAxB,EAA8BI,SAA9B,CAAP;AACD,aApED;;AAsEAiK,YAAAA,gBAAgB,GAAG,SAASoD,iBAAT,CAA2BC,GAA3B,EAAgC;AACjD,qBAAOpD,iBAAiB,CAACtK,KAAlB,CAAwB,IAAxB,EAA8BI,SAA9B,CAAP;AACD,aAFD;;AAIAgK,YAAAA,qBAAqB,GAAG,SAASuD,qBAAT,CAA+B5C,IAA/B,EAAqCoB,eAArC,EAAsD;AAC5E,kBAAIyB,KAAK,GAAGzB,eAAe,CAACyB,KAA5B;AAAA,kBACIC,QAAQ,GAAG1B,eAAe,CAAC0B,QAD/B;AAAA,kBAEIV,GAAG,GAAGhB,eAAe,CAACgB,GAF1B;AAAA,kBAGIW,EAAE,GAAG3B,eAAe,CAAC2B,EAHzB;AAAA,kBAIIhN,KAAK,GAAGqL,eAAe,CAACrL,KAJ5B;AAAA,kBAKIwK,IAAI,GAAGa,eAAe,CAACb,IAL3B;AAMA,qBAAOzC,aAAa,CAACkF,uBAAd,CAAsC;AAC3ChD,gBAAAA,IAAI,EAAEA,IADqC;AAE3CyB,gBAAAA,WAAW,EAAE;AACXoB,kBAAAA,KAAK,EAAEA,KADI;AAEXC,kBAAAA,QAAQ,EAAEA,QAFC;AAGXX,kBAAAA,QAAQ,EAAEC,GAHC;AAIXW,kBAAAA,EAAE,EAAEA,EAJO;AAKXhN,kBAAAA,KAAK,EAAEA,KAAK,IAAI,EALL;AAMXwK,kBAAAA,IAAI,EAAEA,IAAI,IAAI,EANH;AAOX0C,kBAAAA,OAAO,EAAEpJ;AAPE;AAF8B,eAAtC,CAAP;AAYD,aAnBD;;AAqBA6C,YAAAA,UAAU,GAAG,SAASwG,WAAT,CAAqB1H,OAArB,EAA8B;AACzC,qBAAO,IAAItC,OAAJ,CAAY,UAAUP,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CiC,gBAAAA,QAAQ,CAACsI,SAAT,CAAmB;AACjBC,kBAAAA,OAAO,EAAE,KADQ;AAEjBC,kBAAAA,MAAM,EAAE,gBAFS;AAGjBC,kBAAAA,MAAM,EAAE,CAAC9H,OAAD,EAAU,QAAV,CAHS;AAIjB+H,kBAAAA,EAAE,EAAE;AAJa,iBAAnB,EAKG,UAAUC,CAAV,EAAaC,GAAb,EAAkB;AACnBD,kBAAAA,CAAC,IAAI5K,MAAM,CAAC4K,CAAD,CAAX;AACA,sBAAIE,MAAM,GAAGD,GAAG,IAAIA,GAAG,CAACC,MAAxB;;AAEA,sBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB/K,oBAAAA,OAAO,CAAC,IAAI+B,SAAJ,CAAcgJ,MAAd,EAAsB1L,QAAtB,CAA+B,EAA/B,CAAD,CAAP;AACD,mBAFD,MAEO;AACLW,oBAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,iBAdD;AAeD,eAhBM,CAAP;AAiBD,aAlBD;;AAoBAyG,YAAAA,WAAW,GAAG,SAASuE,YAAT,CAAsB/E,SAAtB,EAAiC;AAC7C,qBAAO1F,OAAO,CAAC0K,GAAR,CAAYhF,SAAS,CAACiF,GAAV,CAAc,UAAUrI,OAAV,EAAmB;AAClD,uBAAO,IAAItC,OAAJ,EAAa,aAAa,YAAY;AAC3C,sBAAI4K,KAAK,GAAG1K,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASwJ,QAAT,CAAkBpL,OAAlB,EAA2B;AAC7F,wBAAI0D,OAAJ;AACA,2BAAO,oBAAmBvB,IAAnB,CAAwB,SAASkJ,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,6BAAO,CAAP,EAAU;AACR,gCAAQA,SAAS,CAAChJ,IAAV,GAAiBgJ,SAAS,CAAC/M,IAAnC;AACE,+BAAK,CAAL;AACE+M,4BAAAA,SAAS,CAAC/M,IAAV,GAAiB,CAAjB;AACA,mCAAOwF,UAAU,CAAClB,OAAD,CAAjB;;AAEF,+BAAK,CAAL;AACEa,4BAAAA,OAAO,GAAG4H,SAAS,CAAC9I,IAApB;AACAxC,4BAAAA,OAAO,CAAC;AACN6C,8BAAAA,OAAO,EAAEA,OADH;AAENa,8BAAAA,OAAO,EAAEA;AAFH,6BAAD,CAAP;;AAKF,+BAAK,CAAL;AACA,+BAAK,KAAL;AACE,mCAAO4H,SAAS,CAAClI,IAAV,EAAP;AAdJ;AAgBD;AACF,qBAnBM,EAmBJgI,QAnBI,CAAP;AAoBD,mBAtB2C,CAAf,CAA7B;;AAwBA,yBAAO,UAAUG,GAAV,EAAe;AACpB,2BAAOJ,KAAK,CAAC7O,KAAN,CAAY,IAAZ,EAAkBI,SAAlB,CAAP;AACD,mBAFD;AAGD,iBA5BgC,EAA1B,CAAP;AA6BD,eA9BkB,CAAZ,CAAP;AA+BD,aAhCD;;AAkCA8J,YAAAA,aAAa,GAAG,SAASgF,aAAT,GAAyB;AACvChF,cAAAA,aAAa,GAAG/F,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAAS6J,SAAT,CAAmBC,OAAnB,EAA4B;AAClG,oBAAIC,WAAJ;AACA,uBAAO,oBAAmBxJ,IAAnB,CAAwB,SAASyJ,UAAT,CAAoBC,UAApB,EAAgC;AAC7D,yBAAO,CAAP,EAAU;AACR,4BAAQA,UAAU,CAACvJ,IAAX,GAAkBuJ,UAAU,CAACtN,IAArC;AACE,2BAAK,CAAL;AACE,4BAAIkH,OAAJ,EAAa;AACXoG,0BAAAA,UAAU,CAACtN,IAAX,GAAkB,CAAlB;AACA;AACD;;AAED,+BAAOsN,UAAU,CAACpJ,MAAX,CAAkB,QAAlB,EAA4B,CAAC5B,SAAD,CAA5B,CAAP;;AAEF,2BAAK,CAAL;AACE,4BAAI,EAAE2E,aAAa,CAACgC,IAAd,GAAqB,CAArB,IAA0B,CAACkE,OAA7B,CAAJ,EAA2C;AACzCG,0BAAAA,UAAU,CAACtN,IAAX,GAAkB,CAAlB;AACA;AACD;;AAED,+BAAOsN,UAAU,CAACpJ,MAAX,CAAkB,QAAlB,EAA4BwD,SAAS,EAArC,CAAP;;AAEF,2BAAK,CAAL;AACE,4BAAIV,KAAK,KAAK,EAAd,EAAkB;AAChBA,0BAAAA,KAAK,GAAGD,mBAAR;AACD;;AAED,4BAAIK,OAAJ,EAAa;AACXkG,0BAAAA,UAAU,CAACtN,IAAX,GAAkB,EAAlB;AACA;AACD;;AAEDsN,wBAAAA,UAAU,CAACvJ,IAAX,GAAkB,CAAlB;AACAuJ,wBAAAA,UAAU,CAACtN,IAAX,GAAkB,CAAlB;AACA,+BAAO4H,YAAY,EAAnB;;AAEF,2BAAK,CAAL;AACER,wBAAAA,OAAO,GAAGkG,UAAU,CAACrJ,IAArB;AACAqJ,wBAAAA,UAAU,CAACtN,IAAX,GAAkB,EAAlB;AACA;;AAEF,2BAAK,EAAL;AACEsN,wBAAAA,UAAU,CAACvJ,IAAX,GAAkB,EAAlB;AACAuJ,wBAAAA,UAAU,CAACC,EAAX,GAAgBD,UAAU,CAAC,OAAD,CAAV,CAAoB,CAApB,CAAhB;AACA,8BAAMA,UAAU,CAACC,EAAjB;;AAEF,2BAAK,EAAL;AACEH,wBAAAA,WAAW,GAAG1G,iBAAiB,CAACU,OAAD,EAAUH,aAAa,CAACgC,IAAxB,CAA/B;AACAmE,wBAAAA,WAAW,CAAC9O,OAAZ,CAAoB,UAAUkP,KAAV,EAAiB;AACnC,8BAAIxG,KAAK,GAAGwG,KAAK,CAACxG,KAAlB;AAAA,8BACI1C,OAAO,GAAGkJ,KAAK,CAAClJ,OADpB;AAEA2C,0BAAAA,aAAa,CAACwG,GAAd,CAAkBnJ,OAAlB,EAA2B0C,KAA3B;AACD,yBAJD;AAKA,+BAAOsG,UAAU,CAACpJ,MAAX,CAAkB,QAAlB,EAA4BwD,SAAS,EAArC,CAAP;;AAEF,2BAAK,EAAL;AACA,2BAAK,KAAL;AACE,+BAAO4F,UAAU,CAACzI,IAAX,EAAP;AApDJ;AAsDD;AACF,iBAzDM,EAyDJqI,SAzDI,EAyDO,IAzDP,EAyDa,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,CAzDb,CAAP;AA0DD,eA5D+C,CAAf,CAAjC;AA6DA,qBAAOjF,aAAa,CAAClK,KAAd,CAAoB,IAApB,EAA0BI,SAA1B,CAAP;AACD,aA/DD;;AAiEA6J,YAAAA,YAAY,GAAG,SAAS0F,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,qBAAO1F,aAAa,CAAClK,KAAd,CAAoB,IAApB,EAA0BI,SAA1B,CAAP;AACD,aAFD;;AAIA4J,YAAAA,gBAAgB,GAAG,SAAS6F,iBAAT,GAA6B;AAC9C7F,cAAAA,gBAAgB,GAAG7F,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASwK,QAAT,GAAoB;AAC7F,oBAAIC,QAAJ;AACA,uBAAO,oBAAmBlK,IAAnB,CAAwB,SAASmK,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,yBAAO,CAAP,EAAU;AACR,4BAAQA,SAAS,CAACjK,IAAV,GAAiBiK,SAAS,CAAChO,IAAnC;AACE,2BAAK,CAAL;AACEgO,wBAAAA,SAAS,CAAChO,IAAV,GAAiB,CAAjB;AACA,+BAAOgI,YAAY,CAAC,IAAD,CAAnB;;AAEF,2BAAK,CAAL;AACE8F,wBAAAA,QAAQ,GAAGE,SAAS,CAAC/J,IAArB;AACA,+BAAO+J,SAAS,CAAC9J,MAAV,CAAiB,QAAjB,EAA2BgE,WAAW,CAAC4F,QAAD,CAAtC,CAAP;;AAEF,2BAAK,CAAL;AACA,2BAAK,KAAL;AACE,+BAAOE,SAAS,CAACnJ,IAAV,EAAP;AAXJ;AAaD;AACF,iBAhBM,EAgBJgJ,QAhBI,CAAP;AAiBD,eAnBkD,CAAf,CAApC;AAoBA,qBAAO9F,gBAAgB,CAAChK,KAAjB,CAAuB,IAAvB,EAA6BI,SAA7B,CAAP;AACD,aAtBD;;AAwBA2J,YAAAA,eAAe,GAAG,SAASmG,iBAAT,GAA6B;AAC7C,qBAAOlG,gBAAgB,CAAChK,KAAjB,CAAuB,IAAvB,EAA6BI,SAA7B,CAAP;AACD,aAFD;;AAIAyG,YAAAA,iBAAiB,GAAG,SAASsJ,kBAAT,GAA8B;AAChD,qBAAOhH,OAAO,GAAGQ,SAAS,GAAG,CAAH,CAAZ,GAAoBpF,SAAlC;AACD,aAFD;;AAIAuF,YAAAA,aAAa,GAAG,SAASsG,cAAT,GAA0B;AACxCtG,cAAAA,aAAa,GAAG3F,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAAS+K,QAAT,GAAoB;AAC1F,oBAAI5B,MAAJ;AACA,uBAAO,oBAAmB5I,IAAnB,CAAwB,SAASyK,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,yBAAO,CAAP,EAAU;AACR,4BAAQA,SAAS,CAACvK,IAAV,GAAiBuK,SAAS,CAACtO,IAAnC;AACE,2BAAK,CAAL;AACE,4BAAIgH,KAAJ,EAAW;AACTsH,0BAAAA,SAAS,CAACtO,IAAV,GAAiB,CAAjB;AACA;AACD;;AAED,8BAAM,IAAI2J,KAAJ,CAAU,mDAAV,CAAN;;AAEF,2BAAK,CAAL;AACE2E,wBAAAA,SAAS,CAACvK,IAAV,GAAiB,CAAjB;AACAuK,wBAAAA,SAAS,CAACtO,IAAV,GAAiB,CAAjB;AACA,+BAAO4G,aAAa,CAACgB,YAAd,CAA2B;AAChCkB,0BAAAA,IAAI,EAAE9B,KAD0B;AAEhCuH,0BAAAA,IAAI,EAAE;AAF0B,yBAA3B,CAAP;;AAKF,2BAAK,CAAL;AACE/B,wBAAAA,MAAM,GAAG8B,SAAS,CAACrK,IAAnB;;AAEA,4BAAIuI,MAAM,CAAChD,OAAX,EAAoB;AAClB8E,0BAAAA,SAAS,CAACtO,IAAV,GAAiB,CAAjB;AACA;AACD;;AAED,8BAAM,IAAI2J,KAAJ,CAAU6C,MAAM,CAAC/C,OAAP,CAAe1H,KAAzB,CAAN;;AAEF,2BAAK,CAAL;AACEqF,wBAAAA,OAAO,GAAG;AACRoH,0BAAAA,SAAS,EAAEhC,MAAM,CAAC/C,OAAP,CAAe+E,SADlB;AAERC,0BAAAA,SAAS,EAAEjC,MAAM,CAAC/C,OAAP,CAAegF,SAFlB;AAGR3F,0BAAAA,IAAI,EAAE0D,MAAM,CAAC/C,OAAP,CAAeiF;AAHb,yBAAV;AAKA,+BAAOJ,SAAS,CAACpK,MAAV,CAAiB,QAAjB,EAA2BkD,OAA3B,CAAP;;AAEF,2BAAK,EAAL;AACEkH,wBAAAA,SAAS,CAACvK,IAAV,GAAiB,EAAjB;AACAuK,wBAAAA,SAAS,CAACf,EAAV,GAAee,SAAS,CAAC,OAAD,CAAT,CAAmB,CAAnB,CAAf;AACA,8BAAM,IAAI3E,KAAJ,CAAU,oDAAV,CAAN;;AAEF,2BAAK,EAAL;AACA,2BAAK,KAAL;AACE,+BAAO2E,SAAS,CAACzJ,IAAV,EAAP;AA1CJ;AA4CD;AACF,iBA/CM,EA+CJuJ,QA/CI,EA+CM,IA/CN,EA+CY,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,CA/CZ,CAAP;AAgDD,eAlD+C,CAAf,CAAjC;AAmDA,qBAAOvG,aAAa,CAAC9J,KAAd,CAAoB,IAApB,EAA0BI,SAA1B,CAAP;AACD,aArDD;;AAuDAyJ,YAAAA,YAAY,GAAG,SAAS+G,cAAT,GAA0B;AACvC,qBAAO9G,aAAa,CAAC9J,KAAd,CAAoB,IAApB,EAA0BI,SAA1B,CAAP;AACD,aAFD;;AAIAwJ,YAAAA,iBAAiB,GAAG,SAASiH,kBAAT,CAA4BtK,OAA5B,EAAqC;AACvD;AACA,kBAAIwJ,QAAQ,GAAGzN,kBAAkB,CAAC4G,aAAa,CAACiC,OAAd,EAAD,CAAjC;;AAEA,kBAAI2F,YAAY,GAAGf,QAAQ,CAACgB,SAAT,CAAmB,UAAUC,IAAV,EAAgB;AACpD,oBAAIC,KAAK,GAAGhQ,cAAc,CAAC+P,IAAD,EAAO,CAAP,CAA1B;AAAA,oBACIE,cAAc,GAAGD,KAAK,CAAC,CAAD,CAD1B;;AAGA,uBAAOC,cAAc,KAAK3K,OAA1B;AACD,eALkB,CAAnB,CAJuD,CASnD;;AAEJwJ,cAAAA,QAAQ,CAACoB,OAAT,CAAiBpB,QAAQ,CAACqB,MAAT,CAAgBN,YAAhB,EAA8B,CAA9B,EAAiC,CAAjC,CAAjB,EAXuD,CAWA;;AAEvD5H,cAAAA,aAAa,GAAG,IAAImI,GAAJ,CAAQtB,QAAR,CAAhB;AACD,aAdD;;AAgBApG,YAAAA,SAAS,GAAG,SAAS2H,UAAT,GAAsB;AAChC,qBAAOlP,KAAK,CAACe,IAAN,CAAW+F,aAAa,CAAC3J,IAAd,EAAX,CAAP;AACD,aAFD;;AAIAmK,YAAAA,WAAW,GAAG,SAAS6H,YAAT,GAAwB;AACpC7H,cAAAA,WAAW,GAAGvF,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAASkM,QAAT,CAAkBzG,IAAlB,EAAwB;AAC5F,oBAAI0G,QAAJ,EAAchD,MAAd;AACA,uBAAO,oBAAmB5I,IAAnB,CAAwB,SAAS6L,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,yBAAO,CAAP,EAAU;AACR,4BAAQA,SAAS,CAAC3L,IAAV,GAAiB2L,SAAS,CAAC1P,IAAnC;AACE,2BAAK,CAAL;AACEwP,wBAAAA,QAAQ,GAAG,sCAAsC3F,MAAtC,CAA6Cf,IAA7C,CAAX;AACA4G,wBAAAA,SAAS,CAAC3L,IAAV,GAAiB,CAAjB;AACA2L,wBAAAA,SAAS,CAAC1P,IAAV,GAAiB,CAAjB;AACA,+BAAO4G,aAAa,CAAC+I,kBAAd,CAAiC;AACtC7G,0BAAAA,IAAI,EAAEA,IADgC;AAEtC8G,0BAAAA,YAAY,EAAE;AAFwB,yBAAjC,CAAP;;AAKF,2BAAK,CAAL;AACEpD,wBAAAA,MAAM,GAAGkD,SAAS,CAACzL,IAAnB;;AAEA,4BAAIuI,MAAM,CAAChD,OAAX,EAAoB;AAClBkG,0BAAAA,SAAS,CAAC1P,IAAV,GAAiB,CAAjB;AACA;AACD;;AAED,8BAAM,IAAI2J,KAAJ,CAAU6F,QAAV,CAAN;;AAEF,2BAAK,CAAL;AACE,+BAAOE,SAAS,CAACxL,MAAV,CAAiB,QAAjB,EAA2BsI,MAAM,CAAC/C,OAAP,CAAenF,OAA1C,CAAP;;AAEF,2BAAK,EAAL;AACEoL,wBAAAA,SAAS,CAAC3L,IAAV,GAAiB,EAAjB;AACA2L,wBAAAA,SAAS,CAACnC,EAAV,GAAemC,SAAS,CAAC,OAAD,CAAT,CAAmB,CAAnB,CAAf;AACA,8BAAM,IAAI/F,KAAJ,CAAU6F,QAAV,CAAN;;AAEF,2BAAK,EAAL;AACA,2BAAK,KAAL;AACE,+BAAOE,SAAS,CAAC7K,IAAV,EAAP;AA9BJ;AAgCD;AACF,iBAnCM,EAmCJ0K,QAnCI,EAmCM,IAnCN,EAmCY,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,CAnCZ,CAAP;AAoCD,eAtC6C,CAAf,CAA/B;AAuCA,qBAAO9H,WAAW,CAAC1J,KAAZ,CAAkB,IAAlB,EAAwBI,SAAxB,CAAP;AACD,aAzCD;;AA2CAqJ,YAAAA,UAAU,GAAG,SAASqI,YAAT,CAAsBC,GAAtB,EAA2B;AACtC,qBAAOrI,WAAW,CAAC1J,KAAZ,CAAkB,IAAlB,EAAwBI,SAAxB,CAAP;AACD,aAFD;;AAIAiG,YAAAA,MAAM,GAAG,SAAS2L,OAAT,GAAmB;AAC1B7I,cAAAA,OAAO,GAAG,IAAV;AACA,qBAAOc,YAAY,EAAnB;AACD,aAHD;;AAKAT,YAAAA,YAAY,GAAG,SAASyI,aAAT,GAAyB;AACtC,qBAAO7I,UAAP;AACD,aAFD;;AAIAG,YAAAA,QAAQ,GAAG,SAAS2I,SAAT,GAAqB;AAC9B3I,cAAAA,QAAQ,GAAGpF,iBAAiB,EAAE,aAAa,oBAAmBmB,IAAnB,CAAwB,SAAS6M,QAAT,CAAkBpH,IAAlB,EAAwBqH,MAAxB,EAAgC;AACjG,oBAAI7L,OAAJ;AACA,uBAAO,oBAAmBV,IAAnB,CAAwB,SAASwM,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,yBAAO,CAAP,EAAU;AACR,4BAAQA,SAAS,CAACtM,IAAV,GAAiBsM,SAAS,CAACrQ,IAAnC;AACE,2BAAK,CAAL;AACE,4BAAI2G,WAAW,CAACmC,IAAD,CAAf,EAAuB;AACrBuH,0BAAAA,SAAS,CAACrQ,IAAV,GAAiB,CAAjB;AACA;AACD;;AAED,+BAAOqQ,SAAS,CAACnM,MAAV,CAAiB,QAAjB,EAA2B,KAA3B,CAAP;;AAEF,2BAAK,CAAL;AACE,4BAAI4E,IAAI,KAAK9B,KAAb,EAAoB;AAClB;AACAC,0BAAAA,aAAa,GAAG,IAAImI,GAAJ,EAAhB;AACD;;AAED,4BAAI,CAACe,MAAL,EAAa;AACXE,0BAAAA,SAAS,CAACrQ,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDqQ,wBAAAA,SAAS,CAACtM,IAAV,GAAiB,CAAjB;AACAsM,wBAAAA,SAAS,CAACrQ,IAAV,GAAiB,CAAjB;AACA,+BAAOwH,UAAU,CAACsB,IAAD,CAAjB;;AAEF,2BAAK,CAAL;AACExE,wBAAAA,OAAO,GAAG+L,SAAS,CAACpM,IAApB;AACAgD,wBAAAA,aAAa,CAACwG,GAAd,CAAkBnJ,OAAlB,EAA2BwE,IAA3B;AACA9B,wBAAAA,KAAK,GAAG8B,IAAR;AACA3B,wBAAAA,UAAU,GAAG,IAAb;AACA,+BAAOkJ,SAAS,CAACnM,MAAV,CAAiB,QAAjB,EAA2B,IAA3B,CAAP;;AAEF,2BAAK,EAAL;AACEmM,wBAAAA,SAAS,CAACtM,IAAV,GAAiB,EAAjB;AACAsM,wBAAAA,SAAS,CAAC9C,EAAV,GAAe8C,SAAS,CAAC,OAAD,CAAT,CAAmB,CAAnB,CAAf;AACA,8BAAM,IAAI1G,KAAJ,CAAU,qDAAqDE,MAArD,CAA4Df,IAA5D,CAAV,CAAN;;AAEF,2BAAK,EAAL;AACE3B,wBAAAA,UAAU,GAAG,KAAb;AACAH,wBAAAA,KAAK,GAAG8B,IAAR;AACA,+BAAOuH,SAAS,CAACnM,MAAV,CAAiB,QAAjB,EAA2B,IAA3B,CAAP;;AAEF,2BAAK,EAAL;AACA,2BAAK,KAAL;AACE,+BAAOmM,SAAS,CAACxL,IAAV,EAAP;AA3CJ;AA6CD;AACF,iBAhDM,EAgDJqL,QAhDI,EAgDM,IAhDN,EAgDY,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,CAhDZ,CAAP;AAiDD,eAnD0C,CAAf,CAA5B;AAoDA,qBAAO5I,QAAQ,CAACvJ,KAAT,CAAe,IAAf,EAAqBI,SAArB,CAAP;AACD,aAtDD;;AAwDAkJ,YAAAA,OAAO,GAAG,SAASiJ,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AACrC,qBAAOlJ,QAAQ,CAACvJ,KAAT,CAAe,IAAf,EAAqBI,SAArB,CAAP;AACD,aAFD;;AAIAkG,YAAAA,UAAU,GAAG,SAASoM,WAAT,GAAuB;AAClCzJ,cAAAA,KAAK,GAAG,EAAR;AACAC,cAAAA,aAAa,GAAG,IAAImI,GAAJ,EAAhB;AACAlI,cAAAA,OAAO,GAAG,KAAV;AACAvD,cAAAA,QAAQ,CAACkB,IAAT;AACD,aALD;;AAOA4D,YAAAA,UAAU,CAACzI,IAAX,GAAkB,EAAlB;AACA,mBAAO,OAAO,gBAAP,CAAP;;AAEF,eAAK,EAAL;AACEiG,YAAAA,oBAAoB,GAAGwC,UAAU,CAACxE,IAAlC;AACAwE,YAAAA,UAAU,CAACzI,IAAX,GAAkB,EAAlB;AACA,mBAAO,OAAO,gBAAP,CAAP;;AAEF,eAAK,EAAL;AACEkG,YAAAA,aAAa,GAAGuC,UAAU,CAACxE,IAA3B;AACAkC,YAAAA,WAAW,GAAGD,aAAa,CAACC,WAA5B;AACAsC,YAAAA,UAAU,CAACzI,IAAX,GAAkB,EAAlB;AACA,mBAAO,OAAO,oBAAP,CAAP;;AAEF,eAAK,EAAL;AACEoG,YAAAA,cAAc,GAAGqC,UAAU,CAACxE,IAA5B;AACAoC,YAAAA,MAAM,GAAGD,cAAc,CAAC,SAAD,CAAvB;AACAqC,YAAAA,UAAU,CAACzI,IAAX,GAAkB,EAAlB;AACA,mBAAO,OAAO,iBAAP,CAAP;;AAEF,eAAK,EAAL;AACEsG,YAAAA,OAAO,GAAGmC,UAAU,CAACxE,IAArB;AACAwE,YAAAA,UAAU,CAACzI,IAAX,GAAkB,EAAlB;AACA,mBAAO,OAAO,8BAAP,CAAP;;AAEF,eAAK,EAAL;AACEuG,YAAAA,cAAc,GAAGkC,UAAU,CAACxE,IAA5B;AACAuC,YAAAA,cAAc,GAAGD,cAAc,CAAC,SAAD,CAA/B;AACAkC,YAAAA,UAAU,CAACzI,IAAX,GAAkB,EAAlB;AACA,mBAAO,OAAO,yBAAP,CAAP;;AAEF,eAAK,EAAL;AACEyG,YAAAA,cAAc,GAAGgC,UAAU,CAACxE,IAA5B;AACAyC,YAAAA,iBAAiB,GAAGD,cAAc,CAACC,iBAAnC;AACAC,YAAAA,WAAW,GAAGF,cAAc,CAACE,WAA7B;AACAC,YAAAA,aAAa,GAAGX,oBAAoB,CAAC,SAAD,CAApC,EAAiDY,YAAY,GAAGZ,oBAAoB,CAACY,YAArF,EAAmGC,MAAM,GAAGb,oBAAoB,CAACa,MAAjI;AACAC,YAAAA,mBAAmB,GAAG,gBAAtB;AACApE,YAAAA,SAAS,GAAGF,OAAO,CAACE,SAApB,EAA+BC,KAAK,GAAGH,OAAO,CAACG,KAA/C,EAAsDC,MAAM,GAAGJ,OAAO,CAACI,MAAvE,EAA+EH,MAAM,GAAGD,OAAO,CAACC,MAAhG,EAAwGc,SAAS,GAAGf,OAAO,CAACe,SAA5H,EAAuIC,WAAW,GAAGhB,OAAO,CAACgB,WAA7J,EAA0KP,aAAa,GAAGT,OAAO,CAACS,aAAlM,EAAiNQ,gBAAgB,GAAGjB,OAAO,CAACiB,gBAA5O;AACAsD,YAAAA,KAAK,GAAG,EAAR;AACAC,YAAAA,aAAa,GAAG,IAAImI,GAAJ,EAAhB;AACAlI,YAAAA,OAAO,GAAG,KAAV;AACAC,YAAAA,UAAU,GAAG,KAAb;AACAP,YAAAA,aAAa,CAAC8J,QAAd,CAAuB;AACrB9N,cAAAA,KAAK,EAAEA,KADc;AAErBC,cAAAA,MAAM,EAAEA;AAFa,aAAvB;AAIAc,YAAAA,QAAQ,GAAG6C,cAAc,CAAC;AACxBmK,cAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,QAArB,EAA+B;AAC1C5I,gBAAAA,YAAY,GAAG/F,IAAf,CAAoB,UAAUsK,GAAV,EAAe;AACjC,yBAAOqE,QAAQ,CAAC,IAAD,EAAOrE,GAAP,CAAf;AACD,iBAFD,EAEG,OAFH,EAEY,UAAUrM,GAAV,EAAe;AACzB,yBAAO0Q,QAAQ,CAAC1Q,GAAD,EAAM,IAAN,CAAf;AACD,iBAJD;AAKD,eAPuB;AAQxB2Q,cAAAA,eAAe,EAAE,SAASA,eAAT,CAAyB3G,eAAzB,EAA0C0G,QAA1C,EAAoD;AACnExI,gBAAAA,gBAAgB,CAAC8B,eAAD,CAAhB,CAAkCjI,IAAlC,CAAuC,UAAUsK,GAAV,EAAe;AACpD,yBAAOqE,QAAQ,CAAC,IAAD,EAAOrE,GAAP,CAAf;AACD,iBAFD,EAEG,OAFH,EAEY,UAAUrM,GAAV,EAAe;AACzB,yBAAO0Q,QAAQ,CAAC1Q,GAAD,EAAM,IAAN,CAAf;AACD,iBAJD;AAKD,eAduB;AAexB4Q,cAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,WAAxB,EAAqCH,QAArC,EAA+C;AAC7DtI,gBAAAA,YAAY,CAACyI,WAAD,CAAZ,CAA0B9O,IAA1B,CAA+B,UAAUsK,GAAV,EAAe;AAC5C,yBAAOqE,QAAQ,CAAC,IAAD,EAAOrE,GAAP,CAAf;AACD,iBAFD,EAEG,OAFH,EAEY,UAAUrM,GAAV,EAAe;AACzB,yBAAO0Q,QAAQ,CAAC1Q,GAAD,EAAM,IAAN,CAAf;AACD,iBAJD;AAKD,eArBuB;AAsBxB8Q,cAAAA,sBAAsB,EAAE,SAASA,sBAAT,CAAgCD,WAAhC,EAA6CH,QAA7C,EAAuD;AAC7EtI,gBAAAA,YAAY,CAACyI,WAAD,CAAZ,CAA0B9O,IAA1B,CAA+B,UAAUsK,GAAV,EAAe;AAC5C,yBAAOqE,QAAQ,CAAC,IAAD,EAAOrE,GAAP,CAAf;AACD,iBAFD,EAEG,OAFH,EAEY,UAAUrM,GAAV,EAAe;AACzB,yBAAO0Q,QAAQ,CAAC1Q,GAAD,EAAM,IAAN,CAAf;AACD,iBAJD;AAKD,eA5BuB;AA6BxB+Q,cAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBF,WAArB,EAAkCH,QAAlC,EAA4C;AACvDtI,gBAAAA,YAAY,CAACyI,WAAD,CAAZ,CAA0B9O,IAA1B,CAA+B,UAAUsK,GAAV,EAAe;AAC5C,yBAAOqE,QAAQ,CAAC,IAAD,EAAOrE,GAAP,CAAf;AACD,iBAFD,EAEG,OAFH,EAEY,UAAUrM,GAAV,EAAe;AACzB,yBAAO0Q,QAAQ,CAAC1Q,GAAD,EAAM,IAAN,CAAf;AACD,iBAJD;AAKD,eAnCuB;AAoCxBgR,cAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BH,WAA7B,EAA0CH,QAA1C,EAAoD;AACvEtI,gBAAAA,YAAY,CAACyI,WAAD,CAAZ,CAA0B9O,IAA1B,CAA+B,UAAUsK,GAAV,EAAe;AAC5C,yBAAOqE,QAAQ,CAAC,IAAD,EAAOrE,GAAP,CAAf;AACD,iBAFD,EAEG,OAFH,EAEY,UAAUrM,GAAV,EAAe;AACzB,yBAAO0Q,QAAQ,CAAC1Q,GAAD,EAAM,IAAN,CAAf;AACD,iBAJD;AAKD,eA1CuB;AA2CxBwC,cAAAA,MAAM,EAAEA;AA3CgB,aAAD,CAAzB;AA6CAkE,YAAAA,aAAa,CAACuK,EAAd,CAAiBtK,YAAjB,EAA+B,UAAUuK,KAAV,EAAiB;AAC9C,kBAAIA,KAAK,CAAC1L,IAAN,KAAeoB,MAAM,CAACuK,UAA1B,EAAsC;AACpC1N,gBAAAA,QAAQ,CAACkB,IAAT;AACAnB,gBAAAA,gBAAgB,CAAC;AACf4N,kBAAAA,YAAY,EAAE,IADC;AAEfC,kBAAAA,UAAU,EAAE;AAFG,iBAAD,CAAhB;AAID;AACF,aARD;AASA5N,YAAAA,QAAQ,CAAC0D,OAAT,GAAmBA,OAAnB;AACA1D,YAAAA,QAAQ,CAACqD,KAAT,GAAiBA,KAAjB;AACArD,YAAAA,QAAQ,CAACS,MAAT,GAAkBA,MAAlB;AACAT,YAAAA,QAAQ,CAACgE,iBAAT,GAA6BA,iBAA7B;AACAhE,YAAAA,QAAQ,CAACiB,iBAAT,GAA6BA,iBAA7B;AACAjB,YAAAA,QAAQ,CAACgN,WAAT,GAAuB3I,YAAvB;AACArE,YAAAA,QAAQ,CAACmE,eAAT,GAA2BA,eAA3B;AACAnE,YAAAA,QAAQ,CAAC6B,UAAT,GAAsBA,UAAtB;AACA7B,YAAAA,QAAQ,CAACuE,WAAT,GAAuBA,WAAvB;AACAvE,YAAAA,QAAQ,CAAC6N,IAAT,GAAgB7N,QAAQ,CAACsI,SAAzB;AACAtI,YAAAA,QAAQ,CAACU,UAAT,GAAsBA,UAAtB;AACAV,YAAAA,QAAQ,CAAC4D,YAAT,GAAwBA,YAAxB;AACA,mBAAOkB,UAAU,CAACvE,MAAX,CAAkB,QAAlB,EAA4BP,QAA5B,CAAP;;AAEF,eAAK,EAAL;AACA,eAAK,KAAL;AACE,mBAAO8E,UAAU,CAAC5D,IAAX,EAAP;AA7mBJ;AA+mBD;AACF,KAlnBM,EAknBJmB,SAlnBI,CAAP;AAmnBD,GAtnBiD,CAAf,CAAnC;AAunBA,SAAOD,eAAe,CAAChI,KAAhB,CAAsB,IAAtB,EAA4BI,SAA5B,CAAP;AACD;;AAED,eAAeqE,MAAf","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      customNetwork = options.customNetwork;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  customNetwork: customNetwork,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, _yield$import, Transaction, _yield$import2, Common, ethUtil, _yield$import3, createProvider, _yield$import4, generateAddresses, isValidPath, TrezorConnect, DEVICE_EVENT, DEVICE, TREZOR_DEFAULT_PATH, networkId, email, appUrl, rpcUrl, BigNumber, networkName, customNetwork, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(transactionData) {\n                var _transactionData$gas;\n\n                var path, BN, toBuffer, common, transaction, trezorResult, v, rv, cv;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        BN = ethUtil.BN, toBuffer = ethUtil.toBuffer;\n                        common = new Common({\n                          chain: customNetwork || networkName(networkId)\n                        });\n                        transaction = Transaction.fromTxData(_objectSpread(_objectSpread({}, transactionData), {}, {\n                          gasLimit: (_transactionData$gas = transactionData.gas) !== null && _transactionData$gas !== void 0 ? _transactionData$gas : transactionData.gasLimit\n                        }), {\n                          common: common,\n                          freeze: false\n                        });\n                        transaction.v = new BN(toBuffer(networkId));\n                        transaction.r = transaction.s = new BN(toBuffer(0));\n                        _context11.next = 11;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 11:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 14;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 14:\n                        v = trezorResult.payload.v.toString(16); // EIP155 support. check/recalc signature v value.\n\n                        rv = parseInt(v, 16);\n                        cv = networkId * 2 + 35;\n\n                        if (rv !== cv && (rv & cv) !== rv) {\n                          cv += 1; // add signature v bit.\n                        }\n\n                        v = cv.toString(16);\n                        transaction.v = new BN(toBuffer(\"0x\".concat(v)));\n                        transaction.r = new BN(toBuffer(\"\".concat(trezorResult.payload.r)));\n                        transaction.s = new BN(toBuffer(\"\".concat(trezorResult.payload.s)));\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 23:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('@ethereumjs/tx');\n\n          case 28:\n            _yield$import = _context13.sent;\n            Transaction = _yield$import.Transaction;\n            _context13.next = 32;\n            return import('@ethereumjs/common');\n\n          case 32:\n            _yield$import2 = _context13.sent;\n            Common = _yield$import2[\"default\"];\n            _context13.next = 36;\n            return import('ethereumjs-util');\n\n          case 36:\n            ethUtil = _context13.sent;\n            _context13.next = 39;\n            return import('./providerEngine-771e7e5b.js');\n\n          case 39:\n            _yield$import3 = _context13.sent;\n            createProvider = _yield$import3[\"default\"];\n            _context13.next = 43;\n            return import('./hd-wallet-51018814.js');\n\n          case 43:\n            _yield$import4 = _context13.sent;\n            generateAddresses = _yield$import4.generateAddresses;\n            isValidPath = _yield$import4.isValidPath;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, customNetwork = options.customNetwork, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 69:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;"]},"metadata":{},"sourceType":"module"}