{"ast":null,"code":"// source: messages-cosmos.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\n\nvar global = function () {\n  return this;\n}.call(null);\n\nvar types_pb = require('./types_pb.js');\n\ngoog.object.extend(proto, types_pb);\ngoog.exportSymbol('proto.CosmosAddress', null, global);\ngoog.exportSymbol('proto.CosmosGetAddress', null, global);\ngoog.exportSymbol('proto.CosmosMsgAck', null, global);\ngoog.exportSymbol('proto.CosmosMsgRequest', null, global);\ngoog.exportSymbol('proto.CosmosMsgSend', null, global);\ngoog.exportSymbol('proto.CosmosSignTx', null, global);\ngoog.exportSymbol('proto.CosmosSignedTx', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.CosmosGetAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CosmosGetAddress.repeatedFields_, null);\n};\n\ngoog.inherits(proto.CosmosGetAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosGetAddress.displayName = 'proto.CosmosGetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CosmosAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CosmosAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosAddress.displayName = 'proto.CosmosAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CosmosSignTx = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CosmosSignTx.repeatedFields_, null);\n};\n\ngoog.inherits(proto.CosmosSignTx, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosSignTx.displayName = 'proto.CosmosSignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CosmosMsgRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CosmosMsgRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosMsgRequest.displayName = 'proto.CosmosMsgRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CosmosMsgAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CosmosMsgAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosMsgAck.displayName = 'proto.CosmosMsgAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CosmosMsgSend = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CosmosMsgSend, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosMsgSend.displayName = 'proto.CosmosMsgSend';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CosmosSignedTx = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CosmosSignedTx, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosSignedTx.displayName = 'proto.CosmosSignedTx';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.CosmosGetAddress.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosGetAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosGetAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosGetAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosGetAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosGetAddress}\n */\n\n\nproto.CosmosGetAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosGetAddress();\n  return proto.CosmosGetAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosGetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosGetAddress}\n */\n\n\nproto.CosmosGetAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setShowDisplay(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosGetAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosGetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosGetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosGetAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.CosmosGetAddress.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.CosmosGetAddress} returns this\n */\n\n\nproto.CosmosGetAddress.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.CosmosGetAddress} returns this\n */\n\n\nproto.CosmosGetAddress.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CosmosGetAddress} returns this\n */\n\n\nproto.CosmosGetAddress.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\n\n\nproto.CosmosGetAddress.prototype.getShowDisplay = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CosmosGetAddress} returns this\n */\n\n\nproto.CosmosGetAddress.prototype.setShowDisplay = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosGetAddress} returns this\n */\n\n\nproto.CosmosGetAddress.prototype.clearShowDisplay = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosGetAddress.prototype.hasShowDisplay = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosAddress}\n */\n\n\nproto.CosmosAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosAddress();\n  return proto.CosmosAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosAddress}\n */\n\n\nproto.CosmosAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.CosmosAddress.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosAddress} returns this\n */\n\n\nproto.CosmosAddress.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosAddress} returns this\n */\n\n\nproto.CosmosAddress.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosAddress.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.CosmosSignTx.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosSignTx.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosSignTx.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosSignTx} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosSignTx.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      accountNumber: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      chainId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      feeAmount: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      gas: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n      memo: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      sequence: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n      msgCount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosSignTx}\n */\n\n\nproto.CosmosSignTx.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosSignTx();\n  return proto.CosmosSignTx.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosSignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosSignTx}\n */\n\n\nproto.CosmosSignTx.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readUint64String();\n        msg.setAccountNumber(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setChainId(value);\n        break;\n\n      case 4:\n        var value = reader.readUint32();\n        msg.setFeeAmount(value);\n        break;\n\n      case 5:\n        var value = reader.readUint32();\n        msg.setGas(value);\n        break;\n\n      case 6:\n        var value = reader.readString();\n        msg.setMemo(value);\n        break;\n\n      case 7:\n        var value = reader.readUint64String();\n        msg.setSequence(value);\n        break;\n\n      case 8:\n        var value = reader.readUint32();\n        msg.setMsgCount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosSignTx.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosSignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosSignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosSignTx.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint64String(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeUint32(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeString(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeUint64String(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint32(8, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.CosmosSignTx.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional uint64 account_number = 2;\n * @return {string}\n */\n\n\nproto.CosmosSignTx.prototype.getAccountNumber = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setAccountNumber = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearAccountNumber = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasAccountNumber = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string chain_id = 3;\n * @return {string}\n */\n\n\nproto.CosmosSignTx.prototype.getChainId = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setChainId = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearChainId = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasChainId = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional uint32 fee_amount = 4;\n * @return {number}\n */\n\n\nproto.CosmosSignTx.prototype.getFeeAmount = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setFeeAmount = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearFeeAmount = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasFeeAmount = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 gas = 5;\n * @return {number}\n */\n\n\nproto.CosmosSignTx.prototype.getGas = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setGas = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearGas = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasGas = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional string memo = 6;\n * @return {string}\n */\n\n\nproto.CosmosSignTx.prototype.getMemo = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setMemo = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearMemo = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasMemo = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional uint64 sequence = 7;\n * @return {string}\n */\n\n\nproto.CosmosSignTx.prototype.getSequence = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setSequence = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearSequence = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasSequence = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint32 msg_count = 8;\n * @return {number}\n */\n\n\nproto.CosmosSignTx.prototype.getMsgCount = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.setMsgCount = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\n\n\nproto.CosmosSignTx.prototype.clearMsgCount = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignTx.prototype.hasMsgCount = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosMsgRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosMsgRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosMsgRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosMsgRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosMsgRequest}\n */\n\n\nproto.CosmosMsgRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosMsgRequest();\n  return proto.CosmosMsgRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosMsgRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosMsgRequest}\n */\n\n\nproto.CosmosMsgRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosMsgRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosMsgRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosMsgRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosMsgRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosMsgAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosMsgAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosMsgAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosMsgAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      send: (f = msg.getSend()) && proto.CosmosMsgSend.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosMsgAck}\n */\n\n\nproto.CosmosMsgAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosMsgAck();\n  return proto.CosmosMsgAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosMsgAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosMsgAck}\n */\n\n\nproto.CosmosMsgAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.CosmosMsgSend();\n        reader.readMessage(value, proto.CosmosMsgSend.deserializeBinaryFromReader);\n        msg.setSend(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosMsgAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosMsgAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosMsgAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosMsgAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSend();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.CosmosMsgSend.serializeBinaryToWriter);\n  }\n};\n/**\n * optional CosmosMsgSend send = 1;\n * @return {?proto.CosmosMsgSend}\n */\n\n\nproto.CosmosMsgAck.prototype.getSend = function () {\n  return jspb.Message.getWrapperField(this, proto.CosmosMsgSend, 1);\n};\n/**\n * @param {?proto.CosmosMsgSend|undefined} value\n * @return {!proto.CosmosMsgAck} returns this\n*/\n\n\nproto.CosmosMsgAck.prototype.setSend = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.CosmosMsgAck} returns this\n */\n\n\nproto.CosmosMsgAck.prototype.clearSend = function () {\n  return this.setSend(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosMsgAck.prototype.hasSend = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosMsgSend.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosMsgSend.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosMsgSend} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosMsgSend.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      fromAddress: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      toAddress: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n      amount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      addressType: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      exchangeType: (f = msg.getExchangeType()) && types_pb.ExchangeType.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosMsgSend}\n */\n\n\nproto.CosmosMsgSend.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosMsgSend();\n  return proto.CosmosMsgSend.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosMsgSend} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosMsgSend}\n */\n\n\nproto.CosmosMsgSend.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 6:\n        var value = reader.readString();\n        msg.setFromAddress(value);\n        break;\n\n      case 7:\n        var value = reader.readString();\n        msg.setToAddress(value);\n        break;\n\n      case 8:\n        var value = reader.readUint64String();\n        msg.setAmount(value);\n        break;\n\n      case 9:\n        var value = reader.readEnum();\n        msg.setAddressType(value);\n        break;\n\n      case 10:\n        var value = new types_pb.ExchangeType();\n        reader.readMessage(value, types_pb.ExchangeType.deserializeBinaryFromReader);\n        msg.setExchangeType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosMsgSend.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosMsgSend.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosMsgSend} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosMsgSend.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeString(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeString(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint64String(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeEnum(9, f);\n  }\n\n  f = message.getExchangeType();\n\n  if (f != null) {\n    writer.writeMessage(10, f, types_pb.ExchangeType.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string from_address = 6;\n * @return {string}\n */\n\n\nproto.CosmosMsgSend.prototype.getFromAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.setFromAddress = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.clearFromAddress = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosMsgSend.prototype.hasFromAddress = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional string to_address = 7;\n * @return {string}\n */\n\n\nproto.CosmosMsgSend.prototype.getToAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.setToAddress = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.clearToAddress = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosMsgSend.prototype.hasToAddress = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint64 amount = 8;\n * @return {string}\n */\n\n\nproto.CosmosMsgSend.prototype.getAmount = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.setAmount = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.clearAmount = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosMsgSend.prototype.hasAmount = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional OutputAddressType address_type = 9;\n * @return {!proto.OutputAddressType}\n */\n\n\nproto.CosmosMsgSend.prototype.getAddressType = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.setAddressType = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.clearAddressType = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosMsgSend.prototype.hasAddressType = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional ExchangeType exchange_type = 10;\n * @return {?proto.ExchangeType}\n */\n\n\nproto.CosmosMsgSend.prototype.getExchangeType = function () {\n  return jspb.Message.getWrapperField(this, types_pb.ExchangeType, 10);\n};\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.CosmosMsgSend} returns this\n*/\n\n\nproto.CosmosMsgSend.prototype.setExchangeType = function (value) {\n  return jspb.Message.setWrapperField(this, 10, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\n\n\nproto.CosmosMsgSend.prototype.clearExchangeType = function () {\n  return this.setExchangeType(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosMsgSend.prototype.hasExchangeType = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CosmosSignedTx.prototype.toObject = function (opt_includeInstance) {\n    return proto.CosmosSignedTx.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CosmosSignedTx} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CosmosSignedTx.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      publicKey: msg.getPublicKey_asB64(),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosSignedTx}\n */\n\n\nproto.CosmosSignedTx.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosSignedTx();\n  return proto.CosmosSignedTx.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosSignedTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosSignedTx}\n */\n\n\nproto.CosmosSignedTx.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setPublicKey(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosSignedTx.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosSignedTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosSignedTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CosmosSignedTx.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional bytes public_key = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.CosmosSignedTx.prototype.getPublicKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\n\n\nproto.CosmosSignedTx.prototype.getPublicKey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPublicKey());\n};\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosSignedTx.prototype.getPublicKey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPublicKey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CosmosSignedTx} returns this\n */\n\n\nproto.CosmosSignedTx.prototype.setPublicKey = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignedTx} returns this\n */\n\n\nproto.CosmosSignedTx.prototype.clearPublicKey = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignedTx.prototype.hasPublicKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.CosmosSignedTx.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.CosmosSignedTx.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.CosmosSignedTx.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CosmosSignedTx} returns this\n */\n\n\nproto.CosmosSignedTx.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignedTx} returns this\n */\n\n\nproto.CosmosSignedTx.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CosmosSignedTx.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/@keepkey/device-protocol/lib/messages-cosmos_pb.js"],"names":["jspb","require","goog","global","call","types_pb","object","extend","proto","exportSymbol","CosmosGetAddress","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","CosmosAddress","CosmosSignTx","CosmosMsgRequest","CosmosMsgAck","CosmosMsgSend","CosmosSignedTx","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","addressNList","getRepeatedField","undefined","showDisplay","getBooleanField","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","values","isDelimited","readPackedUint32","readUint32","i","length","addAddressN","value","readBool","setShowDisplay","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","getAddressNList","writeRepeatedUint32","getField","writeBool","setAddressNList","setField","opt_index","addToRepeatedField","clearAddressNList","getShowDisplay","getBooleanFieldWithDefault","clearShowDisplay","hasShowDisplay","address","readString","setAddress","writeString","getAddress","getFieldWithDefault","clearAddress","hasAddress","accountNumber","chainId","feeAmount","gas","memo","sequence","msgCount","readUint64String","setAccountNumber","setChainId","setFeeAmount","setGas","setMemo","setSequence","setMsgCount","writeUint64String","writeUint32","getAccountNumber","clearAccountNumber","hasAccountNumber","getChainId","clearChainId","hasChainId","getFeeAmount","clearFeeAmount","hasFeeAmount","getGas","clearGas","hasGas","getMemo","clearMemo","hasMemo","getSequence","clearSequence","hasSequence","getMsgCount","clearMsgCount","hasMsgCount","send","getSend","readMessage","setSend","writeMessage","getWrapperField","setWrapperField","clearSend","hasSend","fromAddress","toAddress","amount","addressType","exchangeType","getExchangeType","ExchangeType","setFromAddress","setToAddress","setAmount","readEnum","setAddressType","setExchangeType","writeEnum","getFromAddress","clearFromAddress","hasFromAddress","getToAddress","clearToAddress","hasToAddress","getAmount","clearAmount","hasAmount","getAddressType","clearAddressType","hasAddressType","clearExchangeType","hasExchangeType","publicKey","getPublicKey_asB64","signature","getSignature_asB64","readBytes","setPublicKey","setSignature","writeBytes","getPublicKey","bytesAsB64","getPublicKey_asU8","bytesAsU8","clearPublicKey","hasPublicKey","getSignature","getSignature_asU8","clearSignature","hasSignature","exports"],"mappings":"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","sourcesContent":["// source: messages-cosmos.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function(){ return this }).call(null);\n\nvar types_pb = require('./types_pb.js');\ngoog.object.extend(proto, types_pb);\ngoog.exportSymbol('proto.CosmosAddress', null, global);\ngoog.exportSymbol('proto.CosmosGetAddress', null, global);\ngoog.exportSymbol('proto.CosmosMsgAck', null, global);\ngoog.exportSymbol('proto.CosmosMsgRequest', null, global);\ngoog.exportSymbol('proto.CosmosMsgSend', null, global);\ngoog.exportSymbol('proto.CosmosSignTx', null, global);\ngoog.exportSymbol('proto.CosmosSignedTx', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosGetAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CosmosGetAddress.repeatedFields_, null);\n};\ngoog.inherits(proto.CosmosGetAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosGetAddress.displayName = 'proto.CosmosGetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CosmosAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosAddress.displayName = 'proto.CosmosAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosSignTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CosmosSignTx.repeatedFields_, null);\n};\ngoog.inherits(proto.CosmosSignTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosSignTx.displayName = 'proto.CosmosSignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosMsgRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CosmosMsgRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosMsgRequest.displayName = 'proto.CosmosMsgRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosMsgAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CosmosMsgAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosMsgAck.displayName = 'proto.CosmosMsgAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosMsgSend = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CosmosMsgSend, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosMsgSend.displayName = 'proto.CosmosMsgSend';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CosmosSignedTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CosmosSignedTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CosmosSignedTx.displayName = 'proto.CosmosSignedTx';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.CosmosGetAddress.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosGetAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosGetAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosGetAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosGetAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosGetAddress}\n */\nproto.CosmosGetAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosGetAddress;\n  return proto.CosmosGetAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosGetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosGetAddress}\n */\nproto.CosmosGetAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowDisplay(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosGetAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosGetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosGetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosGetAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.CosmosGetAddress.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.CosmosGetAddress} returns this\n */\nproto.CosmosGetAddress.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.CosmosGetAddress} returns this\n */\nproto.CosmosGetAddress.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CosmosGetAddress} returns this\n */\nproto.CosmosGetAddress.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\nproto.CosmosGetAddress.prototype.getShowDisplay = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CosmosGetAddress} returns this\n */\nproto.CosmosGetAddress.prototype.setShowDisplay = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosGetAddress} returns this\n */\nproto.CosmosGetAddress.prototype.clearShowDisplay = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosGetAddress.prototype.hasShowDisplay = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosAddress}\n */\nproto.CosmosAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosAddress;\n  return proto.CosmosAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosAddress}\n */\nproto.CosmosAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.CosmosAddress.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosAddress} returns this\n */\nproto.CosmosAddress.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosAddress} returns this\n */\nproto.CosmosAddress.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosAddress.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.CosmosSignTx.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosSignTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosSignTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosSignTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosSignTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    accountNumber: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    chainId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    feeAmount: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    gas: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n    memo: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    sequence: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n    msgCount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosSignTx}\n */\nproto.CosmosSignTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosSignTx;\n  return proto.CosmosSignTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosSignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosSignTx}\n */\nproto.CosmosSignTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setAccountNumber(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeAmount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setGas(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setSequence(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMsgCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosSignTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosSignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosSignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosSignTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeUint64String(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.CosmosSignTx.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional uint64 account_number = 2;\n * @return {string}\n */\nproto.CosmosSignTx.prototype.getAccountNumber = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setAccountNumber = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearAccountNumber = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasAccountNumber = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string chain_id = 3;\n * @return {string}\n */\nproto.CosmosSignTx.prototype.getChainId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setChainId = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearChainId = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasChainId = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint32 fee_amount = 4;\n * @return {number}\n */\nproto.CosmosSignTx.prototype.getFeeAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setFeeAmount = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearFeeAmount = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasFeeAmount = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint32 gas = 5;\n * @return {number}\n */\nproto.CosmosSignTx.prototype.getGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setGas = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearGas = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasGas = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string memo = 6;\n * @return {string}\n */\nproto.CosmosSignTx.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setMemo = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearMemo = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasMemo = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional uint64 sequence = 7;\n * @return {string}\n */\nproto.CosmosSignTx.prototype.getSequence = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setSequence = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearSequence = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasSequence = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint32 msg_count = 8;\n * @return {number}\n */\nproto.CosmosSignTx.prototype.getMsgCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.setMsgCount = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignTx} returns this\n */\nproto.CosmosSignTx.prototype.clearMsgCount = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignTx.prototype.hasMsgCount = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosMsgRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosMsgRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosMsgRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosMsgRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosMsgRequest}\n */\nproto.CosmosMsgRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosMsgRequest;\n  return proto.CosmosMsgRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosMsgRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosMsgRequest}\n */\nproto.CosmosMsgRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosMsgRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosMsgRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosMsgRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosMsgRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosMsgAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosMsgAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosMsgAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosMsgAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    send: (f = msg.getSend()) && proto.CosmosMsgSend.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosMsgAck}\n */\nproto.CosmosMsgAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosMsgAck;\n  return proto.CosmosMsgAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosMsgAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosMsgAck}\n */\nproto.CosmosMsgAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.CosmosMsgSend;\n      reader.readMessage(value,proto.CosmosMsgSend.deserializeBinaryFromReader);\n      msg.setSend(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosMsgAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosMsgAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosMsgAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosMsgAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSend();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.CosmosMsgSend.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional CosmosMsgSend send = 1;\n * @return {?proto.CosmosMsgSend}\n */\nproto.CosmosMsgAck.prototype.getSend = function() {\n  return /** @type{?proto.CosmosMsgSend} */ (\n    jspb.Message.getWrapperField(this, proto.CosmosMsgSend, 1));\n};\n\n\n/**\n * @param {?proto.CosmosMsgSend|undefined} value\n * @return {!proto.CosmosMsgAck} returns this\n*/\nproto.CosmosMsgAck.prototype.setSend = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.CosmosMsgAck} returns this\n */\nproto.CosmosMsgAck.prototype.clearSend = function() {\n  return this.setSend(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosMsgAck.prototype.hasSend = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosMsgSend.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosMsgSend.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosMsgSend} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosMsgSend.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fromAddress: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    toAddress: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n    amount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    addressType: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    exchangeType: (f = msg.getExchangeType()) && types_pb.ExchangeType.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosMsgSend}\n */\nproto.CosmosMsgSend.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosMsgSend;\n  return proto.CosmosMsgSend.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosMsgSend} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosMsgSend}\n */\nproto.CosmosMsgSend.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFromAddress(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToAddress(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setAmount(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.OutputAddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 10:\n      var value = new types_pb.ExchangeType;\n      reader.readMessage(value,types_pb.ExchangeType.deserializeBinaryFromReader);\n      msg.setExchangeType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosMsgSend.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosMsgSend.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosMsgSend} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosMsgSend.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint64String(\n      8,\n      f\n    );\n  }\n  f = /** @type {!proto.OutputAddressType} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n  f = message.getExchangeType();\n  if (f != null) {\n    writer.writeMessage(\n      10,\n      f,\n      types_pb.ExchangeType.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string from_address = 6;\n * @return {string}\n */\nproto.CosmosMsgSend.prototype.getFromAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.setFromAddress = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.clearFromAddress = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosMsgSend.prototype.hasFromAddress = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional string to_address = 7;\n * @return {string}\n */\nproto.CosmosMsgSend.prototype.getToAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.setToAddress = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.clearToAddress = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosMsgSend.prototype.hasToAddress = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint64 amount = 8;\n * @return {string}\n */\nproto.CosmosMsgSend.prototype.getAmount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.setAmount = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.clearAmount = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosMsgSend.prototype.hasAmount = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional OutputAddressType address_type = 9;\n * @return {!proto.OutputAddressType}\n */\nproto.CosmosMsgSend.prototype.getAddressType = function() {\n  return /** @type {!proto.OutputAddressType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.setAddressType = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.clearAddressType = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosMsgSend.prototype.hasAddressType = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional ExchangeType exchange_type = 10;\n * @return {?proto.ExchangeType}\n */\nproto.CosmosMsgSend.prototype.getExchangeType = function() {\n  return /** @type{?proto.ExchangeType} */ (\n    jspb.Message.getWrapperField(this, types_pb.ExchangeType, 10));\n};\n\n\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.CosmosMsgSend} returns this\n*/\nproto.CosmosMsgSend.prototype.setExchangeType = function(value) {\n  return jspb.Message.setWrapperField(this, 10, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.CosmosMsgSend} returns this\n */\nproto.CosmosMsgSend.prototype.clearExchangeType = function() {\n  return this.setExchangeType(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosMsgSend.prototype.hasExchangeType = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CosmosSignedTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.CosmosSignedTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CosmosSignedTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosSignedTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    publicKey: msg.getPublicKey_asB64(),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CosmosSignedTx}\n */\nproto.CosmosSignedTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CosmosSignedTx;\n  return proto.CosmosSignedTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CosmosSignedTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CosmosSignedTx}\n */\nproto.CosmosSignedTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CosmosSignedTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CosmosSignedTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CosmosSignedTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CosmosSignedTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes public_key = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.CosmosSignedTx.prototype.getPublicKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.CosmosSignedTx.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.CosmosSignedTx.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CosmosSignedTx} returns this\n */\nproto.CosmosSignedTx.prototype.setPublicKey = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignedTx} returns this\n */\nproto.CosmosSignedTx.prototype.clearPublicKey = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignedTx.prototype.hasPublicKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.CosmosSignedTx.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.CosmosSignedTx.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.CosmosSignedTx.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CosmosSignedTx} returns this\n */\nproto.CosmosSignedTx.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CosmosSignedTx} returns this\n */\nproto.CosmosSignedTx.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CosmosSignedTx.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"script"}