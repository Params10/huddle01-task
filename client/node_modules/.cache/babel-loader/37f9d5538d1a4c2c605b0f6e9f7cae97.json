{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patchTags = void 0;\n\nconst lib_1 = require(\"./lib\");\n\nconst alreadyPatchedTag = [];\n\nconst patchTags = tags => {\n  tags.forEach(tag => {\n    if (alreadyPatchedTag.find(i => i === tag)) return;\n    lib_1.addSemanticEncode(tag, data => {\n      if (data instanceof lib_1.DataItem) {\n        if (data.getTag() === tag) {\n          return data.getData();\n        }\n      }\n    });\n    lib_1.addSemanticDecode(tag, data => {\n      return new lib_1.DataItem(data, tag);\n    });\n    alreadyPatchedTag.push(tag);\n  });\n};\n\nexports.patchTags = patchTags;","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,MAAM,iBAAiB,GAAG,EAA1B;;AACO,MAAM,SAAS,GAAI,IAAD,IAAmB;AAC1C,EAAA,IAAI,CAAC,OAAL,CAAc,GAAD,IAAQ;AACnB,QAAI,iBAAiB,CAAC,IAAlB,CAAwB,CAAD,IAAO,CAAC,KAAK,GAApC,CAAJ,EAA8C;AAC9C,IAAA,KAAA,CAAA,iBAAA,CAAkB,GAAlB,EAAwB,IAAD,IAAc;AACnC,UAAI,IAAI,YAAY,KAAA,CAAA,QAApB,EAA8B;AAC5B,YAAI,IAAI,CAAC,MAAL,OAAkB,GAAtB,EAA2B;AACzB,iBAAO,IAAI,CAAC,OAAL,EAAP;AACD;AACF;AACF,KAND;AAOA,IAAA,KAAA,CAAA,iBAAA,CAAkB,GAAlB,EAAwB,IAAD,IAAc;AACnC,aAAO,IAAI,KAAA,CAAA,QAAJ,CAAa,IAAb,EAAmB,GAAnB,CAAP;AACD,KAFD;AAGA,IAAA,iBAAiB,CAAC,IAAlB,CAAuB,GAAvB;AACD,GAbD;AAcD,CAfM;;AAAM,OAAA,CAAA,SAAA,GAAS,SAAT","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.patchTags = void 0;\nconst lib_1 = require(\"./lib\");\nconst alreadyPatchedTag = [];\nconst patchTags = (tags) => {\n    tags.forEach((tag) => {\n        if (alreadyPatchedTag.find((i) => i === tag))\n            return;\n        lib_1.addSemanticEncode(tag, (data) => {\n            if (data instanceof lib_1.DataItem) {\n                if (data.getTag() === tag) {\n                    return data.getData();\n                }\n            }\n        });\n        lib_1.addSemanticDecode(tag, (data) => {\n            return new lib_1.DataItem(data, tag);\n        });\n        alreadyPatchedTag.push(tag);\n    });\n};\nexports.patchTags = patchTags;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}