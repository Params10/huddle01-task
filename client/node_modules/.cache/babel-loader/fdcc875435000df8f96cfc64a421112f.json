{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BncClient = exports.DefaultBroadcastDelegate = exports.DefaultSigningDelegate = exports.NETWORK_PREFIX_MAPPING = exports.api = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _big = _interopRequireDefault(require(\"big.js\"));\n\nvar crypto = _interopRequireWildcard(require(\"../crypto\"));\n\nvar _tx = _interopRequireDefault(require(\"../tx\"));\n\nvar _types = require(\"../types/\");\n\nvar _request = _interopRequireDefault(require(\"../utils/request\"));\n\nvar _validateHelper = require(\"../utils/validateHelper\");\n\nvar _gov = _interopRequireDefault(require(\"./gov\"));\n\nvar _swap = _interopRequireDefault(require(\"./swap\"));\n\nvar _token = _interopRequireWildcard(require(\"./token\"));\n\nvar _bridge = require(\"./bridge\");\n\nvar _stake = require(\"./stake\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar BASENUMBER = Math.pow(10, 8);\nvar api = {\n  broadcast: \"/api/v1/broadcast\",\n  nodeInfo: \"/api/v1/node-info\",\n  getAccount: \"/api/v1/account\",\n  getMarkets: \"/api/v1/markets\",\n  getSwaps: \"/api/v1/atomic-swaps\",\n  getOpenOrders: \"/api/v1/orders/open\",\n  getDepth: \"/api/v1/depth\",\n  getTransactions: \"/api/v1/transactions\",\n  getTx: \"/api/v1/tx\"\n};\nexports.api = api;\nvar NETWORK_PREFIX_MAPPING = {\n  testnet: \"tbnb\",\n  mainnet: \"bnb\"\n};\nexports.NETWORK_PREFIX_MAPPING = NETWORK_PREFIX_MAPPING;\n/**\n * The default signing delegate which uses the local private key.\n * @param  {Transaction} tx      the transaction\n * @param  {Object}      signMsg the canonical sign bytes for the msg\n * @return {Transaction}\n */\n\nvar DefaultSigningDelegate = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(tx, signMsg) {\n    var privateKey;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            privateKey = this.getPrivateKey();\n\n            if (privateKey) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(\"Private key has to be set before signing a transaction\"));\n\n          case 3:\n            return _context.abrupt(\"return\", tx.sign(privateKey, signMsg));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function DefaultSigningDelegate(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * The default broadcast delegate which immediately broadcasts a transaction.\n * @param {Transaction} signedTx the signed transaction\n */\n\n\nexports.DefaultSigningDelegate = DefaultSigningDelegate;\n\nvar DefaultBroadcastDelegate = /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(signedTx) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", this.sendTransaction(signedTx, true));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function DefaultBroadcastDelegate(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // /**\n//  * The Ledger signing delegate.\n//  * @param  {LedgerApp}  ledgerApp\n//  * @param  {preSignCb}  function\n//  * @param  {postSignCb} function\n//  * @param  {errCb} function\n//  * @return {function}\n//  */\n// export const LedgerSigningDelegate = (\n//   ledgerApp: LedgerApp,\n//   preSignCb: (preSignCb: Buffer) => void,\n//   postSignCb: (pubKeyResp: PublicKey, sigResp: SignedSignature) => void,\n//   errCb: (error: any) => void,\n//   hdPath: number[]\n// ): typeof DefaultSigningDelegate =>\n//   async function (tx, signMsg) {\n//     const signBytes = tx.getSignBytes(signMsg)\n//     preSignCb && preSignCb(signBytes)\n//     let pubKeyResp: PublicKey, sigResp: SignedSignature\n//     try {\n//       pubKeyResp = await ledgerApp.getPublicKey(hdPath)\n//       sigResp = await ledgerApp.sign(signBytes, hdPath)\n//       postSignCb && postSignCb(pubKeyResp, sigResp)\n//     } catch (err) {\n//       console.warn(\"LedgerSigningDelegate error\", err)\n//       errCb && errCb(err)\n//     }\n//     if (sigResp! && sigResp!.signature) {\n//       const pubKey = crypto.getPublicKey(pubKeyResp!.pk!.toString(\"hex\"))\n//       return tx.addSignature(pubKey, sigResp!.signature)\n//     }\n//     return tx\n//   }\n\n/**\n * validate the input number.\n * @param {Array} outputs\n */\n\n\nexports.DefaultBroadcastDelegate = DefaultBroadcastDelegate;\n\nvar checkOutputs = function checkOutputs(outputs) {\n  outputs.forEach(function (transfer) {\n    var coins = transfer.coins || [];\n    coins.forEach(function (coin) {\n      (0, _validateHelper.checkNumber)(coin.amount);\n\n      if (!coin.denom) {\n        throw new Error(\"invalid denmon\");\n      }\n    });\n  });\n};\n/**\n * sum corresponding input coin\n * @param {Array} inputs\n * @param {Array} coins\n */\n\n\nvar calInputCoins = function calInputCoins(inputs, coins) {\n  coins.forEach(function (coin) {\n    var existCoin = inputs[0].coins.find(function (c) {\n      return c.denom === coin.denom;\n    });\n\n    if (existCoin) {\n      var existAmount = new _big[\"default\"](existCoin.amount);\n      existCoin.amount = Number(existAmount.plus(coin.amount).toString());\n    } else {\n      inputs[0].coins.push(_objectSpread({}, coin));\n    }\n  });\n};\n/**\n * The Binance Chain client.\n */\n\n\nvar BncClient = /*#__PURE__*/function () {\n  /**\n   * @param {String} server Binance Chain public url\n   * @param {Boolean} useAsyncBroadcast use async broadcast mode, faster but less guarantees (default off)\n   * @param {Number} source where does this transaction come from (default 0)\n   */\n  function BncClient(server) {\n    var useAsyncBroadcast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    (0, _classCallCheck2[\"default\"])(this, BncClient);\n    (0, _defineProperty2[\"default\"])(this, \"_httpClient\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_signingDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_broadcastDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_useAsyncBroadcast\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_source\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"tokens\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"swap\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"gov\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"bridge\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"stake\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"chainId\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"addressPrefix\", \"tbnb\");\n    (0, _defineProperty2[\"default\"])(this, \"network\", \"testnet\");\n    (0, _defineProperty2[\"default\"])(this, \"address\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_setPkPromise\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"account_number\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_privateKey\", null);\n\n    if (!server) {\n      throw new Error(\"Binance chain server should not be null\");\n    }\n\n    this._httpClient = new _request[\"default\"](server);\n    this._signingDelegate = DefaultSigningDelegate;\n    this._broadcastDelegate = DefaultBroadcastDelegate;\n    this._useAsyncBroadcast = useAsyncBroadcast;\n    this._source = source;\n    this.tokens = new _token[\"default\"](this);\n    this.swap = new _swap[\"default\"](this);\n    this.gov = new _gov[\"default\"](this);\n    this.bridge = new _bridge.Bridge(this);\n    this.stake = new _stake.Stake(this);\n  }\n  /**\n   * Initialize the client with the chain's ID. Asynchronous.\n   * @return {Promise}\n   */\n\n\n  (0, _createClass2[\"default\"])(BncClient, [{\n    key: \"initChain\",\n    value: function () {\n      var _initChain = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.chainId) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this._httpClient.request(\"get\", api.nodeInfo);\n\n              case 3:\n                data = _context3.sent;\n                this.chainId = data.result.node_info && data.result.node_info.network;\n\n              case 5:\n                return _context3.abrupt(\"return\", this);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function initChain() {\n        return _initChain.apply(this, arguments);\n      }\n\n      return initChain;\n    }()\n    /**\n     * Sets the client network (testnet or mainnet).\n     * @param {String} network Indicate testnet or mainnet\n     */\n\n  }, {\n    key: \"chooseNetwork\",\n    value: function chooseNetwork(network) {\n      this.addressPrefix = NETWORK_PREFIX_MAPPING[network] || \"tbnb\";\n      this.network = NETWORK_PREFIX_MAPPING[network] ? network : \"testnet\";\n    }\n    /**\n     * Sets the client's private key for calls made by this client. Asynchronous.\n     * @param {string} privateKey the private key hexstring\n     * @param {boolean} localOnly set this to true if you will supply an account_number yourself via `setAccountNumber`. Warning: You must do that if you set this to true!\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"setPrivateKey\",\n    value: function () {\n      var _setPrivateKey = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(privateKey) {\n        var localOnly,\n            address,\n            promise,\n            data,\n            _args4 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                localOnly = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n\n                if (!(privateKey !== this._privateKey)) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n\n                if (address) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                throw new Error(\"address is falsy: \".concat(address, \". invalid private key?\"));\n\n              case 5:\n                this._privateKey = privateKey;\n                this.address = address;\n\n                if (localOnly) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                _context4.prev = 8;\n                promise = this._setPkPromise = this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n                _context4.next = 12;\n                return promise;\n\n              case 12:\n                data = _context4.sent;\n                this.account_number = data.result.account_number;\n                _context4.next = 19;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](8);\n                throw new Error(\"unable to query the address on the blockchain. try sending it some funds first: \".concat(address));\n\n              case 19:\n                return _context4.abrupt(\"return\", this);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[8, 16]]);\n      }));\n\n      function setPrivateKey(_x6) {\n        return _setPrivateKey.apply(this, arguments);\n      }\n\n      return setPrivateKey;\n    }()\n    /**\n     * Removes client's private key.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"removePrivateKey\",\n    value: function removePrivateKey() {\n      this._privateKey = null;\n      return this;\n    }\n    /**\n     * Gets client's private key.\n     * @return {string|null} the private key hexstring or `null` if no private key has been set\n     */\n\n  }, {\n    key: \"getPrivateKey\",\n    value: function getPrivateKey() {\n      return this._privateKey;\n    }\n    /**\n     * Sets the client's account number.\n     * @param {number} accountNumber\n     */\n\n  }, {\n    key: \"setAccountNumber\",\n    value: function setAccountNumber(accountNumber) {\n      this.account_number = accountNumber;\n    }\n    /**\n     * Use async broadcast mode. Broadcasts faster with less guarantees (default off)\n     * @param {Boolean} useAsyncBroadcast\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useAsyncBroadcast\",\n    value: function useAsyncBroadcast() {\n      var _useAsyncBroadcast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._useAsyncBroadcast = _useAsyncBroadcast;\n      return this;\n    }\n    /**\n     * Sets the signing delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setSigningDelegate\",\n    value: function setSigningDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"signing delegate must be a function\");\n      this._signingDelegate = delegate;\n      return this;\n    }\n    /**\n     * Sets the broadcast delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setBroadcastDelegate\",\n    value: function setBroadcastDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"broadcast delegate must be a function\");\n      this._broadcastDelegate = delegate;\n      return this;\n    }\n    /**\n     * Applies the default signing delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultSigningDelegate\",\n    value: function useDefaultSigningDelegate() {\n      this._signingDelegate = DefaultSigningDelegate;\n      return this;\n    }\n    /**\n     * Applies the default broadcast delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultBroadcastDelegate\",\n    value: function useDefaultBroadcastDelegate() {\n      this._broadcastDelegate = DefaultBroadcastDelegate;\n      return this;\n    }\n    /**\n     * Applies the Ledger signing delegate.\n     * @param {function} ledgerApp\n     * @param {function} preSignCb\n     * @param {function} postSignCb\n     * @param {function} errCb\n     * @return {BncClient} this instance (for chaining)\n     */\n    // useLedgerSigningDelegate(...args: Parameters<typeof LedgerSigningDelegate>) {\n    //   this._signingDelegate = LedgerSigningDelegate(...args)\n    //   return this\n    // }\n\n    /**\n     * Transfer tokens from one address to another.\n     * @param {String} fromAddress\n     * @param {String} toAddress\n     * @param {Number} amount\n     * @param {String} asset\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(fromAddress, toAddress, amount, asset) {\n        var memo,\n            sequence,\n            accCode,\n            toAccCode,\n            coin,\n            msg,\n            signMsg,\n            signedTx,\n            signedBz,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                memo = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : \"\";\n                sequence = _args5.length > 5 && _args5[5] !== undefined ? _args5[5] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                toAccCode = crypto.decodeAddress(toAddress);\n                amount = new _big[\"default\"](amount);\n                amount = Number(amount.mul(BASENUMBER).toString());\n                (0, _validateHelper.checkNumber)(amount, \"amount\");\n                coin = {\n                  denom: asset,\n                  amount: amount\n                };\n                msg = {\n                  inputs: [{\n                    address: accCode,\n                    coins: [coin]\n                  }],\n                  outputs: [{\n                    address: toAccCode,\n                    coins: [coin]\n                  }],\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signMsg = {\n                  inputs: [{\n                    address: fromAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }],\n                  outputs: [{\n                    address: toAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }]\n                };\n                _context5.next = 12;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 12:\n                signedTx = _context5.sent;\n                signedBz = signedTx.serialize(); // @ts-ignore\n\n                signedTx.serialized = signedBz;\n                return _context5.abrupt(\"return\", signedTx);\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function transfer(_x7, _x8, _x9, _x10) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n    /**\n     * Create and sign a multi send tx\n     * @param {String} fromAddress\n     * @param {Array} outputs\n     * @example\n     * const outputs = [\n     * {\n     *   \"to\": \"tbnb1p4kpnj5qz5spsaf0d2555h6ctngse0me5q57qe\",\n     *   \"coins\": [{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   }]\n     * },\n     * {\n     *   \"to\": \"tbnb1scjj8chhhp7lngdeflltzex22yaf9ep59ls4gk\",\n     *   \"coins\": [{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   }]\n     * }]\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"multiSend\",\n    value: function () {\n      var _multiSend = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(fromAddress, outputs) {\n        var memo,\n            sequence,\n            fromAddrCode,\n            inputs,\n            transfers,\n            msg,\n            signInputs,\n            signOutputs,\n            signMsg,\n            signedTx,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                memo = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : \"\";\n                sequence = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : null;\n\n                if (fromAddress) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                throw new Error(\"fromAddress should not be falsy\");\n\n              case 4:\n                if (Array.isArray(outputs)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                throw new Error(\"outputs should be array\");\n\n              case 6:\n                checkOutputs(outputs); //sort denom by alphbet and init amount\n\n                outputs.forEach(function (item) {\n                  item.coins = item.coins.sort(function (a, b) {\n                    return a.denom.localeCompare(b.denom);\n                  });\n                  item.coins.forEach(function (coin) {\n                    var amount = new _big[\"default\"](coin.amount);\n                    coin.amount = Number(amount.mul(BASENUMBER).toString());\n                  });\n                });\n                fromAddrCode = crypto.decodeAddress(fromAddress);\n                inputs = [{\n                  address: fromAddrCode,\n                  coins: []\n                }];\n                transfers = [];\n                outputs.forEach(function (item) {\n                  var toAddcCode = crypto.decodeAddress(item.to);\n                  calInputCoins(inputs, item.coins);\n                  transfers.push({\n                    address: toAddcCode,\n                    coins: item.coins\n                  });\n                });\n                msg = {\n                  inputs: inputs,\n                  outputs: transfers,\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signInputs = [{\n                  address: fromAddress,\n                  coins: []\n                }];\n                signOutputs = [];\n                outputs.forEach(function (item, index) {\n                  signOutputs.push({\n                    address: item.to,\n                    coins: []\n                  });\n                  item.coins.forEach(function (c) {\n                    signOutputs[index].coins.push(c);\n                  });\n                  calInputCoins(signInputs, item.coins);\n                });\n                signMsg = {\n                  inputs: signInputs,\n                  outputs: signOutputs\n                };\n                _context6.next = 19;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 19:\n                signedTx = _context6.sent;\n                return _context6.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 21:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function multiSend(_x11, _x12) {\n        return _multiSend.apply(this, arguments);\n      }\n\n      return multiSend;\n    }()\n    /**\n     * Cancel an order.\n     * @param {String} fromAddress\n     * @param {String} symbol the market pair\n     * @param {String} refid the order ID of the order to cancel\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"cancelOrder\",\n    value: function () {\n      var _cancelOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(fromAddress, symbol, refid) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                sequence = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                msg = {\n                  sender: accCode,\n                  symbol: symbol,\n                  refid: refid,\n                  aminoPrefix: _types.AminoPrefix.CancelOrderMsg\n                };\n                signMsg = {\n                  refid: refid,\n                  sender: fromAddress,\n                  symbol: symbol\n                };\n                _context7.next = 6;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, \"\");\n\n              case 6:\n                signedTx = _context7.sent;\n                return _context7.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function cancelOrder(_x13, _x14, _x15) {\n        return _cancelOrder.apply(this, arguments);\n      }\n\n      return cancelOrder;\n    }()\n    /**\n     * Place an order.\n     * @param {String} address\n     * @param {String} symbol the market pair\n     * @param {Number} side (1-Buy, 2-Sell)\n     * @param {Number} price\n     * @param {Number} quantity\n     * @param {Number} sequence optional sequence\n     * @param {Number} timeinforce (1-GTC(Good Till Expire), 3-IOC(Immediate or Cancel))\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"placeOrder\",\n    value: function () {\n      var _placeOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n        var address,\n            symbol,\n            side,\n            price,\n            quantity,\n            sequence,\n            timeinforce,\n            accCode,\n            data,\n            bigPrice,\n            bigQuantity,\n            placeOrderMsg,\n            signMsg,\n            signedTx,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                address = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : this.address;\n                symbol = _args8.length > 1 ? _args8[1] : undefined;\n                side = _args8.length > 2 ? _args8[2] : undefined;\n                price = _args8.length > 3 ? _args8[3] : undefined;\n                quantity = _args8.length > 4 ? _args8[4] : undefined;\n                sequence = _args8.length > 5 && _args8[5] !== undefined ? _args8[5] : null;\n                timeinforce = _args8.length > 6 && _args8[6] !== undefined ? _args8[6] : 1;\n\n                if (address) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 9:\n                if (symbol) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                throw new Error(\"symbol should not be falsy\");\n\n              case 11:\n                if (!(side !== 1 && side !== 2)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                throw new Error(\"side can only be 1 or 2\");\n\n              case 13:\n                if (!(timeinforce !== 1 && timeinforce !== 3)) {\n                  _context8.next = 15;\n                  break;\n                }\n\n                throw new Error(\"timeinforce can only be 1 or 3\");\n\n              case 15:\n                accCode = crypto.decodeAddress(address);\n\n                if (!(sequence !== 0 && !sequence)) {\n                  _context8.next = 21;\n                  break;\n                }\n\n                _context8.next = 19;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 19:\n                data = _context8.sent;\n                sequence = data.result && data.result.sequence;\n\n              case 21:\n                bigPrice = new _big[\"default\"](price);\n                bigQuantity = new _big[\"default\"](quantity);\n                placeOrderMsg = {\n                  sender: accCode,\n                  id: \"\".concat(accCode.toString(\"hex\"), \"-\").concat(sequence + 1).toUpperCase(),\n                  symbol: symbol,\n                  ordertype: 2,\n                  side: side,\n                  price: parseFloat(bigPrice.mul(BASENUMBER).toString()),\n                  quantity: parseFloat(bigQuantity.mul(BASENUMBER).toString()),\n                  timeinforce: timeinforce,\n                  aminoPrefix: _types.AminoPrefix.NewOrderMsg\n                };\n                signMsg = {\n                  id: placeOrderMsg.id,\n                  ordertype: placeOrderMsg.ordertype,\n                  price: placeOrderMsg.price,\n                  quantity: placeOrderMsg.quantity,\n                  sender: address,\n                  side: placeOrderMsg.side,\n                  symbol: placeOrderMsg.symbol,\n                  timeinforce: timeinforce\n                };\n                (0, _validateHelper.checkNumber)(placeOrderMsg.price, \"price\");\n                (0, _validateHelper.checkNumber)(placeOrderMsg.quantity, \"quantity\");\n                _context8.next = 29;\n                return this._prepareTransaction(placeOrderMsg, signMsg, address, sequence, \"\");\n\n              case 29:\n                signedTx = _context8.sent;\n                return _context8.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 31:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function placeOrder() {\n        return _placeOrder.apply(this, arguments);\n      }\n\n      return placeOrder;\n    }()\n    /**\n     * @param {String} address\n     * @param {Number} proposalId\n     * @param {String} baseAsset\n     * @param {String} quoteAsset\n     * @param {Number} initPrice\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(address, proposalId, baseAsset, quoteAsset, initPrice) {\n        var sequence,\n            accCode,\n            init_price,\n            listMsg,\n            signMsg,\n            signedTx,\n            _args9 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                sequence = _args9.length > 5 && _args9[5] !== undefined ? _args9[5] : null;\n                accCode = crypto.decodeAddress(address);\n\n                if (address) {\n                  _context9.next = 4;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 4:\n                if (!(proposalId <= 0)) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                throw new Error(\"proposal id should larger than 0\");\n\n              case 6:\n                if (!(initPrice <= 0)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 8:\n                if (baseAsset) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                throw new Error(\"baseAsset should not be falsy\");\n\n              case 10:\n                if (quoteAsset) {\n                  _context9.next = 12;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 12:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMsg = {\n                  from: accCode,\n                  proposal_id: proposalId,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price,\n                  aminoPrefix: _types.AminoPrefix.ListMsg\n                };\n                signMsg = {\n                  base_asset_symbol: baseAsset,\n                  from: address,\n                  init_price: init_price,\n                  proposal_id: proposalId,\n                  quote_asset_symbol: quoteAsset\n                };\n                _context9.next = 17;\n                return this._prepareTransaction(listMsg, signMsg, address, sequence, \"\");\n\n              case 17:\n                signedTx = _context9.sent;\n                return _context9.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function list(_x16, _x17, _x18, _x19, _x20) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n    /**\n     * list miniToken\n     */\n\n  }, {\n    key: \"listMiniToken\",\n    value: function () {\n      var _listMiniToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(_ref3) {\n        var from, baseAsset, quoteAsset, initPrice, _ref3$sequence, sequence, init_price, listMiniMsg, signedTx;\n\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                from = _ref3.from, baseAsset = _ref3.baseAsset, quoteAsset = _ref3.quoteAsset, initPrice = _ref3.initPrice, _ref3$sequence = _ref3.sequence, sequence = _ref3$sequence === void 0 ? null : _ref3$sequence;\n                (0, _token.validateMiniTokenSymbol)(baseAsset);\n\n                if (!(initPrice <= 0)) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 4:\n                if (from) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 6:\n                if (quoteAsset) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 8:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMiniMsg = new _types.ListMiniMsg({\n                  from: from,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price\n                });\n                _context10.next = 12;\n                return this._prepareTransaction(listMiniMsg.getMsg(), listMiniMsg.getSignMsg(), from, sequence);\n\n              case 12:\n                signedTx = _context10.sent;\n                return _context10.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 14:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function listMiniToken(_x21) {\n        return _listMiniToken.apply(this, arguments);\n      }\n\n      return listMiniToken;\n    }()\n    /**\n     * Set account flags\n     * @param {String} address\n     * @param {Number} flags new value of account flags\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"setAccountFlags\",\n    value: function () {\n      var _setAccountFlags = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(address, flags) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args11 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                sequence = _args11.length > 2 && _args11[2] !== undefined ? _args11[2] : null;\n                accCode = crypto.decodeAddress(address);\n                msg = {\n                  from: accCode,\n                  flags: flags,\n                  aminoPrefix: _types.AminoPrefix.SetAccountFlagsMsg\n                };\n                signMsg = {\n                  flags: flags,\n                  from: address\n                };\n                _context11.next = 6;\n                return this._prepareTransaction(msg, signMsg, address, sequence, \"\");\n\n              case 6:\n                signedTx = _context11.sent;\n                return _context11.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function setAccountFlags(_x22, _x23) {\n        return _setAccountFlags.apply(this, arguments);\n      }\n\n      return setAccountFlags;\n    }()\n    /**\n     * Prepare a serialized raw transaction for sending to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @return {Transaction} signed transaction\n     */\n\n  }, {\n    key: \"_prepareTransaction\",\n    value: function () {\n      var _prepareTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            data,\n            tx,\n            _args12 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                sequence = _args12.length > 3 && _args12[3] !== undefined ? _args12[3] : null;\n                memo = _args12.length > 4 && _args12[4] !== undefined ? _args12[4] : \"\";\n\n                if (!((!this.account_number || sequence !== 0 && !sequence) && address)) {\n                  _context12.next = 10;\n                  break;\n                }\n\n                _context12.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 5:\n                data = _context12.sent;\n                sequence = data.result.sequence;\n                this.account_number = data.result.account_number; // if user has not used `await` in its call to setPrivateKey (old API), we should wait for the promise here\n\n                _context12.next = 13;\n                break;\n\n              case 10:\n                if (!this._setPkPromise) {\n                  _context12.next = 13;\n                  break;\n                }\n\n                _context12.next = 13;\n                return this._setPkPromise;\n\n              case 13:\n                tx = new _tx[\"default\"]({\n                  accountNumber: typeof this.account_number !== \"number\" ? parseInt(this.account_number) : this.account_number,\n                  chainId: this.chainId,\n                  memo: memo,\n                  msg: msg,\n                  sequence: typeof sequence !== \"number\" ? parseInt(sequence) : sequence,\n                  source: this._source\n                });\n                return _context12.abrupt(\"return\", this._signingDelegate.call(this, tx, stdSignMsg));\n\n              case 15:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _prepareTransaction(_x24, _x25, _x26) {\n        return _prepareTransaction2.apply(this, arguments);\n      }\n\n      return _prepareTransaction;\n    }()\n    /**\n     * Broadcast a transaction to the blockchain.\n     * @param {signedTx} tx signed Transaction object\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(signedTx, sync) {\n        var signedBz;\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                signedBz = signedTx.serialize();\n                return _context13.abrupt(\"return\", this.sendRawTransaction(signedBz, sync));\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function sendTransaction(_x27, _x28) {\n        return _sendTransaction2.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {String} signedBz signed and serialized raw transaction\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendRawTransaction\",\n    value: function () {\n      var _sendRawTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(signedBz) {\n        var sync,\n            opts,\n            _args14 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                sync = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : !this._useAsyncBroadcast;\n                opts = {\n                  data: signedBz,\n                  headers: {\n                    \"content-type\": \"text/plain\"\n                  }\n                };\n                return _context14.abrupt(\"return\", this._httpClient.request(\"post\", \"\".concat(api.broadcast, \"?sync=\").concat(sync), null, opts));\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function sendRawTransaction(_x29) {\n        return _sendRawTransaction.apply(this, arguments);\n      }\n\n      return sendRawTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"_sendTransaction\",\n    value: function () {\n      var _sendTransaction3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            sync,\n            signedTx,\n            _args15 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                sequence = _args15.length > 3 && _args15[3] !== undefined ? _args15[3] : null;\n                memo = _args15.length > 4 && _args15[4] !== undefined ? _args15[4] : \"\";\n                sync = _args15.length > 5 && _args15[5] !== undefined ? _args15[5] : !this._useAsyncBroadcast;\n                _context15.next = 5;\n                return this._prepareTransaction(msg, stdSignMsg, address, sequence, memo);\n\n              case 5:\n                signedTx = _context15.sent;\n                return _context15.abrupt(\"return\", this.sendTransaction(signedTx, sync));\n\n              case 7:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _sendTransaction(_x30, _x31, _x32) {\n        return _sendTransaction3.apply(this, arguments);\n      }\n\n      return _sendTransaction;\n    }()\n    /**\n     * get account\n     * @param {String} address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16() {\n        var address,\n            data,\n            _args16 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                address = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : this.address;\n\n                if (address) {\n                  _context16.next = 3;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 3:\n                _context16.prev = 3;\n                _context16.next = 6;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 6:\n                data = _context16.sent;\n                return _context16.abrupt(\"return\", data);\n\n              case 10:\n                _context16.prev = 10;\n                _context16.t0 = _context16[\"catch\"](3);\n                return _context16.abrupt(\"return\", null);\n\n              case 13:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[3, 10]]);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n    /**\n     * get balances\n     * @param {String} address optional address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17() {\n        var address,\n            data,\n            _args17 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                address = _args17.length > 0 && _args17[0] !== undefined ? _args17[0] : this.address;\n                _context17.prev = 1;\n                _context17.next = 4;\n                return this.getAccount(address);\n\n              case 4:\n                data = _context17.sent;\n                return _context17.abrupt(\"return\", data.result.balances);\n\n              case 8:\n                _context17.prev = 8;\n                _context17.t0 = _context17[\"catch\"](1);\n                return _context17.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[1, 8]]);\n      }));\n\n      function getBalance() {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n    /**\n     * get markets\n     * @param {Number} limit max 1000 is default\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getMarkets\",\n    value: function () {\n      var _getMarkets = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee18() {\n        var limit,\n            offset,\n            data,\n            _args18 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                limit = _args18.length > 0 && _args18[0] !== undefined ? _args18[0] : 1000;\n                offset = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : 0;\n                _context18.prev = 2;\n                _context18.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getMarkets, \"?limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context18.sent;\n                return _context18.abrupt(\"return\", data);\n\n              case 9:\n                _context18.prev = 9;\n                _context18.t0 = _context18[\"catch\"](2);\n                console.warn(\"getMarkets error\", _context18.t0);\n                return _context18.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[2, 9]]);\n      }));\n\n      function getMarkets() {\n        return _getMarkets.apply(this, arguments);\n      }\n\n      return getMarkets;\n    }()\n    /**\n     * get transactions for an account\n     * @param {String} address optional address\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee19() {\n        var address,\n            offset,\n            data,\n            _args19 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                address = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : this.address;\n                offset = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : 0;\n                _context19.prev = 2;\n                _context19.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTransactions, \"?address=\").concat(address, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context19.sent;\n                return _context19.abrupt(\"return\", data);\n\n              case 9:\n                _context19.prev = 9;\n                _context19.t0 = _context19[\"catch\"](2);\n                console.warn(\"getTransactions error\", _context19.t0);\n                return _context19.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[2, 9]]);\n      }));\n\n      function getTransactions() {\n        return _getTransactions.apply(this, arguments);\n      }\n\n      return getTransactions;\n    }()\n    /**\n     * get transaction\n     * @param {String} hash the transaction hash\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee20(hash) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.prev = 0;\n                _context20.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTx, \"/\").concat(hash));\n\n              case 3:\n                data = _context20.sent;\n                return _context20.abrupt(\"return\", data);\n\n              case 7:\n                _context20.prev = 7;\n                _context20.t0 = _context20[\"catch\"](0);\n                console.warn(\"getTx error\", _context20.t0);\n                return _context20.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[0, 7]]);\n      }));\n\n      function getTx(_x33) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n    /**\n     * get depth for a given market\n     * @param {String} symbol the market pair\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getDepth\",\n    value: function () {\n      var _getDepth = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee21() {\n        var symbol,\n            data,\n            _args21 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                symbol = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : \"BNB_BUSD-BD1\";\n                _context21.prev = 1;\n                _context21.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getDepth, \"?symbol=\").concat(symbol));\n\n              case 4:\n                data = _context21.sent;\n                return _context21.abrupt(\"return\", data);\n\n              case 8:\n                _context21.prev = 8;\n                _context21.t0 = _context21[\"catch\"](1);\n                console.warn(\"getDepth error\", _context21.t0);\n                return _context21.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[1, 8]]);\n      }));\n\n      function getDepth() {\n        return _getDepth.apply(this, arguments);\n      }\n\n      return getDepth;\n    }()\n    /**\n     * get open orders for an address\n     * @param {String} address binance address\n     * @param {String} symbol binance BEP2 symbol\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getOpenOrders\",\n    value: function () {\n      var _getOpenOrders = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee22() {\n        var address,\n            data,\n            _args22 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                address = _args22.length > 0 && _args22[0] !== undefined ? _args22[0] : this.address;\n                _context22.prev = 1;\n                _context22.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getOpenOrders, \"?address=\").concat(address));\n\n              case 4:\n                data = _context22.sent;\n                return _context22.abrupt(\"return\", data);\n\n              case 8:\n                _context22.prev = 8;\n                _context22.t0 = _context22[\"catch\"](1);\n                console.warn(\"getOpenOrders error\", _context22.t0);\n                return _context22.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[1, 8]]);\n      }));\n\n      function getOpenOrders() {\n        return _getOpenOrders.apply(this, arguments);\n      }\n\n      return getOpenOrders;\n    }()\n    /**\n     * get atomic swap\n     * @param {String} swapID: ID of an existing swap\n     * @return {Promise} AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByID\",\n    value: function () {\n      var _getSwapByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee23(swapID) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.prev = 0;\n                _context23.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"/\").concat(swapID));\n\n              case 3:\n                data = _context23.sent;\n                return _context23.abrupt(\"return\", data);\n\n              case 7:\n                _context23.prev = 7;\n                _context23.t0 = _context23[\"catch\"](0);\n                console.warn(\"query swap by swapID error\", _context23.t0);\n                return _context23.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[0, 7]]);\n      }));\n\n      function getSwapByID(_x34) {\n        return _getSwapByID.apply(this, arguments);\n      }\n\n      return getSwapByID;\n    }()\n    /**\n     * query atomic swap list by creator address\n     * @param {String} creator: swap creator address\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByCreator\",\n    value: function () {\n      var _getSwapByCreator = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee24(creator) {\n        var limit,\n            offset,\n            data,\n            _args24 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                limit = _args24.length > 1 && _args24[1] !== undefined ? _args24[1] : 100;\n                offset = _args24.length > 2 && _args24[2] !== undefined ? _args24[2] : 0;\n                _context24.prev = 2;\n                _context24.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?fromAddress=\").concat(creator, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context24.sent;\n                return _context24.abrupt(\"return\", data);\n\n              case 9:\n                _context24.prev = 9;\n                _context24.t0 = _context24[\"catch\"](2);\n                console.warn(\"query swap list by swap creator error\", _context24.t0);\n                return _context24.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this, [[2, 9]]);\n      }));\n\n      function getSwapByCreator(_x35) {\n        return _getSwapByCreator.apply(this, arguments);\n      }\n\n      return getSwapByCreator;\n    }()\n    /**\n     * query atomic swap list by recipient address\n     * @param {String} recipient: the recipient address of the swap\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByRecipient\",\n    value: function () {\n      var _getSwapByRecipient = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee25(recipient) {\n        var limit,\n            offset,\n            data,\n            _args25 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                limit = _args25.length > 1 && _args25[1] !== undefined ? _args25[1] : 100;\n                offset = _args25.length > 2 && _args25[2] !== undefined ? _args25[2] : 0;\n                _context25.prev = 2;\n                _context25.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?toAddress=\").concat(recipient, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context25.sent;\n                return _context25.abrupt(\"return\", data);\n\n              case 9:\n                _context25.prev = 9;\n                _context25.t0 = _context25[\"catch\"](2);\n                console.warn(\"query swap list by swap recipient error\", _context25.t0);\n                return _context25.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this, [[2, 9]]);\n      }));\n\n      function getSwapByRecipient(_x36) {\n        return _getSwapByRecipient.apply(this, arguments);\n      }\n\n      return getSwapByRecipient;\n    }()\n    /**\n     * Creates a private key and returns it and its address.\n     * @return {object} the private key and address in an object.\n     * {\n     *  address,\n     *  privateKey\n     * }\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function createAccount() {\n      var privateKey = crypto.generatePrivateKey();\n      return {\n        privateKey: privateKey,\n        address: crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix)\n      };\n    }\n    /**\n     * Creates an account keystore object, and returns the private key and address.\n     * @param {String} password\n     *  {\n     *  privateKey,\n     *  address,\n     *  keystore\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithKeystore\",\n    value: function createAccountWithKeystore(password) {\n      if (!password) {\n        throw new Error(\"password should not be falsy\");\n      }\n\n      var privateKey = crypto.generatePrivateKey();\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      var keystore = crypto.generateKeyStore(privateKey, password);\n      return {\n        privateKey: privateKey,\n        address: address,\n        keystore: keystore\n      };\n    }\n    /**\n     * Creates an account from mnemonic seed phrase.\n     * @return {object}\n     * {\n     *  privateKey,\n     *  address,\n     *  mnemonic\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithMneomnic\",\n    value: function createAccountWithMneomnic() {\n      var mnemonic = crypto.generateMnemonic();\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address,\n        mnemonic: mnemonic\n      };\n    }\n    /**\n     * Recovers an account from a keystore object.\n     * @param {object} keystore object.\n     * @param {string} password password.\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromKeystore\",\n    value: function recoverAccountFromKeystore(keystore, password) {\n      var privateKey = crypto.getPrivateKeyFromKeyStore(keystore, password);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Recovers an account from a mnemonic seed phrase.\n     * @param {string} mneomnic\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromMnemonic\",\n    value: function recoverAccountFromMnemonic(mnemonic) {\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    } // support an old method name containing a typo\n\n  }, {\n    key: \"recoverAccountFromMneomnic\",\n    value: function recoverAccountFromMneomnic(mnemonic) {\n      return this.recoverAccountFromMnemonic(mnemonic);\n    }\n    /**\n     * Recovers an account using private key.\n     * @param {String} privateKey\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromPrivateKey\",\n    value: function recoverAccountFromPrivateKey(privateKey) {\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Validates an address.\n     * @param {String} address\n     * @param {String} prefix\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"checkAddress\",\n    value: function checkAddress(address) {\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.addressPrefix;\n      return crypto.checkAddress(address, prefix);\n    }\n    /**\n     * Returns the address for the current account if setPrivateKey has been called on this client.\n     * @return {String}\n     */\n\n  }, {\n    key: \"getClientKeyAddress\",\n    value: function getClientKeyAddress() {\n      if (!this._privateKey) throw new Error(\"no private key is set on this client\");\n      var address = crypto.getAddressFromPrivateKey(this._privateKey, this.addressPrefix);\n      this.address = address;\n      return address;\n    }\n  }]);\n  return BncClient;\n}();\n\nexports.BncClient = BncClient;","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/bnb-javascript-sdk-nobroadcast/lib/client/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","BncClient","DefaultBroadcastDelegate","DefaultSigningDelegate","NETWORK_PREFIX_MAPPING","api","_classCallCheck2","_createClass2","_defineProperty2","_regenerator","_asyncToGenerator2","_big","crypto","_tx","_types","_request","_validateHelper","_gov","_swap","_token","_bridge","_stake","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","BASENUMBER","Math","pow","broadcast","nodeInfo","getAccount","getMarkets","getSwaps","getOpenOrders","getDepth","getTransactions","getTx","testnet","mainnet","_ref","mark","_callee","tx","signMsg","privateKey","wrap","_callee$","_context","prev","next","getPrivateKey","abrupt","Promise","reject","sign","stop","_x","_x2","_x3","_ref2","_callee2","signedTx","_callee2$","_context2","sendTransaction","_x4","_x5","checkOutputs","outputs","transfer","coins","coin","checkNumber","amount","denom","Error","calInputCoins","inputs","existCoin","find","c","existAmount","Number","plus","toString","server","useAsyncBroadcast","undefined","_httpClient","_signingDelegate","_broadcastDelegate","_useAsyncBroadcast","_source","tokens","swap","gov","bridge","Bridge","stake","Stake","_initChain","_callee3","data","_callee3$","_context3","chainId","request","sent","result","node_info","network","initChain","chooseNetwork","addressPrefix","_setPrivateKey","_callee4","localOnly","address","promise","_args4","_callee4$","_context4","_privateKey","getAddressFromPrivateKey","concat","_setPkPromise","account_number","t0","setPrivateKey","_x6","removePrivateKey","setAccountNumber","accountNumber","setSigningDelegate","delegate","setBroadcastDelegate","useDefaultSigningDelegate","useDefaultBroadcastDelegate","_transfer","_callee5","fromAddress","toAddress","asset","memo","sequence","accCode","toAccCode","msg","signedBz","_args5","_callee5$","_context5","decodeAddress","mul","aminoPrefix","AminoPrefix","MsgSend","_prepareTransaction","serialize","serialized","_x7","_x8","_x9","_x10","_multiSend","_callee6","fromAddrCode","transfers","signInputs","signOutputs","_args6","_callee6$","_context6","Array","isArray","item","sort","a","b","localeCompare","toAddcCode","to","index","multiSend","_x11","_x12","_cancelOrder","_callee7","symbol","refid","_args7","_callee7$","_context7","sender","CancelOrderMsg","cancelOrder","_x13","_x14","_x15","_placeOrder","_callee8","side","price","quantity","timeinforce","bigPrice","bigQuantity","placeOrderMsg","_args8","_callee8$","_context8","id","toUpperCase","ordertype","parseFloat","NewOrderMsg","placeOrder","_list","_callee9","proposalId","baseAsset","quoteAsset","initPrice","init_price","listMsg","_args9","_callee9$","_context9","from","proposal_id","base_asset_symbol","quote_asset_symbol","ListMsg","list","_x16","_x17","_x18","_x19","_x20","_listMiniToken","_callee10","_ref3","_ref3$sequence","listMiniMsg","_callee10$","_context10","validateMiniTokenSymbol","ListMiniMsg","getMsg","getSignMsg","listMiniToken","_x21","_setAccountFlags","_callee11","flags","_args11","_callee11$","_context11","SetAccountFlagsMsg","setAccountFlags","_x22","_x23","_prepareTransaction2","_callee12","stdSignMsg","_args12","_callee12$","_context12","parseInt","call","_x24","_x25","_x26","_sendTransaction2","_callee13","sync","_callee13$","_context13","sendRawTransaction","_x27","_x28","_sendRawTransaction","_callee14","opts","_args14","_callee14$","_context14","headers","_x29","_sendTransaction3","_callee15","_args15","_callee15$","_context15","_sendTransaction","_x30","_x31","_x32","_getAccount","_callee16","_args16","_callee16$","_context16","_getBalance","_callee17","_args17","_callee17$","_context17","balances","getBalance","_getMarkets","_callee18","limit","offset","_args18","_callee18$","_context18","console","warn","_getTransactions","_callee19","_args19","_callee19$","_context19","_getTx","_callee20","hash","_callee20$","_context20","_x33","_getDepth","_callee21","_args21","_callee21$","_context21","_getOpenOrders","_callee22","_args22","_callee22$","_context22","_getSwapByID","_callee23","swapID","_callee23$","_context23","getSwapByID","_x34","_getSwapByCreator","_callee24","creator","_args24","_callee24$","_context24","getSwapByCreator","_x35","_getSwapByRecipient","_callee25","recipient","_args25","_callee25$","_context25","getSwapByRecipient","_x36","createAccount","generatePrivateKey","createAccountWithKeystore","password","keystore","generateKeyStore","createAccountWithMneomnic","mnemonic","generateMnemonic","getPrivateKeyFromMnemonic","recoverAccountFromKeystore","getPrivateKeyFromKeyStore","recoverAccountFromMnemonic","recoverAccountFromMneomnic","recoverAccountFromPrivateKey","checkAddress","prefix","getClientKeyAddress"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BncClient = exports.DefaultBroadcastDelegate = exports.DefaultSigningDelegate = exports.NETWORK_PREFIX_MAPPING = exports.api = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _big = _interopRequireDefault(require(\"big.js\"));\n\nvar crypto = _interopRequireWildcard(require(\"../crypto\"));\n\nvar _tx = _interopRequireDefault(require(\"../tx\"));\n\nvar _types = require(\"../types/\");\n\nvar _request = _interopRequireDefault(require(\"../utils/request\"));\n\nvar _validateHelper = require(\"../utils/validateHelper\");\n\nvar _gov = _interopRequireDefault(require(\"./gov\"));\n\nvar _swap = _interopRequireDefault(require(\"./swap\"));\n\nvar _token = _interopRequireWildcard(require(\"./token\"));\n\nvar _bridge = require(\"./bridge\");\n\nvar _stake = require(\"./stake\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar BASENUMBER = Math.pow(10, 8);\nvar api = {\n  broadcast: \"/api/v1/broadcast\",\n  nodeInfo: \"/api/v1/node-info\",\n  getAccount: \"/api/v1/account\",\n  getMarkets: \"/api/v1/markets\",\n  getSwaps: \"/api/v1/atomic-swaps\",\n  getOpenOrders: \"/api/v1/orders/open\",\n  getDepth: \"/api/v1/depth\",\n  getTransactions: \"/api/v1/transactions\",\n  getTx: \"/api/v1/tx\"\n};\nexports.api = api;\nvar NETWORK_PREFIX_MAPPING = {\n  testnet: \"tbnb\",\n  mainnet: \"bnb\"\n};\nexports.NETWORK_PREFIX_MAPPING = NETWORK_PREFIX_MAPPING;\n\n/**\n * The default signing delegate which uses the local private key.\n * @param  {Transaction} tx      the transaction\n * @param  {Object}      signMsg the canonical sign bytes for the msg\n * @return {Transaction}\n */\nvar DefaultSigningDelegate = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(tx, signMsg) {\n    var privateKey;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            privateKey = this.getPrivateKey();\n\n            if (privateKey) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(\"Private key has to be set before signing a transaction\"));\n\n          case 3:\n            return _context.abrupt(\"return\", tx.sign(privateKey, signMsg));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function DefaultSigningDelegate(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * The default broadcast delegate which immediately broadcasts a transaction.\n * @param {Transaction} signedTx the signed transaction\n */\n\n\nexports.DefaultSigningDelegate = DefaultSigningDelegate;\n\nvar DefaultBroadcastDelegate = /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(signedTx) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", this.sendTransaction(signedTx, true));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function DefaultBroadcastDelegate(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // /**\n//  * The Ledger signing delegate.\n//  * @param  {LedgerApp}  ledgerApp\n//  * @param  {preSignCb}  function\n//  * @param  {postSignCb} function\n//  * @param  {errCb} function\n//  * @return {function}\n//  */\n// export const LedgerSigningDelegate = (\n//   ledgerApp: LedgerApp,\n//   preSignCb: (preSignCb: Buffer) => void,\n//   postSignCb: (pubKeyResp: PublicKey, sigResp: SignedSignature) => void,\n//   errCb: (error: any) => void,\n//   hdPath: number[]\n// ): typeof DefaultSigningDelegate =>\n//   async function (tx, signMsg) {\n//     const signBytes = tx.getSignBytes(signMsg)\n//     preSignCb && preSignCb(signBytes)\n//     let pubKeyResp: PublicKey, sigResp: SignedSignature\n//     try {\n//       pubKeyResp = await ledgerApp.getPublicKey(hdPath)\n//       sigResp = await ledgerApp.sign(signBytes, hdPath)\n//       postSignCb && postSignCb(pubKeyResp, sigResp)\n//     } catch (err) {\n//       console.warn(\"LedgerSigningDelegate error\", err)\n//       errCb && errCb(err)\n//     }\n//     if (sigResp! && sigResp!.signature) {\n//       const pubKey = crypto.getPublicKey(pubKeyResp!.pk!.toString(\"hex\"))\n//       return tx.addSignature(pubKey, sigResp!.signature)\n//     }\n//     return tx\n//   }\n\n/**\n * validate the input number.\n * @param {Array} outputs\n */\n\n\nexports.DefaultBroadcastDelegate = DefaultBroadcastDelegate;\n\nvar checkOutputs = function checkOutputs(outputs) {\n  outputs.forEach(function (transfer) {\n    var coins = transfer.coins || [];\n    coins.forEach(function (coin) {\n      (0, _validateHelper.checkNumber)(coin.amount);\n\n      if (!coin.denom) {\n        throw new Error(\"invalid denmon\");\n      }\n    });\n  });\n};\n/**\n * sum corresponding input coin\n * @param {Array} inputs\n * @param {Array} coins\n */\n\n\nvar calInputCoins = function calInputCoins(inputs, coins) {\n  coins.forEach(function (coin) {\n    var existCoin = inputs[0].coins.find(function (c) {\n      return c.denom === coin.denom;\n    });\n\n    if (existCoin) {\n      var existAmount = new _big[\"default\"](existCoin.amount);\n      existCoin.amount = Number(existAmount.plus(coin.amount).toString());\n    } else {\n      inputs[0].coins.push(_objectSpread({}, coin));\n    }\n  });\n};\n/**\n * The Binance Chain client.\n */\n\n\nvar BncClient = /*#__PURE__*/function () {\n  /**\n   * @param {String} server Binance Chain public url\n   * @param {Boolean} useAsyncBroadcast use async broadcast mode, faster but less guarantees (default off)\n   * @param {Number} source where does this transaction come from (default 0)\n   */\n  function BncClient(server) {\n    var useAsyncBroadcast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    (0, _classCallCheck2[\"default\"])(this, BncClient);\n    (0, _defineProperty2[\"default\"])(this, \"_httpClient\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_signingDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_broadcastDelegate\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_useAsyncBroadcast\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_source\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"tokens\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"swap\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"gov\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"bridge\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"stake\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"chainId\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"addressPrefix\", \"tbnb\");\n    (0, _defineProperty2[\"default\"])(this, \"network\", \"testnet\");\n    (0, _defineProperty2[\"default\"])(this, \"address\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_setPkPromise\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"account_number\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_privateKey\", null);\n\n    if (!server) {\n      throw new Error(\"Binance chain server should not be null\");\n    }\n\n    this._httpClient = new _request[\"default\"](server);\n    this._signingDelegate = DefaultSigningDelegate;\n    this._broadcastDelegate = DefaultBroadcastDelegate;\n    this._useAsyncBroadcast = useAsyncBroadcast;\n    this._source = source;\n    this.tokens = new _token[\"default\"](this);\n    this.swap = new _swap[\"default\"](this);\n    this.gov = new _gov[\"default\"](this);\n    this.bridge = new _bridge.Bridge(this);\n    this.stake = new _stake.Stake(this);\n  }\n  /**\n   * Initialize the client with the chain's ID. Asynchronous.\n   * @return {Promise}\n   */\n\n\n  (0, _createClass2[\"default\"])(BncClient, [{\n    key: \"initChain\",\n    value: function () {\n      var _initChain = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.chainId) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this._httpClient.request(\"get\", api.nodeInfo);\n\n              case 3:\n                data = _context3.sent;\n                this.chainId = data.result.node_info && data.result.node_info.network;\n\n              case 5:\n                return _context3.abrupt(\"return\", this);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function initChain() {\n        return _initChain.apply(this, arguments);\n      }\n\n      return initChain;\n    }()\n    /**\n     * Sets the client network (testnet or mainnet).\n     * @param {String} network Indicate testnet or mainnet\n     */\n\n  }, {\n    key: \"chooseNetwork\",\n    value: function chooseNetwork(network) {\n      this.addressPrefix = NETWORK_PREFIX_MAPPING[network] || \"tbnb\";\n      this.network = NETWORK_PREFIX_MAPPING[network] ? network : \"testnet\";\n    }\n    /**\n     * Sets the client's private key for calls made by this client. Asynchronous.\n     * @param {string} privateKey the private key hexstring\n     * @param {boolean} localOnly set this to true if you will supply an account_number yourself via `setAccountNumber`. Warning: You must do that if you set this to true!\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"setPrivateKey\",\n    value: function () {\n      var _setPrivateKey = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(privateKey) {\n        var localOnly,\n            address,\n            promise,\n            data,\n            _args4 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                localOnly = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n\n                if (!(privateKey !== this._privateKey)) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n\n                if (address) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                throw new Error(\"address is falsy: \".concat(address, \". invalid private key?\"));\n\n              case 5:\n                this._privateKey = privateKey;\n                this.address = address;\n\n                if (localOnly) {\n                  _context4.next = 19;\n                  break;\n                }\n\n                _context4.prev = 8;\n                promise = this._setPkPromise = this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n                _context4.next = 12;\n                return promise;\n\n              case 12:\n                data = _context4.sent;\n                this.account_number = data.result.account_number;\n                _context4.next = 19;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](8);\n                throw new Error(\"unable to query the address on the blockchain. try sending it some funds first: \".concat(address));\n\n              case 19:\n                return _context4.abrupt(\"return\", this);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[8, 16]]);\n      }));\n\n      function setPrivateKey(_x6) {\n        return _setPrivateKey.apply(this, arguments);\n      }\n\n      return setPrivateKey;\n    }()\n    /**\n     * Removes client's private key.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"removePrivateKey\",\n    value: function removePrivateKey() {\n      this._privateKey = null;\n      return this;\n    }\n    /**\n     * Gets client's private key.\n     * @return {string|null} the private key hexstring or `null` if no private key has been set\n     */\n\n  }, {\n    key: \"getPrivateKey\",\n    value: function getPrivateKey() {\n      return this._privateKey;\n    }\n    /**\n     * Sets the client's account number.\n     * @param {number} accountNumber\n     */\n\n  }, {\n    key: \"setAccountNumber\",\n    value: function setAccountNumber(accountNumber) {\n      this.account_number = accountNumber;\n    }\n    /**\n     * Use async broadcast mode. Broadcasts faster with less guarantees (default off)\n     * @param {Boolean} useAsyncBroadcast\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useAsyncBroadcast\",\n    value: function useAsyncBroadcast() {\n      var _useAsyncBroadcast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._useAsyncBroadcast = _useAsyncBroadcast;\n      return this;\n    }\n    /**\n     * Sets the signing delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setSigningDelegate\",\n    value: function setSigningDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"signing delegate must be a function\");\n      this._signingDelegate = delegate;\n      return this;\n    }\n    /**\n     * Sets the broadcast delegate (for wallet integrations).\n     * @param {function} delegate\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"setBroadcastDelegate\",\n    value: function setBroadcastDelegate(delegate) {\n      if (typeof delegate !== \"function\") throw new Error(\"broadcast delegate must be a function\");\n      this._broadcastDelegate = delegate;\n      return this;\n    }\n    /**\n     * Applies the default signing delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultSigningDelegate\",\n    value: function useDefaultSigningDelegate() {\n      this._signingDelegate = DefaultSigningDelegate;\n      return this;\n    }\n    /**\n     * Applies the default broadcast delegate.\n     * @return {BncClient} this instance (for chaining)\n     */\n\n  }, {\n    key: \"useDefaultBroadcastDelegate\",\n    value: function useDefaultBroadcastDelegate() {\n      this._broadcastDelegate = DefaultBroadcastDelegate;\n      return this;\n    }\n    /**\n     * Applies the Ledger signing delegate.\n     * @param {function} ledgerApp\n     * @param {function} preSignCb\n     * @param {function} postSignCb\n     * @param {function} errCb\n     * @return {BncClient} this instance (for chaining)\n     */\n    // useLedgerSigningDelegate(...args: Parameters<typeof LedgerSigningDelegate>) {\n    //   this._signingDelegate = LedgerSigningDelegate(...args)\n    //   return this\n    // }\n\n    /**\n     * Transfer tokens from one address to another.\n     * @param {String} fromAddress\n     * @param {String} toAddress\n     * @param {Number} amount\n     * @param {String} asset\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(fromAddress, toAddress, amount, asset) {\n        var memo,\n            sequence,\n            accCode,\n            toAccCode,\n            coin,\n            msg,\n            signMsg,\n            signedTx,\n            signedBz,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                memo = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : \"\";\n                sequence = _args5.length > 5 && _args5[5] !== undefined ? _args5[5] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                toAccCode = crypto.decodeAddress(toAddress);\n                amount = new _big[\"default\"](amount);\n                amount = Number(amount.mul(BASENUMBER).toString());\n                (0, _validateHelper.checkNumber)(amount, \"amount\");\n                coin = {\n                  denom: asset,\n                  amount: amount\n                };\n                msg = {\n                  inputs: [{\n                    address: accCode,\n                    coins: [coin]\n                  }],\n                  outputs: [{\n                    address: toAccCode,\n                    coins: [coin]\n                  }],\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signMsg = {\n                  inputs: [{\n                    address: fromAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }],\n                  outputs: [{\n                    address: toAddress,\n                    coins: [{\n                      amount: amount,\n                      denom: asset\n                    }]\n                  }]\n                };\n                _context5.next = 12;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 12:\n                signedTx = _context5.sent;\n                signedBz = signedTx.serialize(); // @ts-ignore\n\n                signedTx.serialized = signedBz;\n                return _context5.abrupt(\"return\", signedTx);\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function transfer(_x7, _x8, _x9, _x10) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n    /**\n     * Create and sign a multi send tx\n     * @param {String} fromAddress\n     * @param {Array} outputs\n     * @example\n     * const outputs = [\n     * {\n     *   \"to\": \"tbnb1p4kpnj5qz5spsaf0d2555h6ctngse0me5q57qe\",\n     *   \"coins\": [{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   }]\n     * },\n     * {\n     *   \"to\": \"tbnb1scjj8chhhp7lngdeflltzex22yaf9ep59ls4gk\",\n     *   \"coins\": [{\n     *     \"denom\": \"BTC\",\n     *     \"amount\": 10\n     *   },{\n     *     \"denom\": \"BNB\",\n     *     \"amount\": 10\n     *   }]\n     * }]\n     * @param {String} memo optional memo\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"multiSend\",\n    value: function () {\n      var _multiSend = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(fromAddress, outputs) {\n        var memo,\n            sequence,\n            fromAddrCode,\n            inputs,\n            transfers,\n            msg,\n            signInputs,\n            signOutputs,\n            signMsg,\n            signedTx,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                memo = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : \"\";\n                sequence = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : null;\n\n                if (fromAddress) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                throw new Error(\"fromAddress should not be falsy\");\n\n              case 4:\n                if (Array.isArray(outputs)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                throw new Error(\"outputs should be array\");\n\n              case 6:\n                checkOutputs(outputs); //sort denom by alphbet and init amount\n\n                outputs.forEach(function (item) {\n                  item.coins = item.coins.sort(function (a, b) {\n                    return a.denom.localeCompare(b.denom);\n                  });\n                  item.coins.forEach(function (coin) {\n                    var amount = new _big[\"default\"](coin.amount);\n                    coin.amount = Number(amount.mul(BASENUMBER).toString());\n                  });\n                });\n                fromAddrCode = crypto.decodeAddress(fromAddress);\n                inputs = [{\n                  address: fromAddrCode,\n                  coins: []\n                }];\n                transfers = [];\n                outputs.forEach(function (item) {\n                  var toAddcCode = crypto.decodeAddress(item.to);\n                  calInputCoins(inputs, item.coins);\n                  transfers.push({\n                    address: toAddcCode,\n                    coins: item.coins\n                  });\n                });\n                msg = {\n                  inputs: inputs,\n                  outputs: transfers,\n                  aminoPrefix: _types.AminoPrefix.MsgSend\n                };\n                signInputs = [{\n                  address: fromAddress,\n                  coins: []\n                }];\n                signOutputs = [];\n                outputs.forEach(function (item, index) {\n                  signOutputs.push({\n                    address: item.to,\n                    coins: []\n                  });\n                  item.coins.forEach(function (c) {\n                    signOutputs[index].coins.push(c);\n                  });\n                  calInputCoins(signInputs, item.coins);\n                });\n                signMsg = {\n                  inputs: signInputs,\n                  outputs: signOutputs\n                };\n                _context6.next = 19;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, memo);\n\n              case 19:\n                signedTx = _context6.sent;\n                return _context6.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 21:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function multiSend(_x11, _x12) {\n        return _multiSend.apply(this, arguments);\n      }\n\n      return multiSend;\n    }()\n    /**\n     * Cancel an order.\n     * @param {String} fromAddress\n     * @param {String} symbol the market pair\n     * @param {String} refid the order ID of the order to cancel\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"cancelOrder\",\n    value: function () {\n      var _cancelOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(fromAddress, symbol, refid) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                sequence = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : null;\n                accCode = crypto.decodeAddress(fromAddress);\n                msg = {\n                  sender: accCode,\n                  symbol: symbol,\n                  refid: refid,\n                  aminoPrefix: _types.AminoPrefix.CancelOrderMsg\n                };\n                signMsg = {\n                  refid: refid,\n                  sender: fromAddress,\n                  symbol: symbol\n                };\n                _context7.next = 6;\n                return this._prepareTransaction(msg, signMsg, fromAddress, sequence, \"\");\n\n              case 6:\n                signedTx = _context7.sent;\n                return _context7.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function cancelOrder(_x13, _x14, _x15) {\n        return _cancelOrder.apply(this, arguments);\n      }\n\n      return cancelOrder;\n    }()\n    /**\n     * Place an order.\n     * @param {String} address\n     * @param {String} symbol the market pair\n     * @param {Number} side (1-Buy, 2-Sell)\n     * @param {Number} price\n     * @param {Number} quantity\n     * @param {Number} sequence optional sequence\n     * @param {Number} timeinforce (1-GTC(Good Till Expire), 3-IOC(Immediate or Cancel))\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"placeOrder\",\n    value: function () {\n      var _placeOrder = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n        var address,\n            symbol,\n            side,\n            price,\n            quantity,\n            sequence,\n            timeinforce,\n            accCode,\n            data,\n            bigPrice,\n            bigQuantity,\n            placeOrderMsg,\n            signMsg,\n            signedTx,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                address = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : this.address;\n                symbol = _args8.length > 1 ? _args8[1] : undefined;\n                side = _args8.length > 2 ? _args8[2] : undefined;\n                price = _args8.length > 3 ? _args8[3] : undefined;\n                quantity = _args8.length > 4 ? _args8[4] : undefined;\n                sequence = _args8.length > 5 && _args8[5] !== undefined ? _args8[5] : null;\n                timeinforce = _args8.length > 6 && _args8[6] !== undefined ? _args8[6] : 1;\n\n                if (address) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 9:\n                if (symbol) {\n                  _context8.next = 11;\n                  break;\n                }\n\n                throw new Error(\"symbol should not be falsy\");\n\n              case 11:\n                if (!(side !== 1 && side !== 2)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                throw new Error(\"side can only be 1 or 2\");\n\n              case 13:\n                if (!(timeinforce !== 1 && timeinforce !== 3)) {\n                  _context8.next = 15;\n                  break;\n                }\n\n                throw new Error(\"timeinforce can only be 1 or 3\");\n\n              case 15:\n                accCode = crypto.decodeAddress(address);\n\n                if (!(sequence !== 0 && !sequence)) {\n                  _context8.next = 21;\n                  break;\n                }\n\n                _context8.next = 19;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 19:\n                data = _context8.sent;\n                sequence = data.result && data.result.sequence;\n\n              case 21:\n                bigPrice = new _big[\"default\"](price);\n                bigQuantity = new _big[\"default\"](quantity);\n                placeOrderMsg = {\n                  sender: accCode,\n                  id: \"\".concat(accCode.toString(\"hex\"), \"-\").concat(sequence + 1).toUpperCase(),\n                  symbol: symbol,\n                  ordertype: 2,\n                  side: side,\n                  price: parseFloat(bigPrice.mul(BASENUMBER).toString()),\n                  quantity: parseFloat(bigQuantity.mul(BASENUMBER).toString()),\n                  timeinforce: timeinforce,\n                  aminoPrefix: _types.AminoPrefix.NewOrderMsg\n                };\n                signMsg = {\n                  id: placeOrderMsg.id,\n                  ordertype: placeOrderMsg.ordertype,\n                  price: placeOrderMsg.price,\n                  quantity: placeOrderMsg.quantity,\n                  sender: address,\n                  side: placeOrderMsg.side,\n                  symbol: placeOrderMsg.symbol,\n                  timeinforce: timeinforce\n                };\n                (0, _validateHelper.checkNumber)(placeOrderMsg.price, \"price\");\n                (0, _validateHelper.checkNumber)(placeOrderMsg.quantity, \"quantity\");\n                _context8.next = 29;\n                return this._prepareTransaction(placeOrderMsg, signMsg, address, sequence, \"\");\n\n              case 29:\n                signedTx = _context8.sent;\n                return _context8.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 31:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function placeOrder() {\n        return _placeOrder.apply(this, arguments);\n      }\n\n      return placeOrder;\n    }()\n    /**\n     * @param {String} address\n     * @param {Number} proposalId\n     * @param {String} baseAsset\n     * @param {String} quoteAsset\n     * @param {Number} initPrice\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(address, proposalId, baseAsset, quoteAsset, initPrice) {\n        var sequence,\n            accCode,\n            init_price,\n            listMsg,\n            signMsg,\n            signedTx,\n            _args9 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                sequence = _args9.length > 5 && _args9[5] !== undefined ? _args9[5] : null;\n                accCode = crypto.decodeAddress(address);\n\n                if (address) {\n                  _context9.next = 4;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 4:\n                if (!(proposalId <= 0)) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                throw new Error(\"proposal id should larger than 0\");\n\n              case 6:\n                if (!(initPrice <= 0)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 8:\n                if (baseAsset) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                throw new Error(\"baseAsset should not be falsy\");\n\n              case 10:\n                if (quoteAsset) {\n                  _context9.next = 12;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 12:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMsg = {\n                  from: accCode,\n                  proposal_id: proposalId,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price,\n                  aminoPrefix: _types.AminoPrefix.ListMsg\n                };\n                signMsg = {\n                  base_asset_symbol: baseAsset,\n                  from: address,\n                  init_price: init_price,\n                  proposal_id: proposalId,\n                  quote_asset_symbol: quoteAsset\n                };\n                _context9.next = 17;\n                return this._prepareTransaction(listMsg, signMsg, address, sequence, \"\");\n\n              case 17:\n                signedTx = _context9.sent;\n                return _context9.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function list(_x16, _x17, _x18, _x19, _x20) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n    /**\n     * list miniToken\n     */\n\n  }, {\n    key: \"listMiniToken\",\n    value: function () {\n      var _listMiniToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(_ref3) {\n        var from, baseAsset, quoteAsset, initPrice, _ref3$sequence, sequence, init_price, listMiniMsg, signedTx;\n\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                from = _ref3.from, baseAsset = _ref3.baseAsset, quoteAsset = _ref3.quoteAsset, initPrice = _ref3.initPrice, _ref3$sequence = _ref3.sequence, sequence = _ref3$sequence === void 0 ? null : _ref3$sequence;\n                (0, _token.validateMiniTokenSymbol)(baseAsset);\n\n                if (!(initPrice <= 0)) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error(\"price should larger than 0\");\n\n              case 4:\n                if (from) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 6:\n                if (quoteAsset) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                throw new Error(\"quoteAsset should not be falsy\");\n\n              case 8:\n                init_price = Number(new _big[\"default\"](initPrice).mul(BASENUMBER).toString());\n                listMiniMsg = new _types.ListMiniMsg({\n                  from: from,\n                  base_asset_symbol: baseAsset,\n                  quote_asset_symbol: quoteAsset,\n                  init_price: init_price\n                });\n                _context10.next = 12;\n                return this._prepareTransaction(listMiniMsg.getMsg(), listMiniMsg.getSignMsg(), from, sequence);\n\n              case 12:\n                signedTx = _context10.sent;\n                return _context10.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 14:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function listMiniToken(_x21) {\n        return _listMiniToken.apply(this, arguments);\n      }\n\n      return listMiniToken;\n    }()\n    /**\n     * Set account flags\n     * @param {String} address\n     * @param {Number} flags new value of account flags\n     * @param {Number} sequence optional sequence\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"setAccountFlags\",\n    value: function () {\n      var _setAccountFlags = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(address, flags) {\n        var sequence,\n            accCode,\n            msg,\n            signMsg,\n            signedTx,\n            _args11 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                sequence = _args11.length > 2 && _args11[2] !== undefined ? _args11[2] : null;\n                accCode = crypto.decodeAddress(address);\n                msg = {\n                  from: accCode,\n                  flags: flags,\n                  aminoPrefix: _types.AminoPrefix.SetAccountFlagsMsg\n                };\n                signMsg = {\n                  flags: flags,\n                  from: address\n                };\n                _context11.next = 6;\n                return this._prepareTransaction(msg, signMsg, address, sequence, \"\");\n\n              case 6:\n                signedTx = _context11.sent;\n                return _context11.abrupt(\"return\", this._broadcastDelegate(signedTx));\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function setAccountFlags(_x22, _x23) {\n        return _setAccountFlags.apply(this, arguments);\n      }\n\n      return setAccountFlags;\n    }()\n    /**\n     * Prepare a serialized raw transaction for sending to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @return {Transaction} signed transaction\n     */\n\n  }, {\n    key: \"_prepareTransaction\",\n    value: function () {\n      var _prepareTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            data,\n            tx,\n            _args12 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                sequence = _args12.length > 3 && _args12[3] !== undefined ? _args12[3] : null;\n                memo = _args12.length > 4 && _args12[4] !== undefined ? _args12[4] : \"\";\n\n                if (!((!this.account_number || sequence !== 0 && !sequence) && address)) {\n                  _context12.next = 10;\n                  break;\n                }\n\n                _context12.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 5:\n                data = _context12.sent;\n                sequence = data.result.sequence;\n                this.account_number = data.result.account_number; // if user has not used `await` in its call to setPrivateKey (old API), we should wait for the promise here\n\n                _context12.next = 13;\n                break;\n\n              case 10:\n                if (!this._setPkPromise) {\n                  _context12.next = 13;\n                  break;\n                }\n\n                _context12.next = 13;\n                return this._setPkPromise;\n\n              case 13:\n                tx = new _tx[\"default\"]({\n                  accountNumber: typeof this.account_number !== \"number\" ? parseInt(this.account_number) : this.account_number,\n                  chainId: this.chainId,\n                  memo: memo,\n                  msg: msg,\n                  sequence: typeof sequence !== \"number\" ? parseInt(sequence) : sequence,\n                  source: this._source\n                });\n                return _context12.abrupt(\"return\", this._signingDelegate.call(this, tx, stdSignMsg));\n\n              case 15:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _prepareTransaction(_x24, _x25, _x26) {\n        return _prepareTransaction2.apply(this, arguments);\n      }\n\n      return _prepareTransaction;\n    }()\n    /**\n     * Broadcast a transaction to the blockchain.\n     * @param {signedTx} tx signed Transaction object\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(signedTx, sync) {\n        var signedBz;\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                signedBz = signedTx.serialize();\n                return _context13.abrupt(\"return\", this.sendRawTransaction(signedBz, sync));\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function sendTransaction(_x27, _x28) {\n        return _sendTransaction2.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {String} signedBz signed and serialized raw transaction\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"sendRawTransaction\",\n    value: function () {\n      var _sendRawTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(signedBz) {\n        var sync,\n            opts,\n            _args14 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                sync = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : !this._useAsyncBroadcast;\n                opts = {\n                  data: signedBz,\n                  headers: {\n                    \"content-type\": \"text/plain\"\n                  }\n                };\n                return _context14.abrupt(\"return\", this._httpClient.request(\"post\", \"\".concat(api.broadcast, \"?sync=\").concat(sync), null, opts));\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function sendRawTransaction(_x29) {\n        return _sendRawTransaction.apply(this, arguments);\n      }\n\n      return sendRawTransaction;\n    }()\n    /**\n     * Broadcast a raw transaction to the blockchain.\n     * @param {Object} msg the msg object\n     * @param {Object} stdSignMsg the sign doc object used to generate a signature\n     * @param {String} address\n     * @param {Number} sequence optional sequence\n     * @param {String} memo optional memo\n     * @param {Boolean} sync use synchronous mode, optional\n     * @return {Promise} resolves with response (success or fail)\n     */\n\n  }, {\n    key: \"_sendTransaction\",\n    value: function () {\n      var _sendTransaction3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(msg, stdSignMsg, address) {\n        var sequence,\n            memo,\n            sync,\n            signedTx,\n            _args15 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                sequence = _args15.length > 3 && _args15[3] !== undefined ? _args15[3] : null;\n                memo = _args15.length > 4 && _args15[4] !== undefined ? _args15[4] : \"\";\n                sync = _args15.length > 5 && _args15[5] !== undefined ? _args15[5] : !this._useAsyncBroadcast;\n                _context15.next = 5;\n                return this._prepareTransaction(msg, stdSignMsg, address, sequence, memo);\n\n              case 5:\n                signedTx = _context15.sent;\n                return _context15.abrupt(\"return\", this.sendTransaction(signedTx, sync));\n\n              case 7:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _sendTransaction(_x30, _x31, _x32) {\n        return _sendTransaction3.apply(this, arguments);\n      }\n\n      return _sendTransaction;\n    }()\n    /**\n     * get account\n     * @param {String} address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16() {\n        var address,\n            data,\n            _args16 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                address = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : this.address;\n\n                if (address) {\n                  _context16.next = 3;\n                  break;\n                }\n\n                throw new Error(\"address should not be falsy\");\n\n              case 3:\n                _context16.prev = 3;\n                _context16.next = 6;\n                return this._httpClient.request(\"get\", \"\".concat(api.getAccount, \"/\").concat(address));\n\n              case 6:\n                data = _context16.sent;\n                return _context16.abrupt(\"return\", data);\n\n              case 10:\n                _context16.prev = 10;\n                _context16.t0 = _context16[\"catch\"](3);\n                return _context16.abrupt(\"return\", null);\n\n              case 13:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[3, 10]]);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n    /**\n     * get balances\n     * @param {String} address optional address\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17() {\n        var address,\n            data,\n            _args17 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                address = _args17.length > 0 && _args17[0] !== undefined ? _args17[0] : this.address;\n                _context17.prev = 1;\n                _context17.next = 4;\n                return this.getAccount(address);\n\n              case 4:\n                data = _context17.sent;\n                return _context17.abrupt(\"return\", data.result.balances);\n\n              case 8:\n                _context17.prev = 8;\n                _context17.t0 = _context17[\"catch\"](1);\n                return _context17.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[1, 8]]);\n      }));\n\n      function getBalance() {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n    /**\n     * get markets\n     * @param {Number} limit max 1000 is default\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getMarkets\",\n    value: function () {\n      var _getMarkets = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee18() {\n        var limit,\n            offset,\n            data,\n            _args18 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                limit = _args18.length > 0 && _args18[0] !== undefined ? _args18[0] : 1000;\n                offset = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : 0;\n                _context18.prev = 2;\n                _context18.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getMarkets, \"?limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context18.sent;\n                return _context18.abrupt(\"return\", data);\n\n              case 9:\n                _context18.prev = 9;\n                _context18.t0 = _context18[\"catch\"](2);\n                console.warn(\"getMarkets error\", _context18.t0);\n                return _context18.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[2, 9]]);\n      }));\n\n      function getMarkets() {\n        return _getMarkets.apply(this, arguments);\n      }\n\n      return getMarkets;\n    }()\n    /**\n     * get transactions for an account\n     * @param {String} address optional address\n     * @param {Number} offset from beggining, default 0\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee19() {\n        var address,\n            offset,\n            data,\n            _args19 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                address = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : this.address;\n                offset = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : 0;\n                _context19.prev = 2;\n                _context19.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTransactions, \"?address=\").concat(address, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context19.sent;\n                return _context19.abrupt(\"return\", data);\n\n              case 9:\n                _context19.prev = 9;\n                _context19.t0 = _context19[\"catch\"](2);\n                console.warn(\"getTransactions error\", _context19.t0);\n                return _context19.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[2, 9]]);\n      }));\n\n      function getTransactions() {\n        return _getTransactions.apply(this, arguments);\n      }\n\n      return getTransactions;\n    }()\n    /**\n     * get transaction\n     * @param {String} hash the transaction hash\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee20(hash) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.prev = 0;\n                _context20.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getTx, \"/\").concat(hash));\n\n              case 3:\n                data = _context20.sent;\n                return _context20.abrupt(\"return\", data);\n\n              case 7:\n                _context20.prev = 7;\n                _context20.t0 = _context20[\"catch\"](0);\n                console.warn(\"getTx error\", _context20.t0);\n                return _context20.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[0, 7]]);\n      }));\n\n      function getTx(_x33) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n    /**\n     * get depth for a given market\n     * @param {String} symbol the market pair\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getDepth\",\n    value: function () {\n      var _getDepth = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee21() {\n        var symbol,\n            data,\n            _args21 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                symbol = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : \"BNB_BUSD-BD1\";\n                _context21.prev = 1;\n                _context21.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getDepth, \"?symbol=\").concat(symbol));\n\n              case 4:\n                data = _context21.sent;\n                return _context21.abrupt(\"return\", data);\n\n              case 8:\n                _context21.prev = 8;\n                _context21.t0 = _context21[\"catch\"](1);\n                console.warn(\"getDepth error\", _context21.t0);\n                return _context21.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[1, 8]]);\n      }));\n\n      function getDepth() {\n        return _getDepth.apply(this, arguments);\n      }\n\n      return getDepth;\n    }()\n    /**\n     * get open orders for an address\n     * @param {String} address binance address\n     * @param {String} symbol binance BEP2 symbol\n     * @return {Promise} resolves with http response\n     */\n\n  }, {\n    key: \"getOpenOrders\",\n    value: function () {\n      var _getOpenOrders = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee22() {\n        var address,\n            data,\n            _args22 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                address = _args22.length > 0 && _args22[0] !== undefined ? _args22[0] : this.address;\n                _context22.prev = 1;\n                _context22.next = 4;\n                return this._httpClient.request(\"get\", \"\".concat(api.getOpenOrders, \"?address=\").concat(address));\n\n              case 4:\n                data = _context22.sent;\n                return _context22.abrupt(\"return\", data);\n\n              case 8:\n                _context22.prev = 8;\n                _context22.t0 = _context22[\"catch\"](1);\n                console.warn(\"getOpenOrders error\", _context22.t0);\n                return _context22.abrupt(\"return\", []);\n\n              case 12:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[1, 8]]);\n      }));\n\n      function getOpenOrders() {\n        return _getOpenOrders.apply(this, arguments);\n      }\n\n      return getOpenOrders;\n    }()\n    /**\n     * get atomic swap\n     * @param {String} swapID: ID of an existing swap\n     * @return {Promise} AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByID\",\n    value: function () {\n      var _getSwapByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee23(swapID) {\n        var data;\n        return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.prev = 0;\n                _context23.next = 3;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"/\").concat(swapID));\n\n              case 3:\n                data = _context23.sent;\n                return _context23.abrupt(\"return\", data);\n\n              case 7:\n                _context23.prev = 7;\n                _context23.t0 = _context23[\"catch\"](0);\n                console.warn(\"query swap by swapID error\", _context23.t0);\n                return _context23.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[0, 7]]);\n      }));\n\n      function getSwapByID(_x34) {\n        return _getSwapByID.apply(this, arguments);\n      }\n\n      return getSwapByID;\n    }()\n    /**\n     * query atomic swap list by creator address\n     * @param {String} creator: swap creator address\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByCreator\",\n    value: function () {\n      var _getSwapByCreator = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee24(creator) {\n        var limit,\n            offset,\n            data,\n            _args24 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                limit = _args24.length > 1 && _args24[1] !== undefined ? _args24[1] : 100;\n                offset = _args24.length > 2 && _args24[2] !== undefined ? _args24[2] : 0;\n                _context24.prev = 2;\n                _context24.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?fromAddress=\").concat(creator, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context24.sent;\n                return _context24.abrupt(\"return\", data);\n\n              case 9:\n                _context24.prev = 9;\n                _context24.t0 = _context24[\"catch\"](2);\n                console.warn(\"query swap list by swap creator error\", _context24.t0);\n                return _context24.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this, [[2, 9]]);\n      }));\n\n      function getSwapByCreator(_x35) {\n        return _getSwapByCreator.apply(this, arguments);\n      }\n\n      return getSwapByCreator;\n    }()\n    /**\n     * query atomic swap list by recipient address\n     * @param {String} recipient: the recipient address of the swap\n     * @param {Number} offset from beginning, default 0\n     * @param {Number} limit, max 1000 is default\n     * @return {Promise} Array of AtomicSwap\n     */\n\n  }, {\n    key: \"getSwapByRecipient\",\n    value: function () {\n      var _getSwapByRecipient = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee25(recipient) {\n        var limit,\n            offset,\n            data,\n            _args25 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                limit = _args25.length > 1 && _args25[1] !== undefined ? _args25[1] : 100;\n                offset = _args25.length > 2 && _args25[2] !== undefined ? _args25[2] : 0;\n                _context25.prev = 2;\n                _context25.next = 5;\n                return this._httpClient.request(\"get\", \"\".concat(api.getSwaps, \"?toAddress=\").concat(recipient, \"&limit=\").concat(limit, \"&offset=\").concat(offset));\n\n              case 5:\n                data = _context25.sent;\n                return _context25.abrupt(\"return\", data);\n\n              case 9:\n                _context25.prev = 9;\n                _context25.t0 = _context25[\"catch\"](2);\n                console.warn(\"query swap list by swap recipient error\", _context25.t0);\n                return _context25.abrupt(\"return\", []);\n\n              case 13:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this, [[2, 9]]);\n      }));\n\n      function getSwapByRecipient(_x36) {\n        return _getSwapByRecipient.apply(this, arguments);\n      }\n\n      return getSwapByRecipient;\n    }()\n    /**\n     * Creates a private key and returns it and its address.\n     * @return {object} the private key and address in an object.\n     * {\n     *  address,\n     *  privateKey\n     * }\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function createAccount() {\n      var privateKey = crypto.generatePrivateKey();\n      return {\n        privateKey: privateKey,\n        address: crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix)\n      };\n    }\n    /**\n     * Creates an account keystore object, and returns the private key and address.\n     * @param {String} password\n     *  {\n     *  privateKey,\n     *  address,\n     *  keystore\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithKeystore\",\n    value: function createAccountWithKeystore(password) {\n      if (!password) {\n        throw new Error(\"password should not be falsy\");\n      }\n\n      var privateKey = crypto.generatePrivateKey();\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      var keystore = crypto.generateKeyStore(privateKey, password);\n      return {\n        privateKey: privateKey,\n        address: address,\n        keystore: keystore\n      };\n    }\n    /**\n     * Creates an account from mnemonic seed phrase.\n     * @return {object}\n     * {\n     *  privateKey,\n     *  address,\n     *  mnemonic\n     * }\n     */\n\n  }, {\n    key: \"createAccountWithMneomnic\",\n    value: function createAccountWithMneomnic() {\n      var mnemonic = crypto.generateMnemonic();\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address,\n        mnemonic: mnemonic\n      };\n    }\n    /**\n     * Recovers an account from a keystore object.\n     * @param {object} keystore object.\n     * @param {string} password password.\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromKeystore\",\n    value: function recoverAccountFromKeystore(keystore, password) {\n      var privateKey = crypto.getPrivateKeyFromKeyStore(keystore, password);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Recovers an account from a mnemonic seed phrase.\n     * @param {string} mneomnic\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromMnemonic\",\n    value: function recoverAccountFromMnemonic(mnemonic) {\n      var privateKey = crypto.getPrivateKeyFromMnemonic(mnemonic);\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    } // support an old method name containing a typo\n\n  }, {\n    key: \"recoverAccountFromMneomnic\",\n    value: function recoverAccountFromMneomnic(mnemonic) {\n      return this.recoverAccountFromMnemonic(mnemonic);\n    }\n    /**\n     * Recovers an account using private key.\n     * @param {String} privateKey\n     * {\n     * privateKey,\n     * address\n     * }\n     */\n\n  }, {\n    key: \"recoverAccountFromPrivateKey\",\n    value: function recoverAccountFromPrivateKey(privateKey) {\n      var address = crypto.getAddressFromPrivateKey(privateKey, this.addressPrefix);\n      return {\n        privateKey: privateKey,\n        address: address\n      };\n    }\n    /**\n     * Validates an address.\n     * @param {String} address\n     * @param {String} prefix\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"checkAddress\",\n    value: function checkAddress(address) {\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.addressPrefix;\n      return crypto.checkAddress(address, prefix);\n    }\n    /**\n     * Returns the address for the current account if setPrivateKey has been called on this client.\n     * @return {String}\n     */\n\n  }, {\n    key: \"getClientKeyAddress\",\n    value: function getClientKeyAddress() {\n      if (!this._privateKey) throw new Error(\"no private key is set on this client\");\n      var address = crypto.getAddressFromPrivateKey(this._privateKey, this.addressPrefix);\n      this.address = address;\n      return address;\n    }\n  }]);\n  return BncClient;\n}();\n\nexports.BncClient = BncClient;"]},"metadata":{},"sourceType":"script"}