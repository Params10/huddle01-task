{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.describeETHPath = exports.ETHTransactionType = void 0;\n\nconst utils_1 = require(\"./utils\");\n\nvar ETHTransactionType;\n\n(function (ETHTransactionType) {\n  ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_LEGACY\"] = 0] = \"ETH_TX_TYPE_LEGACY\";\n  ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_2930\"] = 1] = \"ETH_TX_TYPE_EIP_2930\";\n  ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_1559\"] = 2] = \"ETH_TX_TYPE_EIP_1559\";\n})(ETHTransactionType = exports.ETHTransactionType || (exports.ETHTransactionType = {}));\n\nfunction describeETHPath(path) {\n  let pathStr = utils_1.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Ethereum\",\n    isKnown: false\n  };\n  if (path.length !== 5) return unknown;\n  if (path[0] !== 0x80000000 + 44) return unknown;\n  if (path[1] !== 0x80000000 + utils_1.slip44ByCoin(\"Ethereum\")) return unknown;\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) return unknown;\n  if (path[3] !== 0) return unknown;\n  if (path[4] !== 0) return unknown;\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Ethereum Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Ethereum\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nexports.describeETHPath = describeETHPath;","map":{"version":3,"sources":["../src/ethereum.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAGA,IAAY,kBAAZ;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,kBAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,sBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,sBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,sBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,sBAAA;AACD,CAJD,EAAY,kBAAkB,GAAlB,OAAA,CAAA,kBAAA,KAAA,OAAA,CAAA,kBAAA,GAAkB,EAAlB,CAAZ;;AAyIA,SAAgB,eAAhB,CAAgC,IAAhC,EAA+C;AAC7C,MAAI,OAAO,GAAG,OAAA,CAAA,mBAAA,CAAoB,IAApB,CAAd;AACA,MAAI,OAAO,GAAoB;AAC7B,IAAA,OAAO,EAAE,OADoB;AAE7B,IAAA,IAAI,EAAE,UAFuB;AAG7B,IAAA,OAAO,EAAE;AAHoB,GAA/B;AAMA,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB,OAAO,OAAP;AAEvB,MAAI,IAAI,CAAC,CAAD,CAAJ,KAAY,aAAa,EAA7B,EAAiC,OAAO,OAAP;AAEjC,MAAI,IAAI,CAAC,CAAD,CAAJ,KAAY,aAAa,OAAA,CAAA,YAAA,CAAa,UAAb,CAA7B,EAAuD,OAAO,OAAP;AAEvD,MAAI,CAAC,IAAI,CAAC,CAAD,CAAJ,GAAU,UAAX,MAA2B,CAA3B,KAAiC,UAArC,EAAiD,OAAO,OAAP;AAEjD,MAAI,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB,OAAO,OAAP;AAEnB,MAAI,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB,OAAO,OAAP;AAEnB,MAAI,KAAK,GAAG,IAAI,CAAC,CAAD,CAAJ,GAAU,UAAtB;AACA,SAAO;AACL,IAAA,OAAO,EAAE,qBAAqB,KAAK,EAD9B;AAEL,IAAA,UAAU,EAAE,KAFP;AAGL,IAAA,YAAY,EAAE,IAHT;AAIL,IAAA,IAAI,EAAE,UAJD;AAKL,IAAA,OAAO,EAAE,IALJ;AAML,IAAA,SAAS,EAAE;AANN,GAAP;AAQD;;AA7BD,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.describeETHPath = exports.ETHTransactionType = void 0;\nconst utils_1 = require(\"./utils\");\nvar ETHTransactionType;\n(function (ETHTransactionType) {\n    ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_LEGACY\"] = 0] = \"ETH_TX_TYPE_LEGACY\";\n    ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_2930\"] = 1] = \"ETH_TX_TYPE_EIP_2930\";\n    ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_1559\"] = 2] = \"ETH_TX_TYPE_EIP_1559\";\n})(ETHTransactionType = exports.ETHTransactionType || (exports.ETHTransactionType = {}));\nfunction describeETHPath(path) {\n    let pathStr = utils_1.addressNListToBIP32(path);\n    let unknown = {\n        verbose: pathStr,\n        coin: \"Ethereum\",\n        isKnown: false,\n    };\n    if (path.length !== 5)\n        return unknown;\n    if (path[0] !== 0x80000000 + 44)\n        return unknown;\n    if (path[1] !== 0x80000000 + utils_1.slip44ByCoin(\"Ethereum\"))\n        return unknown;\n    if ((path[2] & 0x80000000) >>> 0 !== 0x80000000)\n        return unknown;\n    if (path[3] !== 0)\n        return unknown;\n    if (path[4] !== 0)\n        return unknown;\n    let index = path[2] & 0x7fffffff;\n    return {\n        verbose: `Ethereum Account #${index}`,\n        accountIdx: index,\n        wholeAccount: true,\n        coin: \"Ethereum\",\n        isKnown: true,\n        isPrefork: false,\n    };\n}\nexports.describeETHPath = describeETHPath;\n//# sourceMappingURL=ethereum.js.map"]},"metadata":{},"sourceType":"script"}