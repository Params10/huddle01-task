{"ast":null,"code":"// source: types.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\n\nvar global = function () {\n  return this;\n}.call(null);\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\n\ngoog.object.extend(proto, google_protobuf_descriptor_pb);\n\nvar exchange_pb = require('./exchange_pb.js');\n\ngoog.object.extend(proto, exchange_pb);\ngoog.exportSymbol('proto.ButtonRequestType', null, global);\ngoog.exportSymbol('proto.CoinType', null, global);\ngoog.exportSymbol('proto.ExchangeType', null, global);\ngoog.exportSymbol('proto.FailureType', null, global);\ngoog.exportSymbol('proto.HDNodePathType', null, global);\ngoog.exportSymbol('proto.HDNodeType', null, global);\ngoog.exportSymbol('proto.IdentityType', null, global);\ngoog.exportSymbol('proto.InputScriptType', null, global);\ngoog.exportSymbol('proto.MultisigRedeemScriptType', null, global);\ngoog.exportSymbol('proto.OutputAddressType', null, global);\ngoog.exportSymbol('proto.OutputScriptType', null, global);\ngoog.exportSymbol('proto.PinMatrixRequestType', null, global);\ngoog.exportSymbol('proto.PolicyType', null, global);\ngoog.exportSymbol('proto.RawTransactionType', null, global);\ngoog.exportSymbol('proto.RequestType', null, global);\ngoog.exportSymbol('proto.TransactionType', null, global);\ngoog.exportSymbol('proto.TxInputType', null, global);\ngoog.exportSymbol('proto.TxOutputBinType', null, global);\ngoog.exportSymbol('proto.TxOutputType', null, global);\ngoog.exportSymbol('proto.TxRequestDetailsType', null, global);\ngoog.exportSymbol('proto.TxRequestSerializedType', null, global);\ngoog.exportSymbol('proto.wireDebugIn', null, global);\ngoog.exportSymbol('proto.wireDebugOut', null, global);\ngoog.exportSymbol('proto.wireIn', null, global);\ngoog.exportSymbol('proto.wireOut', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.HDNodeType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.HDNodeType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.HDNodeType.displayName = 'proto.HDNodeType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.HDNodePathType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.HDNodePathType.repeatedFields_, null);\n};\n\ngoog.inherits(proto.HDNodePathType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.HDNodePathType.displayName = 'proto.HDNodePathType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CoinType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CoinType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinType.displayName = 'proto.CoinType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.MultisigRedeemScriptType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.MultisigRedeemScriptType.repeatedFields_, null);\n};\n\ngoog.inherits(proto.MultisigRedeemScriptType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MultisigRedeemScriptType.displayName = 'proto.MultisigRedeemScriptType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxInputType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.TxInputType.repeatedFields_, null);\n};\n\ngoog.inherits(proto.TxInputType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxInputType.displayName = 'proto.TxInputType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxOutputType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.TxOutputType.repeatedFields_, null);\n};\n\ngoog.inherits(proto.TxOutputType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxOutputType.displayName = 'proto.TxOutputType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxOutputBinType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.TxOutputBinType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxOutputBinType.displayName = 'proto.TxOutputBinType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TransactionType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.TransactionType.repeatedFields_, null);\n};\n\ngoog.inherits(proto.TransactionType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TransactionType.displayName = 'proto.TransactionType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.RawTransactionType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.RawTransactionType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.RawTransactionType.displayName = 'proto.RawTransactionType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxRequestDetailsType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.TxRequestDetailsType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxRequestDetailsType.displayName = 'proto.TxRequestDetailsType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxRequestSerializedType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.TxRequestSerializedType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxRequestSerializedType.displayName = 'proto.TxRequestSerializedType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.IdentityType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.IdentityType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.IdentityType.displayName = 'proto.IdentityType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.PolicyType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.PolicyType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PolicyType.displayName = 'proto.PolicyType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ExchangeType = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ExchangeType.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ExchangeType, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ExchangeType.displayName = 'proto.ExchangeType';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.HDNodeType.prototype.toObject = function (opt_includeInstance) {\n    return proto.HDNodeType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.HDNodeType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.HDNodeType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      depth: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      fingerprint: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      childNum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      chainCode: msg.getChainCode_asB64(),\n      privateKey: msg.getPrivateKey_asB64(),\n      publicKey: msg.getPublicKey_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.HDNodeType}\n */\n\n\nproto.HDNodeType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.HDNodeType();\n  return proto.HDNodeType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.HDNodeType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.HDNodeType}\n */\n\n\nproto.HDNodeType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setDepth(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setFingerprint(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setChildNum(value);\n        break;\n\n      case 4:\n        var value = reader.readBytes();\n        msg.setChainCode(value);\n        break;\n\n      case 5:\n        var value = reader.readBytes();\n        msg.setPrivateKey(value);\n        break;\n\n      case 6:\n        var value = reader.readBytes();\n        msg.setPublicKey(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.HDNodeType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.HDNodeType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.HDNodeType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.HDNodeType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBytes(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeBytes(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBytes(6, f);\n  }\n};\n/**\n * required uint32 depth = 1;\n * @return {number}\n */\n\n\nproto.HDNodeType.prototype.getDepth = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.setDepth = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.clearDepth = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodeType.prototype.hasDepth = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required uint32 fingerprint = 2;\n * @return {number}\n */\n\n\nproto.HDNodeType.prototype.getFingerprint = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.setFingerprint = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.clearFingerprint = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodeType.prototype.hasFingerprint = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * required uint32 child_num = 3;\n * @return {number}\n */\n\n\nproto.HDNodeType.prototype.getChildNum = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.setChildNum = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.clearChildNum = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodeType.prototype.hasChildNum = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * required bytes chain_code = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.HDNodeType.prototype.getChainCode = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * required bytes chain_code = 4;\n * This is a type-conversion wrapper around `getChainCode()`\n * @return {string}\n */\n\n\nproto.HDNodeType.prototype.getChainCode_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getChainCode());\n};\n/**\n * required bytes chain_code = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainCode()`\n * @return {!Uint8Array}\n */\n\n\nproto.HDNodeType.prototype.getChainCode_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getChainCode());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.setChainCode = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.clearChainCode = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodeType.prototype.hasChainCode = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional bytes private_key = 5;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.HDNodeType.prototype.getPrivateKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * optional bytes private_key = 5;\n * This is a type-conversion wrapper around `getPrivateKey()`\n * @return {string}\n */\n\n\nproto.HDNodeType.prototype.getPrivateKey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPrivateKey());\n};\n/**\n * optional bytes private_key = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrivateKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.HDNodeType.prototype.getPrivateKey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPrivateKey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.setPrivateKey = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.clearPrivateKey = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodeType.prototype.hasPrivateKey = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bytes public_key = 6;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.HDNodeType.prototype.getPublicKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * optional bytes public_key = 6;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\n\n\nproto.HDNodeType.prototype.getPublicKey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPublicKey());\n};\n/**\n * optional bytes public_key = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.HDNodeType.prototype.getPublicKey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPublicKey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.setPublicKey = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\n\n\nproto.HDNodeType.prototype.clearPublicKey = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodeType.prototype.hasPublicKey = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.HDNodePathType.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.HDNodePathType.prototype.toObject = function (opt_includeInstance) {\n    return proto.HDNodePathType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.HDNodePathType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.HDNodePathType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      node: (f = msg.getNode()) && proto.HDNodeType.toObject(includeInstance, f),\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.HDNodePathType}\n */\n\n\nproto.HDNodePathType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.HDNodePathType();\n  return proto.HDNodePathType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.HDNodePathType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.HDNodePathType}\n */\n\n\nproto.HDNodePathType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.HDNodeType();\n        reader.readMessage(value, proto.HDNodeType.deserializeBinaryFromReader);\n        msg.setNode(value);\n        break;\n\n      case 2:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.HDNodePathType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.HDNodePathType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.HDNodePathType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.HDNodePathType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getNode();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.HDNodeType.serializeBinaryToWriter);\n  }\n\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(2, f);\n  }\n};\n/**\n * required HDNodeType node = 1;\n * @return {!proto.HDNodeType}\n */\n\n\nproto.HDNodePathType.prototype.getNode = function () {\n  return jspb.Message.getWrapperField(this, proto.HDNodeType, 1, 1);\n};\n/**\n * @param {!proto.HDNodeType} value\n * @return {!proto.HDNodePathType} returns this\n*/\n\n\nproto.HDNodePathType.prototype.setNode = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodePathType} returns this\n */\n\n\nproto.HDNodePathType.prototype.clearNode = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.HDNodePathType.prototype.hasNode = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated uint32 address_n = 2;\n * @return {!Array<number>}\n */\n\n\nproto.HDNodePathType.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 2);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.HDNodePathType} returns this\n */\n\n\nproto.HDNodePathType.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.HDNodePathType} returns this\n */\n\n\nproto.HDNodePathType.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.HDNodePathType} returns this\n */\n\n\nproto.HDNodePathType.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CoinType.prototype.toObject = function (opt_includeInstance) {\n    return proto.CoinType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CoinType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CoinType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      coinName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      coinShortcut: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      addressType: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      maxfeeKb: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      addressTypeP2sh: jspb.Message.getFieldWithDefault(msg, 5, 5),\n      signedMessageHeader: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      bip44AccountPath: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      forkid: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n      decimals: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,\n      contractAddress: msg.getContractAddress_asB64(),\n      xpubMagic: jspb.Message.getFieldWithDefault(msg, 16, 76067358),\n      segwit: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,\n      forceBip143: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,\n      curveName: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,\n      cashaddrPrefix: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,\n      bech32Prefix: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,\n      decred: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,\n      xpubMagicSegwitP2sh: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,\n      xpubMagicSegwitNative: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,\n      nanoaddrPrefix: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinType}\n */\n\n\nproto.CoinType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinType();\n  return proto.CoinType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinType}\n */\n\n\nproto.CoinType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setCoinShortcut(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setAddressType(value);\n        break;\n\n      case 4:\n        var value = reader.readUint64();\n        msg.setMaxfeeKb(value);\n        break;\n\n      case 5:\n        var value = reader.readUint32();\n        msg.setAddressTypeP2sh(value);\n        break;\n\n      case 8:\n        var value = reader.readString();\n        msg.setSignedMessageHeader(value);\n        break;\n\n      case 9:\n        var value = reader.readUint32();\n        msg.setBip44AccountPath(value);\n        break;\n\n      case 12:\n        var value = reader.readUint32();\n        msg.setForkid(value);\n        break;\n\n      case 13:\n        var value = reader.readUint32();\n        msg.setDecimals(value);\n        break;\n\n      case 14:\n        var value = reader.readBytes();\n        msg.setContractAddress(value);\n        break;\n\n      case 16:\n        var value = reader.readUint32();\n        msg.setXpubMagic(value);\n        break;\n\n      case 18:\n        var value = reader.readBool();\n        msg.setSegwit(value);\n        break;\n\n      case 19:\n        var value = reader.readBool();\n        msg.setForceBip143(value);\n        break;\n\n      case 20:\n        var value = reader.readString();\n        msg.setCurveName(value);\n        break;\n\n      case 21:\n        var value = reader.readString();\n        msg.setCashaddrPrefix(value);\n        break;\n\n      case 22:\n        var value = reader.readString();\n        msg.setBech32Prefix(value);\n        break;\n\n      case 23:\n        var value = reader.readBool();\n        msg.setDecred(value);\n        break;\n\n      case 25:\n        var value = reader.readUint32();\n        msg.setXpubMagicSegwitP2sh(value);\n        break;\n\n      case 26:\n        var value = reader.readUint32();\n        msg.setXpubMagicSegwitNative(value);\n        break;\n\n      case 27:\n        var value = reader.readString();\n        msg.setNanoaddrPrefix(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CoinType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CoinType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint64(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeUint32(5, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeString(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeUint32(9, f);\n  }\n\n  f = jspb.Message.getField(message, 12);\n\n  if (f != null) {\n    writer.writeUint32(12, f);\n  }\n\n  f = jspb.Message.getField(message, 13);\n\n  if (f != null) {\n    writer.writeUint32(13, f);\n  }\n\n  f = jspb.Message.getField(message, 14);\n\n  if (f != null) {\n    writer.writeBytes(14, f);\n  }\n\n  f = jspb.Message.getField(message, 16);\n\n  if (f != null) {\n    writer.writeUint32(16, f);\n  }\n\n  f = jspb.Message.getField(message, 18);\n\n  if (f != null) {\n    writer.writeBool(18, f);\n  }\n\n  f = jspb.Message.getField(message, 19);\n\n  if (f != null) {\n    writer.writeBool(19, f);\n  }\n\n  f = jspb.Message.getField(message, 20);\n\n  if (f != null) {\n    writer.writeString(20, f);\n  }\n\n  f = jspb.Message.getField(message, 21);\n\n  if (f != null) {\n    writer.writeString(21, f);\n  }\n\n  f = jspb.Message.getField(message, 22);\n\n  if (f != null) {\n    writer.writeString(22, f);\n  }\n\n  f = jspb.Message.getField(message, 23);\n\n  if (f != null) {\n    writer.writeBool(23, f);\n  }\n\n  f = jspb.Message.getField(message, 25);\n\n  if (f != null) {\n    writer.writeUint32(25, f);\n  }\n\n  f = jspb.Message.getField(message, 26);\n\n  if (f != null) {\n    writer.writeUint32(26, f);\n  }\n\n  f = jspb.Message.getField(message, 27);\n\n  if (f != null) {\n    writer.writeString(27, f);\n  }\n};\n/**\n * optional string coin_name = 1;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string coin_shortcut = 2;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getCoinShortcut = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setCoinShortcut = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearCoinShortcut = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasCoinShortcut = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint32 address_type = 3;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getAddressType = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setAddressType = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearAddressType = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasAddressType = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional uint64 maxfee_kb = 4;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getMaxfeeKb = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setMaxfeeKb = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearMaxfeeKb = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasMaxfeeKb = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 address_type_p2sh = 5;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getAddressTypeP2sh = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 5);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setAddressTypeP2sh = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearAddressTypeP2sh = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasAddressTypeP2sh = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional string signed_message_header = 8;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getSignedMessageHeader = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setSignedMessageHeader = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearSignedMessageHeader = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasSignedMessageHeader = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 bip44_account_path = 9;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getBip44AccountPath = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setBip44AccountPath = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearBip44AccountPath = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasBip44AccountPath = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint32 forkid = 12;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getForkid = function () {\n  return jspb.Message.getFieldWithDefault(this, 12, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setForkid = function (value) {\n  return jspb.Message.setField(this, 12, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearForkid = function () {\n  return jspb.Message.setField(this, 12, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasForkid = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * optional uint32 decimals = 13;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getDecimals = function () {\n  return jspb.Message.getFieldWithDefault(this, 13, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setDecimals = function (value) {\n  return jspb.Message.setField(this, 13, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearDecimals = function () {\n  return jspb.Message.setField(this, 13, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasDecimals = function () {\n  return jspb.Message.getField(this, 13) != null;\n};\n/**\n * optional bytes contract_address = 14;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.CoinType.prototype.getContractAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 14, \"\");\n};\n/**\n * optional bytes contract_address = 14;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getContractAddress_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getContractAddress());\n};\n/**\n * optional bytes contract_address = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\n\n\nproto.CoinType.prototype.getContractAddress_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getContractAddress());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setContractAddress = function (value) {\n  return jspb.Message.setField(this, 14, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearContractAddress = function () {\n  return jspb.Message.setField(this, 14, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasContractAddress = function () {\n  return jspb.Message.getField(this, 14) != null;\n};\n/**\n * optional uint32 xpub_magic = 16;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getXpubMagic = function () {\n  return jspb.Message.getFieldWithDefault(this, 16, 76067358);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setXpubMagic = function (value) {\n  return jspb.Message.setField(this, 16, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearXpubMagic = function () {\n  return jspb.Message.setField(this, 16, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasXpubMagic = function () {\n  return jspb.Message.getField(this, 16) != null;\n};\n/**\n * optional bool segwit = 18;\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.getSegwit = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 18, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setSegwit = function (value) {\n  return jspb.Message.setField(this, 18, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearSegwit = function () {\n  return jspb.Message.setField(this, 18, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasSegwit = function () {\n  return jspb.Message.getField(this, 18) != null;\n};\n/**\n * optional bool force_bip143 = 19;\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.getForceBip143 = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 19, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setForceBip143 = function (value) {\n  return jspb.Message.setField(this, 19, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearForceBip143 = function () {\n  return jspb.Message.setField(this, 19, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasForceBip143 = function () {\n  return jspb.Message.getField(this, 19) != null;\n};\n/**\n * optional string curve_name = 20;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getCurveName = function () {\n  return jspb.Message.getFieldWithDefault(this, 20, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setCurveName = function (value) {\n  return jspb.Message.setField(this, 20, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearCurveName = function () {\n  return jspb.Message.setField(this, 20, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasCurveName = function () {\n  return jspb.Message.getField(this, 20) != null;\n};\n/**\n * optional string cashaddr_prefix = 21;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getCashaddrPrefix = function () {\n  return jspb.Message.getFieldWithDefault(this, 21, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setCashaddrPrefix = function (value) {\n  return jspb.Message.setField(this, 21, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearCashaddrPrefix = function () {\n  return jspb.Message.setField(this, 21, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasCashaddrPrefix = function () {\n  return jspb.Message.getField(this, 21) != null;\n};\n/**\n * optional string bech32_prefix = 22;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getBech32Prefix = function () {\n  return jspb.Message.getFieldWithDefault(this, 22, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setBech32Prefix = function (value) {\n  return jspb.Message.setField(this, 22, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearBech32Prefix = function () {\n  return jspb.Message.setField(this, 22, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasBech32Prefix = function () {\n  return jspb.Message.getField(this, 22) != null;\n};\n/**\n * optional bool decred = 23;\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.getDecred = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 23, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setDecred = function (value) {\n  return jspb.Message.setField(this, 23, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearDecred = function () {\n  return jspb.Message.setField(this, 23, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasDecred = function () {\n  return jspb.Message.getField(this, 23) != null;\n};\n/**\n * optional uint32 xpub_magic_segwit_p2sh = 25;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getXpubMagicSegwitP2sh = function () {\n  return jspb.Message.getFieldWithDefault(this, 25, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setXpubMagicSegwitP2sh = function (value) {\n  return jspb.Message.setField(this, 25, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearXpubMagicSegwitP2sh = function () {\n  return jspb.Message.setField(this, 25, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasXpubMagicSegwitP2sh = function () {\n  return jspb.Message.getField(this, 25) != null;\n};\n/**\n * optional uint32 xpub_magic_segwit_native = 26;\n * @return {number}\n */\n\n\nproto.CoinType.prototype.getXpubMagicSegwitNative = function () {\n  return jspb.Message.getFieldWithDefault(this, 26, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setXpubMagicSegwitNative = function (value) {\n  return jspb.Message.setField(this, 26, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearXpubMagicSegwitNative = function () {\n  return jspb.Message.setField(this, 26, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasXpubMagicSegwitNative = function () {\n  return jspb.Message.getField(this, 26) != null;\n};\n/**\n * optional string nanoaddr_prefix = 27;\n * @return {string}\n */\n\n\nproto.CoinType.prototype.getNanoaddrPrefix = function () {\n  return jspb.Message.getFieldWithDefault(this, 27, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.setNanoaddrPrefix = function (value) {\n  return jspb.Message.setField(this, 27, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\n\n\nproto.CoinType.prototype.clearNanoaddrPrefix = function () {\n  return jspb.Message.setField(this, 27, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinType.prototype.hasNanoaddrPrefix = function () {\n  return jspb.Message.getField(this, 27) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.MultisigRedeemScriptType.repeatedFields_ = [1, 2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.MultisigRedeemScriptType.prototype.toObject = function (opt_includeInstance) {\n    return proto.MultisigRedeemScriptType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.MultisigRedeemScriptType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.MultisigRedeemScriptType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pubkeysList: jspb.Message.toObjectList(msg.getPubkeysList(), proto.HDNodePathType.toObject, includeInstance),\n      signaturesList: msg.getSignaturesList_asB64(),\n      m: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MultisigRedeemScriptType}\n */\n\n\nproto.MultisigRedeemScriptType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MultisigRedeemScriptType();\n  return proto.MultisigRedeemScriptType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MultisigRedeemScriptType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MultisigRedeemScriptType}\n */\n\n\nproto.MultisigRedeemScriptType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.HDNodePathType();\n        reader.readMessage(value, proto.HDNodePathType.deserializeBinaryFromReader);\n        msg.addPubkeys(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.addSignatures(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setM(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.MultisigRedeemScriptType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MultisigRedeemScriptType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.MultisigRedeemScriptType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPubkeysList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.HDNodePathType.serializeBinaryToWriter);\n  }\n\n  f = message.getSignaturesList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * repeated HDNodePathType pubkeys = 1;\n * @return {!Array<!proto.HDNodePathType>}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.getPubkeysList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.HDNodePathType, 1);\n};\n/**\n * @param {!Array<!proto.HDNodePathType>} value\n * @return {!proto.MultisigRedeemScriptType} returns this\n*/\n\n\nproto.MultisigRedeemScriptType.prototype.setPubkeysList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.HDNodePathType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.HDNodePathType}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.addPubkeys = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.HDNodePathType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\n\n\nproto.MultisigRedeemScriptType.prototype.clearPubkeysList = function () {\n  return this.setPubkeysList([]);\n};\n/**\n * repeated bytes signatures = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.getSignaturesList = function () {\n  return jspb.Message.getRepeatedField(this, 2);\n};\n/**\n * repeated bytes signatures = 2;\n * This is a type-conversion wrapper around `getSignaturesList()`\n * @return {!Array<string>}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.getSignaturesList_asB64 = function () {\n  return jspb.Message.bytesListAsB64(this.getSignaturesList());\n};\n/**\n * repeated bytes signatures = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignaturesList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.getSignaturesList_asU8 = function () {\n  return jspb.Message.bytesListAsU8(this.getSignaturesList());\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\n\n\nproto.MultisigRedeemScriptType.prototype.setSignaturesList = function (value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\n\n\nproto.MultisigRedeemScriptType.prototype.addSignatures = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\n\n\nproto.MultisigRedeemScriptType.prototype.clearSignaturesList = function () {\n  return this.setSignaturesList([]);\n};\n/**\n * optional uint32 m = 3;\n * @return {number}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.getM = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\n\n\nproto.MultisigRedeemScriptType.prototype.setM = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\n\n\nproto.MultisigRedeemScriptType.prototype.clearM = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.MultisigRedeemScriptType.prototype.hasM = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.TxInputType.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxInputType.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxInputType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxInputType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxInputType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      prevHash: msg.getPrevHash_asB64(),\n      prevIndex: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      scriptSig: msg.getScriptSig_asB64(),\n      sequence: jspb.Message.getFieldWithDefault(msg, 5, -1),\n      scriptType: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      multisig: (f = msg.getMultisig()) && proto.MultisigRedeemScriptType.toObject(includeInstance, f),\n      amount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      decredTree: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      decredScriptVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxInputType}\n */\n\n\nproto.TxInputType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxInputType();\n  return proto.TxInputType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxInputType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxInputType}\n */\n\n\nproto.TxInputType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setPrevHash(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setPrevIndex(value);\n        break;\n\n      case 4:\n        var value = reader.readBytes();\n        msg.setScriptSig(value);\n        break;\n\n      case 5:\n        var value = reader.readUint32();\n        msg.setSequence(value);\n        break;\n\n      case 6:\n        var value = reader.readEnum();\n        msg.setScriptType(value);\n        break;\n\n      case 7:\n        var value = new proto.MultisigRedeemScriptType();\n        reader.readMessage(value, proto.MultisigRedeemScriptType.deserializeBinaryFromReader);\n        msg.setMultisig(value);\n        break;\n\n      case 8:\n        var value = reader.readUint64();\n        msg.setAmount(value);\n        break;\n\n      case 9:\n        var value = reader.readUint32();\n        msg.setDecredTree(value);\n        break;\n\n      case 10:\n        var value = reader.readUint32();\n        msg.setDecredScriptVersion(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxInputType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxInputType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxInputType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxInputType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBytes(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeUint32(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeEnum(6, f);\n  }\n\n  f = message.getMultisig();\n\n  if (f != null) {\n    writer.writeMessage(7, f, proto.MultisigRedeemScriptType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint64(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeUint32(9, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeUint32(10, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.TxInputType.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * required bytes prev_hash = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxInputType.prototype.getPrevHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * required bytes prev_hash = 2;\n * This is a type-conversion wrapper around `getPrevHash()`\n * @return {string}\n */\n\n\nproto.TxInputType.prototype.getPrevHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPrevHash());\n};\n/**\n * required bytes prev_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxInputType.prototype.getPrevHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPrevHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setPrevHash = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearPrevHash = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasPrevHash = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * required uint32 prev_index = 3;\n * @return {number}\n */\n\n\nproto.TxInputType.prototype.getPrevIndex = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setPrevIndex = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearPrevIndex = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasPrevIndex = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bytes script_sig = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxInputType.prototype.getScriptSig = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * optional bytes script_sig = 4;\n * This is a type-conversion wrapper around `getScriptSig()`\n * @return {string}\n */\n\n\nproto.TxInputType.prototype.getScriptSig_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getScriptSig());\n};\n/**\n * optional bytes script_sig = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScriptSig()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxInputType.prototype.getScriptSig_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getScriptSig());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setScriptSig = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearScriptSig = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasScriptSig = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 sequence = 5;\n * @return {number}\n */\n\n\nproto.TxInputType.prototype.getSequence = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, -1);\n};\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setSequence = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearSequence = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasSequence = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional InputScriptType script_type = 6;\n * @return {!proto.InputScriptType}\n */\n\n\nproto.TxInputType.prototype.getScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, 0);\n};\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setScriptType = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearScriptType = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasScriptType = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional MultisigRedeemScriptType multisig = 7;\n * @return {?proto.MultisigRedeemScriptType}\n */\n\n\nproto.TxInputType.prototype.getMultisig = function () {\n  return jspb.Message.getWrapperField(this, proto.MultisigRedeemScriptType, 7);\n};\n/**\n * @param {?proto.MultisigRedeemScriptType|undefined} value\n * @return {!proto.TxInputType} returns this\n*/\n\n\nproto.TxInputType.prototype.setMultisig = function (value) {\n  return jspb.Message.setWrapperField(this, 7, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearMultisig = function () {\n  return this.setMultisig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasMultisig = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint64 amount = 8;\n * @return {number}\n */\n\n\nproto.TxInputType.prototype.getAmount = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setAmount = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearAmount = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasAmount = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 decred_tree = 9;\n * @return {number}\n */\n\n\nproto.TxInputType.prototype.getDecredTree = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setDecredTree = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearDecredTree = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasDecredTree = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint32 decred_script_version = 10;\n * @return {number}\n */\n\n\nproto.TxInputType.prototype.getDecredScriptVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 10, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.setDecredScriptVersion = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\n\n\nproto.TxInputType.prototype.clearDecredScriptVersion = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxInputType.prototype.hasDecredScriptVersion = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.TxOutputType.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxOutputType.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxOutputType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxOutputType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxOutputType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,\n      amount: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      scriptType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      multisig: (f = msg.getMultisig()) && proto.MultisigRedeemScriptType.toObject(includeInstance, f),\n      opReturnData: msg.getOpReturnData_asB64(),\n      addressType: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n      exchangeType: (f = msg.getExchangeType()) && proto.ExchangeType.toObject(includeInstance, f),\n      decredScriptVersion: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxOutputType}\n */\n\n\nproto.TxOutputType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxOutputType();\n  return proto.TxOutputType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxOutputType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxOutputType}\n */\n\n\nproto.TxOutputType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 3:\n        var value = reader.readUint64();\n        msg.setAmount(value);\n        break;\n\n      case 4:\n        var value = reader.readEnum();\n        msg.setScriptType(value);\n        break;\n\n      case 5:\n        var value = new proto.MultisigRedeemScriptType();\n        reader.readMessage(value, proto.MultisigRedeemScriptType.deserializeBinaryFromReader);\n        msg.setMultisig(value);\n        break;\n\n      case 6:\n        var value = reader.readBytes();\n        msg.setOpReturnData(value);\n        break;\n\n      case 7:\n        var value = reader.readEnum();\n        msg.setAddressType(value);\n        break;\n\n      case 8:\n        var value = new proto.ExchangeType();\n        reader.readMessage(value, proto.ExchangeType.deserializeBinaryFromReader);\n        msg.setExchangeType(value);\n        break;\n\n      case 9:\n        var value = reader.readUint32();\n        msg.setDecredScriptVersion(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxOutputType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxOutputType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxOutputType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxOutputType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint64(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeEnum(4, f);\n  }\n\n  f = message.getMultisig();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.MultisigRedeemScriptType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBytes(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getExchangeType();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.ExchangeType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeUint32(9, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.TxOutputType.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated uint32 address_n = 2;\n * @return {!Array<number>}\n */\n\n\nproto.TxOutputType.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 2);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * required uint64 amount = 3;\n * @return {number}\n */\n\n\nproto.TxOutputType.prototype.getAmount = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setAmount = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearAmount = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasAmount = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * required OutputScriptType script_type = 4;\n * @return {!proto.OutputScriptType}\n */\n\n\nproto.TxOutputType.prototype.getScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {!proto.OutputScriptType} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setScriptType = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearScriptType = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasScriptType = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional MultisigRedeemScriptType multisig = 5;\n * @return {?proto.MultisigRedeemScriptType}\n */\n\n\nproto.TxOutputType.prototype.getMultisig = function () {\n  return jspb.Message.getWrapperField(this, proto.MultisigRedeemScriptType, 5);\n};\n/**\n * @param {?proto.MultisigRedeemScriptType|undefined} value\n * @return {!proto.TxOutputType} returns this\n*/\n\n\nproto.TxOutputType.prototype.setMultisig = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearMultisig = function () {\n  return this.setMultisig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasMultisig = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bytes op_return_data = 6;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxOutputType.prototype.getOpReturnData = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * optional bytes op_return_data = 6;\n * This is a type-conversion wrapper around `getOpReturnData()`\n * @return {string}\n */\n\n\nproto.TxOutputType.prototype.getOpReturnData_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getOpReturnData());\n};\n/**\n * optional bytes op_return_data = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOpReturnData()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxOutputType.prototype.getOpReturnData_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getOpReturnData());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setOpReturnData = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearOpReturnData = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasOpReturnData = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional OutputAddressType address_type = 7;\n * @return {!proto.OutputAddressType}\n */\n\n\nproto.TxOutputType.prototype.getAddressType = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, 0);\n};\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setAddressType = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearAddressType = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasAddressType = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional ExchangeType exchange_type = 8;\n * @return {?proto.ExchangeType}\n */\n\n\nproto.TxOutputType.prototype.getExchangeType = function () {\n  return jspb.Message.getWrapperField(this, proto.ExchangeType, 8);\n};\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.TxOutputType} returns this\n*/\n\n\nproto.TxOutputType.prototype.setExchangeType = function (value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearExchangeType = function () {\n  return this.setExchangeType(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasExchangeType = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 decred_script_version = 9;\n * @return {number}\n */\n\n\nproto.TxOutputType.prototype.getDecredScriptVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.setDecredScriptVersion = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\n\n\nproto.TxOutputType.prototype.clearDecredScriptVersion = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputType.prototype.hasDecredScriptVersion = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxOutputBinType.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxOutputBinType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxOutputBinType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxOutputBinType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      scriptPubkey: msg.getScriptPubkey_asB64(),\n      decredScriptVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxOutputBinType}\n */\n\n\nproto.TxOutputBinType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxOutputBinType();\n  return proto.TxOutputBinType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxOutputBinType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxOutputBinType}\n */\n\n\nproto.TxOutputBinType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint64();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setScriptPubkey(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setDecredScriptVersion(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxOutputBinType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxOutputBinType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxOutputBinType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxOutputBinType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint64(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * required uint64 amount = 1;\n * @return {number}\n */\n\n\nproto.TxOutputBinType.prototype.getAmount = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxOutputBinType} returns this\n */\n\n\nproto.TxOutputBinType.prototype.setAmount = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputBinType} returns this\n */\n\n\nproto.TxOutputBinType.prototype.clearAmount = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputBinType.prototype.hasAmount = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required bytes script_pubkey = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxOutputBinType.prototype.getScriptPubkey = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * required bytes script_pubkey = 2;\n * This is a type-conversion wrapper around `getScriptPubkey()`\n * @return {string}\n */\n\n\nproto.TxOutputBinType.prototype.getScriptPubkey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getScriptPubkey());\n};\n/**\n * required bytes script_pubkey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScriptPubkey()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxOutputBinType.prototype.getScriptPubkey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getScriptPubkey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxOutputBinType} returns this\n */\n\n\nproto.TxOutputBinType.prototype.setScriptPubkey = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputBinType} returns this\n */\n\n\nproto.TxOutputBinType.prototype.clearScriptPubkey = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputBinType.prototype.hasScriptPubkey = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint32 decred_script_version = 3;\n * @return {number}\n */\n\n\nproto.TxOutputBinType.prototype.getDecredScriptVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxOutputBinType} returns this\n */\n\n\nproto.TxOutputBinType.prototype.setDecredScriptVersion = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputBinType} returns this\n */\n\n\nproto.TxOutputBinType.prototype.clearDecredScriptVersion = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxOutputBinType.prototype.hasDecredScriptVersion = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.TransactionType.repeatedFields_ = [2, 3, 5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TransactionType.prototype.toObject = function (opt_includeInstance) {\n    return proto.TransactionType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TransactionType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TransactionType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      inputsList: jspb.Message.toObjectList(msg.getInputsList(), proto.TxInputType.toObject, includeInstance),\n      binOutputsList: jspb.Message.toObjectList(msg.getBinOutputsList(), proto.TxOutputBinType.toObject, includeInstance),\n      outputsList: jspb.Message.toObjectList(msg.getOutputsList(), proto.TxOutputType.toObject, includeInstance),\n      lockTime: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      inputsCnt: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      outputsCnt: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n      extraData: msg.getExtraData_asB64(),\n      extraDataLen: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      expiry: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n      overwintered: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,\n      versionGroupId: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n      branchId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TransactionType}\n */\n\n\nproto.TransactionType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TransactionType();\n  return proto.TransactionType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TransactionType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TransactionType}\n */\n\n\nproto.TransactionType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value = new proto.TxInputType();\n        reader.readMessage(value, proto.TxInputType.deserializeBinaryFromReader);\n        msg.addInputs(value);\n        break;\n\n      case 3:\n        var value = new proto.TxOutputBinType();\n        reader.readMessage(value, proto.TxOutputBinType.deserializeBinaryFromReader);\n        msg.addBinOutputs(value);\n        break;\n\n      case 5:\n        var value = new proto.TxOutputType();\n        reader.readMessage(value, proto.TxOutputType.deserializeBinaryFromReader);\n        msg.addOutputs(value);\n        break;\n\n      case 4:\n        var value = reader.readUint32();\n        msg.setLockTime(value);\n        break;\n\n      case 6:\n        var value = reader.readUint32();\n        msg.setInputsCnt(value);\n        break;\n\n      case 7:\n        var value = reader.readUint32();\n        msg.setOutputsCnt(value);\n        break;\n\n      case 8:\n        var value = reader.readBytes();\n        msg.setExtraData(value);\n        break;\n\n      case 9:\n        var value = reader.readUint32();\n        msg.setExtraDataLen(value);\n        break;\n\n      case 10:\n        var value = reader.readUint32();\n        msg.setExpiry(value);\n        break;\n\n      case 11:\n        var value = reader.readBool();\n        msg.setOverwintered(value);\n        break;\n\n      case 12:\n        var value = reader.readUint32();\n        msg.setVersionGroupId(value);\n        break;\n\n      case 13:\n        var value = reader.readUint32();\n        msg.setBranchId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TransactionType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TransactionType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TransactionType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TransactionType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getInputsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.TxInputType.serializeBinaryToWriter);\n  }\n\n  f = message.getBinOutputsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.TxOutputBinType.serializeBinaryToWriter);\n  }\n\n  f = message.getOutputsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(5, f, proto.TxOutputType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeUint32(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeUint32(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeBytes(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeUint32(9, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeUint32(10, f);\n  }\n\n  f = jspb.Message.getField(message, 11);\n\n  if (f != null) {\n    writer.writeBool(11, f);\n  }\n\n  f = jspb.Message.getField(message, 12);\n\n  if (f != null) {\n    writer.writeUint32(12, f);\n  }\n\n  f = jspb.Message.getField(message, 13);\n\n  if (f != null) {\n    writer.writeUint32(13, f);\n  }\n};\n/**\n * optional uint32 version = 1;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setVersion = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearVersion = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasVersion = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated TxInputType inputs = 2;\n * @return {!Array<!proto.TxInputType>}\n */\n\n\nproto.TransactionType.prototype.getInputsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.TxInputType, 2);\n};\n/**\n * @param {!Array<!proto.TxInputType>} value\n * @return {!proto.TransactionType} returns this\n*/\n\n\nproto.TransactionType.prototype.setInputsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.TxInputType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TxInputType}\n */\n\n\nproto.TransactionType.prototype.addInputs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.TxInputType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearInputsList = function () {\n  return this.setInputsList([]);\n};\n/**\n * repeated TxOutputBinType bin_outputs = 3;\n * @return {!Array<!proto.TxOutputBinType>}\n */\n\n\nproto.TransactionType.prototype.getBinOutputsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.TxOutputBinType, 3);\n};\n/**\n * @param {!Array<!proto.TxOutputBinType>} value\n * @return {!proto.TransactionType} returns this\n*/\n\n\nproto.TransactionType.prototype.setBinOutputsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.TxOutputBinType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TxOutputBinType}\n */\n\n\nproto.TransactionType.prototype.addBinOutputs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TxOutputBinType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearBinOutputsList = function () {\n  return this.setBinOutputsList([]);\n};\n/**\n * repeated TxOutputType outputs = 5;\n * @return {!Array<!proto.TxOutputType>}\n */\n\n\nproto.TransactionType.prototype.getOutputsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.TxOutputType, 5);\n};\n/**\n * @param {!Array<!proto.TxOutputType>} value\n * @return {!proto.TransactionType} returns this\n*/\n\n\nproto.TransactionType.prototype.setOutputsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n/**\n * @param {!proto.TxOutputType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TxOutputType}\n */\n\n\nproto.TransactionType.prototype.addOutputs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.TxOutputType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearOutputsList = function () {\n  return this.setOutputsList([]);\n};\n/**\n * optional uint32 lock_time = 4;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getLockTime = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setLockTime = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearLockTime = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasLockTime = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 inputs_cnt = 6;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getInputsCnt = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setInputsCnt = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearInputsCnt = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasInputsCnt = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional uint32 outputs_cnt = 7;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getOutputsCnt = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setOutputsCnt = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearOutputsCnt = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasOutputsCnt = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional bytes extra_data = 8;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TransactionType.prototype.getExtraData = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, \"\");\n};\n/**\n * optional bytes extra_data = 8;\n * This is a type-conversion wrapper around `getExtraData()`\n * @return {string}\n */\n\n\nproto.TransactionType.prototype.getExtraData_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getExtraData());\n};\n/**\n * optional bytes extra_data = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExtraData()`\n * @return {!Uint8Array}\n */\n\n\nproto.TransactionType.prototype.getExtraData_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getExtraData());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setExtraData = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearExtraData = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasExtraData = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 extra_data_len = 9;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getExtraDataLen = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setExtraDataLen = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearExtraDataLen = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasExtraDataLen = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint32 expiry = 10;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getExpiry = function () {\n  return jspb.Message.getFieldWithDefault(this, 10, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setExpiry = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearExpiry = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasExpiry = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n/**\n * optional bool overwintered = 11;\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.getOverwintered = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 11, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setOverwintered = function (value) {\n  return jspb.Message.setField(this, 11, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearOverwintered = function () {\n  return jspb.Message.setField(this, 11, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasOverwintered = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * optional uint32 version_group_id = 12;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getVersionGroupId = function () {\n  return jspb.Message.getFieldWithDefault(this, 12, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setVersionGroupId = function (value) {\n  return jspb.Message.setField(this, 12, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearVersionGroupId = function () {\n  return jspb.Message.setField(this, 12, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasVersionGroupId = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * optional uint32 branch_id = 13;\n * @return {number}\n */\n\n\nproto.TransactionType.prototype.getBranchId = function () {\n  return jspb.Message.getFieldWithDefault(this, 13, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.setBranchId = function (value) {\n  return jspb.Message.setField(this, 13, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\n\n\nproto.TransactionType.prototype.clearBranchId = function () {\n  return jspb.Message.setField(this, 13, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TransactionType.prototype.hasBranchId = function () {\n  return jspb.Message.getField(this, 13) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RawTransactionType.prototype.toObject = function (opt_includeInstance) {\n    return proto.RawTransactionType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RawTransactionType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.RawTransactionType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RawTransactionType}\n */\n\n\nproto.RawTransactionType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RawTransactionType();\n  return proto.RawTransactionType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RawTransactionType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RawTransactionType}\n */\n\n\nproto.RawTransactionType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RawTransactionType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RawTransactionType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RawTransactionType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.RawTransactionType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * required bytes payload = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.RawTransactionType.prototype.getPayload = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * required bytes payload = 1;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.RawTransactionType.prototype.getPayload_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPayload());\n};\n/**\n * required bytes payload = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.RawTransactionType.prototype.getPayload_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPayload());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.RawTransactionType} returns this\n */\n\n\nproto.RawTransactionType.prototype.setPayload = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RawTransactionType} returns this\n */\n\n\nproto.RawTransactionType.prototype.clearPayload = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RawTransactionType.prototype.hasPayload = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxRequestDetailsType.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxRequestDetailsType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxRequestDetailsType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxRequestDetailsType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      requestIndex: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      txHash: msg.getTxHash_asB64(),\n      extraDataLen: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      extraDataOffset: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxRequestDetailsType}\n */\n\n\nproto.TxRequestDetailsType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxRequestDetailsType();\n  return proto.TxRequestDetailsType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxRequestDetailsType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxRequestDetailsType}\n */\n\n\nproto.TxRequestDetailsType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setRequestIndex(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setTxHash(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setExtraDataLen(value);\n        break;\n\n      case 4:\n        var value = reader.readUint32();\n        msg.setExtraDataOffset(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxRequestDetailsType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxRequestDetailsType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxRequestDetailsType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxRequestDetailsType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint32(4, f);\n  }\n};\n/**\n * optional uint32 request_index = 1;\n * @return {number}\n */\n\n\nproto.TxRequestDetailsType.prototype.getRequestIndex = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.setRequestIndex = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.clearRequestIndex = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestDetailsType.prototype.hasRequestIndex = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes tx_hash = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxRequestDetailsType.prototype.getTxHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes tx_hash = 2;\n * This is a type-conversion wrapper around `getTxHash()`\n * @return {string}\n */\n\n\nproto.TxRequestDetailsType.prototype.getTxHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getTxHash());\n};\n/**\n * optional bytes tx_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxRequestDetailsType.prototype.getTxHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getTxHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.setTxHash = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.clearTxHash = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestDetailsType.prototype.hasTxHash = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint32 extra_data_len = 3;\n * @return {number}\n */\n\n\nproto.TxRequestDetailsType.prototype.getExtraDataLen = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.setExtraDataLen = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.clearExtraDataLen = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestDetailsType.prototype.hasExtraDataLen = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional uint32 extra_data_offset = 4;\n * @return {number}\n */\n\n\nproto.TxRequestDetailsType.prototype.getExtraDataOffset = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.setExtraDataOffset = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\n\n\nproto.TxRequestDetailsType.prototype.clearExtraDataOffset = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestDetailsType.prototype.hasExtraDataOffset = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxRequestSerializedType.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxRequestSerializedType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxRequestSerializedType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxRequestSerializedType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      signatureIndex: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      signature: msg.getSignature_asB64(),\n      serializedTx: msg.getSerializedTx_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxRequestSerializedType}\n */\n\n\nproto.TxRequestSerializedType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxRequestSerializedType();\n  return proto.TxRequestSerializedType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxRequestSerializedType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxRequestSerializedType}\n */\n\n\nproto.TxRequestSerializedType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setSignatureIndex(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setSerializedTx(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxRequestSerializedType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxRequestSerializedType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxRequestSerializedType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxRequestSerializedType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint32 signature_index = 1;\n * @return {number}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSignatureIndex = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.TxRequestSerializedType} returns this\n */\n\n\nproto.TxRequestSerializedType.prototype.setSignatureIndex = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestSerializedType} returns this\n */\n\n\nproto.TxRequestSerializedType.prototype.clearSignatureIndex = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestSerializedType.prototype.hasSignatureIndex = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxRequestSerializedType} returns this\n */\n\n\nproto.TxRequestSerializedType.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestSerializedType} returns this\n */\n\n\nproto.TxRequestSerializedType.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestSerializedType.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes serialized_tx = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSerializedTx = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes serialized_tx = 3;\n * This is a type-conversion wrapper around `getSerializedTx()`\n * @return {string}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSerializedTx_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSerializedTx());\n};\n/**\n * optional bytes serialized_tx = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSerializedTx()`\n * @return {!Uint8Array}\n */\n\n\nproto.TxRequestSerializedType.prototype.getSerializedTx_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSerializedTx());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxRequestSerializedType} returns this\n */\n\n\nproto.TxRequestSerializedType.prototype.setSerializedTx = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestSerializedType} returns this\n */\n\n\nproto.TxRequestSerializedType.prototype.clearSerializedTx = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequestSerializedType.prototype.hasSerializedTx = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.IdentityType.prototype.toObject = function (opt_includeInstance) {\n    return proto.IdentityType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.IdentityType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.IdentityType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      proto: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      user: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      host: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      port: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      path: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n      index: jspb.Message.getFieldWithDefault(msg, 6, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.IdentityType}\n */\n\n\nproto.IdentityType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.IdentityType();\n  return proto.IdentityType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.IdentityType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.IdentityType}\n */\n\n\nproto.IdentityType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setProto(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setUser(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setHost(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setPort(value);\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setPath(value);\n        break;\n\n      case 6:\n        var value = reader.readUint32();\n        msg.setIndex(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.IdentityType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.IdentityType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.IdentityType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.IdentityType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeUint32(6, f);\n  }\n};\n/**\n * optional string proto = 1;\n * @return {string}\n */\n\n\nproto.IdentityType.prototype.getProto = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.setProto = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.clearProto = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.IdentityType.prototype.hasProto = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string user = 2;\n * @return {string}\n */\n\n\nproto.IdentityType.prototype.getUser = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.setUser = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.clearUser = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.IdentityType.prototype.hasUser = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string host = 3;\n * @return {string}\n */\n\n\nproto.IdentityType.prototype.getHost = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.setHost = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.clearHost = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.IdentityType.prototype.hasHost = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string port = 4;\n * @return {string}\n */\n\n\nproto.IdentityType.prototype.getPort = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.setPort = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.clearPort = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.IdentityType.prototype.hasPort = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string path = 5;\n * @return {string}\n */\n\n\nproto.IdentityType.prototype.getPath = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.setPath = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.clearPath = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.IdentityType.prototype.hasPath = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional uint32 index = 6;\n * @return {number}\n */\n\n\nproto.IdentityType.prototype.getIndex = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.setIndex = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\n\n\nproto.IdentityType.prototype.clearIndex = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.IdentityType.prototype.hasIndex = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.PolicyType.prototype.toObject = function (opt_includeInstance) {\n    return proto.PolicyType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.PolicyType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.PolicyType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      policyName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      enabled: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PolicyType}\n */\n\n\nproto.PolicyType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PolicyType();\n  return proto.PolicyType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PolicyType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PolicyType}\n */\n\n\nproto.PolicyType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setPolicyName(value);\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.PolicyType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.PolicyType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PolicyType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.PolicyType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * optional string policy_name = 1;\n * @return {string}\n */\n\n\nproto.PolicyType.prototype.getPolicyName = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.PolicyType} returns this\n */\n\n\nproto.PolicyType.prototype.setPolicyName = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PolicyType} returns this\n */\n\n\nproto.PolicyType.prototype.clearPolicyName = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PolicyType.prototype.hasPolicyName = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bool enabled = 2;\n * @return {boolean}\n */\n\n\nproto.PolicyType.prototype.getEnabled = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.PolicyType} returns this\n */\n\n\nproto.PolicyType.prototype.setEnabled = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PolicyType} returns this\n */\n\n\nproto.PolicyType.prototype.clearEnabled = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PolicyType.prototype.hasEnabled = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ExchangeType.repeatedFields_ = [3, 4];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ExchangeType.prototype.toObject = function (opt_includeInstance) {\n    return proto.ExchangeType.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ExchangeType} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ExchangeType.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      signedExchangeResponse: (f = msg.getSignedExchangeResponse()) && exchange_pb.SignedExchangeResponse.toObject(includeInstance, f),\n      withdrawalCoinName: jspb.Message.getFieldWithDefault(msg, 2, \"Bitcoin\"),\n      withdrawalAddressNList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,\n      returnAddressNList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n      withdrawalScriptType: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      returnScriptType: jspb.Message.getFieldWithDefault(msg, 6, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ExchangeType}\n */\n\n\nproto.ExchangeType.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ExchangeType();\n  return proto.ExchangeType.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ExchangeType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ExchangeType}\n */\n\n\nproto.ExchangeType.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new exchange_pb.SignedExchangeResponse();\n        reader.readMessage(value, exchange_pb.SignedExchangeResponse.deserializeBinaryFromReader);\n        msg.setSignedExchangeResponse(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setWithdrawalCoinName(value);\n        break;\n\n      case 3:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addWithdrawalAddressN(values[i]);\n        }\n\n        break;\n\n      case 4:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addReturnAddressN(values[i]);\n        }\n\n        break;\n\n      case 5:\n        var value = reader.readEnum();\n        msg.setWithdrawalScriptType(value);\n        break;\n\n      case 6:\n        var value = reader.readEnum();\n        msg.setReturnScriptType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ExchangeType.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ExchangeType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ExchangeType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ExchangeType.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSignedExchangeResponse();\n\n  if (f != null) {\n    writer.writeMessage(1, f, exchange_pb.SignedExchangeResponse.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getWithdrawalAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(3, f);\n  }\n\n  f = message.getReturnAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeEnum(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeEnum(6, f);\n  }\n};\n/**\n * optional SignedExchangeResponse signed_exchange_response = 1;\n * @return {?proto.SignedExchangeResponse}\n */\n\n\nproto.ExchangeType.prototype.getSignedExchangeResponse = function () {\n  return jspb.Message.getWrapperField(this, exchange_pb.SignedExchangeResponse, 1);\n};\n/**\n * @param {?proto.SignedExchangeResponse|undefined} value\n * @return {!proto.ExchangeType} returns this\n*/\n\n\nproto.ExchangeType.prototype.setSignedExchangeResponse = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.clearSignedExchangeResponse = function () {\n  return this.setSignedExchangeResponse(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ExchangeType.prototype.hasSignedExchangeResponse = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string withdrawal_coin_name = 2;\n * @return {string}\n */\n\n\nproto.ExchangeType.prototype.getWithdrawalCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.setWithdrawalCoinName = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.clearWithdrawalCoinName = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ExchangeType.prototype.hasWithdrawalCoinName = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * repeated uint32 withdrawal_address_n = 3;\n * @return {!Array<number>}\n */\n\n\nproto.ExchangeType.prototype.getWithdrawalAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 3);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.setWithdrawalAddressNList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.addWithdrawalAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.clearWithdrawalAddressNList = function () {\n  return this.setWithdrawalAddressNList([]);\n};\n/**\n * repeated uint32 return_address_n = 4;\n * @return {!Array<number>}\n */\n\n\nproto.ExchangeType.prototype.getReturnAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 4);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.setReturnAddressNList = function (value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.addReturnAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.clearReturnAddressNList = function () {\n  return this.setReturnAddressNList([]);\n};\n/**\n * optional InputScriptType withdrawal_script_type = 5;\n * @return {!proto.InputScriptType}\n */\n\n\nproto.ExchangeType.prototype.getWithdrawalScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 0);\n};\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.setWithdrawalScriptType = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.clearWithdrawalScriptType = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ExchangeType.prototype.hasWithdrawalScriptType = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional InputScriptType return_script_type = 6;\n * @return {!proto.InputScriptType}\n */\n\n\nproto.ExchangeType.prototype.getReturnScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, 0);\n};\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.setReturnScriptType = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\n\n\nproto.ExchangeType.prototype.clearReturnScriptType = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ExchangeType.prototype.hasReturnScriptType = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * @enum {number}\n */\n\n\nproto.FailureType = {\n  FAILURE_UNEXPECTEDMESSAGE: 1,\n  FAILURE_BUTTONEXPECTED: 2,\n  FAILURE_SYNTAXERROR: 3,\n  FAILURE_ACTIONCANCELLED: 4,\n  FAILURE_PINEXPECTED: 5,\n  FAILURE_PINCANCELLED: 6,\n  FAILURE_PININVALID: 7,\n  FAILURE_INVALIDSIGNATURE: 8,\n  FAILURE_OTHER: 9,\n  FAILURE_NOTENOUGHFUNDS: 10,\n  FAILURE_NOTINITIALIZED: 11,\n  FAILURE_PINMISMATCH: 12,\n  FAILURE_FIRMWAREERROR: 99\n};\n/**\n * @enum {number}\n */\n\nproto.OutputScriptType = {\n  PAYTOADDRESS: 0,\n  PAYTOSCRIPTHASH: 1,\n  PAYTOMULTISIG: 2,\n  PAYTOOPRETURN: 3,\n  PAYTOWITNESS: 4,\n  PAYTOP2SHWITNESS: 5\n};\n/**\n * @enum {number}\n */\n\nproto.InputScriptType = {\n  SPENDADDRESS: 0,\n  SPENDMULTISIG: 1,\n  EXTERNAL: 2,\n  SPENDWITNESS: 3,\n  SPENDP2SHWITNESS: 4\n};\n/**\n * @enum {number}\n */\n\nproto.RequestType = {\n  TXINPUT: 0,\n  TXOUTPUT: 1,\n  TXMETA: 2,\n  TXFINISHED: 3,\n  TXEXTRADATA: 4\n};\n/**\n * @enum {number}\n */\n\nproto.OutputAddressType = {\n  SPEND: 0,\n  TRANSFER: 1,\n  CHANGE: 2,\n  EXCHANGE: 3\n};\n/**\n * @enum {number}\n */\n\nproto.ButtonRequestType = {\n  BUTTONREQUEST_OTHER: 1,\n  BUTTONREQUEST_FEEOVERTHRESHOLD: 2,\n  BUTTONREQUEST_CONFIRMOUTPUT: 3,\n  BUTTONREQUEST_RESETDEVICE: 4,\n  BUTTONREQUEST_CONFIRMWORD: 5,\n  BUTTONREQUEST_WIPEDEVICE: 6,\n  BUTTONREQUEST_PROTECTCALL: 7,\n  BUTTONREQUEST_SIGNTX: 8,\n  BUTTONREQUEST_FIRMWARECHECK: 9,\n  BUTTONREQUEST_ADDRESS: 10,\n  BUTTONREQUEST_FIRMWAREERASE: 11,\n  BUTTONREQUEST_CONFIRMTRANSFERTOACCOUNT: 12,\n  BUTTONREQUEST_CONFIRMTRANSFERTONODEPATH: 13,\n  BUTTONREQUEST_CHANGELABEL: 14,\n  BUTTONREQUEST_CHANGELANGUAGE: 15,\n  BUTTONREQUEST_ENABLEPASSPHRASE: 16,\n  BUTTONREQUEST_DISABLEPASSPHRASE: 17,\n  BUTTONREQUEST_ENCRYPTANDSIGNMESSAGE: 18,\n  BUTTONREQUEST_ENCRYPTMESSAGE: 19,\n  BUTTONREQUEST_IMPORTPRIVATEKEY: 20,\n  BUTTONREQUEST_IMPORTRECOVERYSENTENCE: 21,\n  BUTTONREQUEST_SIGNIDENTITY: 22,\n  BUTTONREQUEST_PING: 23,\n  BUTTONREQUEST_REMOVEPIN: 24,\n  BUTTONREQUEST_CHANGEPIN: 25,\n  BUTTONREQUEST_CREATEPIN: 26,\n  BUTTONREQUEST_GETENTROPY: 27,\n  BUTTONREQUEST_SIGNMESSAGE: 28,\n  BUTTONREQUEST_APPLYPOLICIES: 29,\n  BUTTONREQUEST_SIGNEXCHANGE: 30,\n  BUTTONREQUEST_AUTOLOCKDELAYMS: 31,\n  BUTTONREQUEST_U2FCOUNTER: 32,\n  BUTTONREQUEST_CONFIRMEOSACTION: 33,\n  BUTTONREQUEST_CONFIRMEOSBUDGET: 34,\n  BUTTONREQUEST_CONFIRMMEMO: 35,\n  BUTTONREQUEST_REMOVEWIPECODE: 36,\n  BUTTONREQUEST_CHANGEWIPECODE: 37,\n  BUTTONREQUEST_CREATEWIPECODE: 38\n};\n/**\n * @enum {number}\n */\n\nproto.PinMatrixRequestType = {\n  PINMATRIXREQUESTTYPE_CURRENT: 1,\n  PINMATRIXREQUESTTYPE_NEWFIRST: 2,\n  PINMATRIXREQUESTTYPE_NEWSECOND: 3\n};\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireIn`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\n\nproto.wireIn = new jspb.ExtensionFieldInfo(50002, {\n  wireIn: 0\n}, null, null, 0);\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50002] = new jspb.ExtensionFieldBinaryInfo(proto.wireIn, jspb.BinaryReader.prototype.readBool, jspb.BinaryWriter.prototype.writeBool, undefined, undefined, false); // This registers the extension field with the extended class, so that\n// toObject() will function correctly.\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50002] = proto.wireIn;\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireOut`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\n\nproto.wireOut = new jspb.ExtensionFieldInfo(50003, {\n  wireOut: 0\n}, null, null, 0);\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50003] = new jspb.ExtensionFieldBinaryInfo(proto.wireOut, jspb.BinaryReader.prototype.readBool, jspb.BinaryWriter.prototype.writeBool, undefined, undefined, false); // This registers the extension field with the extended class, so that\n// toObject() will function correctly.\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50003] = proto.wireOut;\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireDebugIn`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\n\nproto.wireDebugIn = new jspb.ExtensionFieldInfo(50004, {\n  wireDebugIn: 0\n}, null, null, 0);\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50004] = new jspb.ExtensionFieldBinaryInfo(proto.wireDebugIn, jspb.BinaryReader.prototype.readBool, jspb.BinaryWriter.prototype.writeBool, undefined, undefined, false); // This registers the extension field with the extended class, so that\n// toObject() will function correctly.\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50004] = proto.wireDebugIn;\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireDebugOut`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\n\nproto.wireDebugOut = new jspb.ExtensionFieldInfo(50005, {\n  wireDebugOut: 0\n}, null, null, 0);\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50005] = new jspb.ExtensionFieldBinaryInfo(proto.wireDebugOut, jspb.BinaryReader.prototype.readBool, jspb.BinaryWriter.prototype.writeBool, undefined, undefined, false); // This registers the extension field with the extended class, so that\n// toObject() will function correctly.\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50005] = proto.wireDebugOut;\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/@keepkey/device-protocol/lib/types_pb.js"],"names":["jspb","require","goog","global","call","google_protobuf_descriptor_pb","object","extend","proto","exchange_pb","exportSymbol","HDNodeType","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","HDNodePathType","repeatedFields_","CoinType","MultisigRedeemScriptType","TxInputType","TxOutputType","TxOutputBinType","TransactionType","RawTransactionType","TxRequestDetailsType","TxRequestSerializedType","IdentityType","PolicyType","ExchangeType","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","depth","getField","undefined","fingerprint","childNum","chainCode","getChainCode_asB64","privateKey","getPrivateKey_asB64","publicKey","getPublicKey_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readUint32","setDepth","setFingerprint","setChildNum","readBytes","setChainCode","setPrivateKey","setPublicKey","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","writeUint32","writeBytes","getDepth","getFieldWithDefault","setField","clearDepth","hasDepth","getFingerprint","clearFingerprint","hasFingerprint","getChildNum","clearChildNum","hasChildNum","getChainCode","bytesAsB64","getChainCode_asU8","bytesAsU8","clearChainCode","hasChainCode","getPrivateKey","getPrivateKey_asU8","clearPrivateKey","hasPrivateKey","getPublicKey","getPublicKey_asU8","clearPublicKey","hasPublicKey","node","getNode","addressNList","getRepeatedField","readMessage","setNode","values","isDelimited","readPackedUint32","i","length","addAddressN","writeMessage","getAddressNList","writeRepeatedUint32","getWrapperField","setWrapperField","clearNode","hasNode","setAddressNList","opt_index","addToRepeatedField","clearAddressNList","coinName","coinShortcut","addressType","maxfeeKb","addressTypeP2sh","signedMessageHeader","bip44AccountPath","forkid","decimals","contractAddress","getContractAddress_asB64","xpubMagic","segwit","getBooleanField","forceBip143","curveName","cashaddrPrefix","bech32Prefix","decred","xpubMagicSegwitP2sh","xpubMagicSegwitNative","nanoaddrPrefix","readString","setCoinName","setCoinShortcut","setAddressType","readUint64","setMaxfeeKb","setAddressTypeP2sh","setSignedMessageHeader","setBip44AccountPath","setForkid","setDecimals","setContractAddress","setXpubMagic","readBool","setSegwit","setForceBip143","setCurveName","setCashaddrPrefix","setBech32Prefix","setDecred","setXpubMagicSegwitP2sh","setXpubMagicSegwitNative","setNanoaddrPrefix","writeString","writeUint64","writeBool","getCoinName","clearCoinName","hasCoinName","getCoinShortcut","clearCoinShortcut","hasCoinShortcut","getAddressType","clearAddressType","hasAddressType","getMaxfeeKb","clearMaxfeeKb","hasMaxfeeKb","getAddressTypeP2sh","clearAddressTypeP2sh","hasAddressTypeP2sh","getSignedMessageHeader","clearSignedMessageHeader","hasSignedMessageHeader","getBip44AccountPath","clearBip44AccountPath","hasBip44AccountPath","getForkid","clearForkid","hasForkid","getDecimals","clearDecimals","hasDecimals","getContractAddress","getContractAddress_asU8","clearContractAddress","hasContractAddress","getXpubMagic","clearXpubMagic","hasXpubMagic","getSegwit","getBooleanFieldWithDefault","clearSegwit","hasSegwit","getForceBip143","clearForceBip143","hasForceBip143","getCurveName","clearCurveName","hasCurveName","getCashaddrPrefix","clearCashaddrPrefix","hasCashaddrPrefix","getBech32Prefix","clearBech32Prefix","hasBech32Prefix","getDecred","clearDecred","hasDecred","getXpubMagicSegwitP2sh","clearXpubMagicSegwitP2sh","hasXpubMagicSegwitP2sh","getXpubMagicSegwitNative","clearXpubMagicSegwitNative","hasXpubMagicSegwitNative","getNanoaddrPrefix","clearNanoaddrPrefix","hasNanoaddrPrefix","pubkeysList","toObjectList","getPubkeysList","signaturesList","getSignaturesList_asB64","m","addPubkeys","addSignatures","setM","writeRepeatedMessage","getSignaturesList_asU8","writeRepeatedBytes","getRepeatedWrapperField","setPubkeysList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearPubkeysList","getSignaturesList","bytesListAsB64","bytesListAsU8","setSignaturesList","clearSignaturesList","getM","clearM","hasM","prevHash","getPrevHash_asB64","prevIndex","scriptSig","getScriptSig_asB64","sequence","scriptType","multisig","getMultisig","amount","decredTree","decredScriptVersion","setPrevHash","setPrevIndex","setScriptSig","setSequence","readEnum","setScriptType","setMultisig","setAmount","setDecredTree","setDecredScriptVersion","writeEnum","getPrevHash","getPrevHash_asU8","clearPrevHash","hasPrevHash","getPrevIndex","clearPrevIndex","hasPrevIndex","getScriptSig","getScriptSig_asU8","clearScriptSig","hasScriptSig","getSequence","clearSequence","hasSequence","getScriptType","clearScriptType","hasScriptType","clearMultisig","hasMultisig","getAmount","clearAmount","hasAmount","getDecredTree","clearDecredTree","hasDecredTree","getDecredScriptVersion","clearDecredScriptVersion","hasDecredScriptVersion","address","opReturnData","getOpReturnData_asB64","exchangeType","getExchangeType","setAddress","setOpReturnData","setExchangeType","getAddress","clearAddress","hasAddress","getOpReturnData","getOpReturnData_asU8","clearOpReturnData","hasOpReturnData","clearExchangeType","hasExchangeType","scriptPubkey","getScriptPubkey_asB64","setScriptPubkey","getScriptPubkey","getScriptPubkey_asU8","clearScriptPubkey","hasScriptPubkey","version","inputsList","getInputsList","binOutputsList","getBinOutputsList","outputsList","getOutputsList","lockTime","inputsCnt","outputsCnt","extraData","getExtraData_asB64","extraDataLen","expiry","overwintered","versionGroupId","branchId","setVersion","addInputs","addBinOutputs","addOutputs","setLockTime","setInputsCnt","setOutputsCnt","setExtraData","setExtraDataLen","setExpiry","setOverwintered","setVersionGroupId","setBranchId","getVersion","clearVersion","hasVersion","setInputsList","clearInputsList","setBinOutputsList","clearBinOutputsList","setOutputsList","clearOutputsList","getLockTime","clearLockTime","hasLockTime","getInputsCnt","clearInputsCnt","hasInputsCnt","getOutputsCnt","clearOutputsCnt","hasOutputsCnt","getExtraData","getExtraData_asU8","clearExtraData","hasExtraData","getExtraDataLen","clearExtraDataLen","hasExtraDataLen","getExpiry","clearExpiry","hasExpiry","getOverwintered","clearOverwintered","hasOverwintered","getVersionGroupId","clearVersionGroupId","hasVersionGroupId","getBranchId","clearBranchId","hasBranchId","payload","getPayload_asB64","setPayload","getPayload","getPayload_asU8","clearPayload","hasPayload","requestIndex","txHash","getTxHash_asB64","extraDataOffset","setRequestIndex","setTxHash","setExtraDataOffset","getRequestIndex","clearRequestIndex","hasRequestIndex","getTxHash","getTxHash_asU8","clearTxHash","hasTxHash","getExtraDataOffset","clearExtraDataOffset","hasExtraDataOffset","signatureIndex","signature","getSignature_asB64","serializedTx","getSerializedTx_asB64","setSignatureIndex","setSignature","setSerializedTx","getSignatureIndex","clearSignatureIndex","hasSignatureIndex","getSignature","getSignature_asU8","clearSignature","hasSignature","getSerializedTx","getSerializedTx_asU8","clearSerializedTx","hasSerializedTx","user","host","port","path","index","setProto","setUser","setHost","setPort","setPath","setIndex","getProto","clearProto","hasProto","getUser","clearUser","hasUser","getHost","clearHost","hasHost","getPort","clearPort","hasPort","getPath","clearPath","hasPath","getIndex","clearIndex","hasIndex","policyName","enabled","setPolicyName","setEnabled","getPolicyName","clearPolicyName","hasPolicyName","getEnabled","clearEnabled","hasEnabled","signedExchangeResponse","getSignedExchangeResponse","SignedExchangeResponse","withdrawalCoinName","withdrawalAddressNList","returnAddressNList","withdrawalScriptType","returnScriptType","setSignedExchangeResponse","setWithdrawalCoinName","addWithdrawalAddressN","addReturnAddressN","setWithdrawalScriptType","setReturnScriptType","getWithdrawalAddressNList","getReturnAddressNList","clearSignedExchangeResponse","hasSignedExchangeResponse","getWithdrawalCoinName","clearWithdrawalCoinName","hasWithdrawalCoinName","setWithdrawalAddressNList","clearWithdrawalAddressNList","setReturnAddressNList","clearReturnAddressNList","getWithdrawalScriptType","clearWithdrawalScriptType","hasWithdrawalScriptType","getReturnScriptType","clearReturnScriptType","hasReturnScriptType","FailureType","FAILURE_UNEXPECTEDMESSAGE","FAILURE_BUTTONEXPECTED","FAILURE_SYNTAXERROR","FAILURE_ACTIONCANCELLED","FAILURE_PINEXPECTED","FAILURE_PINCANCELLED","FAILURE_PININVALID","FAILURE_INVALIDSIGNATURE","FAILURE_OTHER","FAILURE_NOTENOUGHFUNDS","FAILURE_NOTINITIALIZED","FAILURE_PINMISMATCH","FAILURE_FIRMWAREERROR","OutputScriptType","PAYTOADDRESS","PAYTOSCRIPTHASH","PAYTOMULTISIG","PAYTOOPRETURN","PAYTOWITNESS","PAYTOP2SHWITNESS","InputScriptType","SPENDADDRESS","SPENDMULTISIG","EXTERNAL","SPENDWITNESS","SPENDP2SHWITNESS","RequestType","TXINPUT","TXOUTPUT","TXMETA","TXFINISHED","TXEXTRADATA","OutputAddressType","SPEND","TRANSFER","CHANGE","EXCHANGE","ButtonRequestType","BUTTONREQUEST_OTHER","BUTTONREQUEST_FEEOVERTHRESHOLD","BUTTONREQUEST_CONFIRMOUTPUT","BUTTONREQUEST_RESETDEVICE","BUTTONREQUEST_CONFIRMWORD","BUTTONREQUEST_WIPEDEVICE","BUTTONREQUEST_PROTECTCALL","BUTTONREQUEST_SIGNTX","BUTTONREQUEST_FIRMWARECHECK","BUTTONREQUEST_ADDRESS","BUTTONREQUEST_FIRMWAREERASE","BUTTONREQUEST_CONFIRMTRANSFERTOACCOUNT","BUTTONREQUEST_CONFIRMTRANSFERTONODEPATH","BUTTONREQUEST_CHANGELABEL","BUTTONREQUEST_CHANGELANGUAGE","BUTTONREQUEST_ENABLEPASSPHRASE","BUTTONREQUEST_DISABLEPASSPHRASE","BUTTONREQUEST_ENCRYPTANDSIGNMESSAGE","BUTTONREQUEST_ENCRYPTMESSAGE","BUTTONREQUEST_IMPORTPRIVATEKEY","BUTTONREQUEST_IMPORTRECOVERYSENTENCE","BUTTONREQUEST_SIGNIDENTITY","BUTTONREQUEST_PING","BUTTONREQUEST_REMOVEPIN","BUTTONREQUEST_CHANGEPIN","BUTTONREQUEST_CREATEPIN","BUTTONREQUEST_GETENTROPY","BUTTONREQUEST_SIGNMESSAGE","BUTTONREQUEST_APPLYPOLICIES","BUTTONREQUEST_SIGNEXCHANGE","BUTTONREQUEST_AUTOLOCKDELAYMS","BUTTONREQUEST_U2FCOUNTER","BUTTONREQUEST_CONFIRMEOSACTION","BUTTONREQUEST_CONFIRMEOSBUDGET","BUTTONREQUEST_CONFIRMMEMO","BUTTONREQUEST_REMOVEWIPECODE","BUTTONREQUEST_CHANGEWIPECODE","BUTTONREQUEST_CREATEWIPECODE","PinMatrixRequestType","PINMATRIXREQUESTTYPE_CURRENT","PINMATRIXREQUESTTYPE_NEWFIRST","PINMATRIXREQUESTTYPE_NEWSECOND","wireIn","ExtensionFieldInfo","EnumValueOptions","extensionsBinary","ExtensionFieldBinaryInfo","extensions","wireOut","wireDebugIn","wireDebugOut","exports"],"mappings":"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","sourcesContent":["// source: types.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function(){ return this }).call(null);\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\ngoog.object.extend(proto, google_protobuf_descriptor_pb);\nvar exchange_pb = require('./exchange_pb.js');\ngoog.object.extend(proto, exchange_pb);\ngoog.exportSymbol('proto.ButtonRequestType', null, global);\ngoog.exportSymbol('proto.CoinType', null, global);\ngoog.exportSymbol('proto.ExchangeType', null, global);\ngoog.exportSymbol('proto.FailureType', null, global);\ngoog.exportSymbol('proto.HDNodePathType', null, global);\ngoog.exportSymbol('proto.HDNodeType', null, global);\ngoog.exportSymbol('proto.IdentityType', null, global);\ngoog.exportSymbol('proto.InputScriptType', null, global);\ngoog.exportSymbol('proto.MultisigRedeemScriptType', null, global);\ngoog.exportSymbol('proto.OutputAddressType', null, global);\ngoog.exportSymbol('proto.OutputScriptType', null, global);\ngoog.exportSymbol('proto.PinMatrixRequestType', null, global);\ngoog.exportSymbol('proto.PolicyType', null, global);\ngoog.exportSymbol('proto.RawTransactionType', null, global);\ngoog.exportSymbol('proto.RequestType', null, global);\ngoog.exportSymbol('proto.TransactionType', null, global);\ngoog.exportSymbol('proto.TxInputType', null, global);\ngoog.exportSymbol('proto.TxOutputBinType', null, global);\ngoog.exportSymbol('proto.TxOutputType', null, global);\ngoog.exportSymbol('proto.TxRequestDetailsType', null, global);\ngoog.exportSymbol('proto.TxRequestSerializedType', null, global);\ngoog.exportSymbol('proto.wireDebugIn', null, global);\ngoog.exportSymbol('proto.wireDebugOut', null, global);\ngoog.exportSymbol('proto.wireIn', null, global);\ngoog.exportSymbol('proto.wireOut', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.HDNodeType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.HDNodeType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.HDNodeType.displayName = 'proto.HDNodeType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.HDNodePathType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.HDNodePathType.repeatedFields_, null);\n};\ngoog.inherits(proto.HDNodePathType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.HDNodePathType.displayName = 'proto.HDNodePathType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CoinType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CoinType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinType.displayName = 'proto.CoinType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.MultisigRedeemScriptType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.MultisigRedeemScriptType.repeatedFields_, null);\n};\ngoog.inherits(proto.MultisigRedeemScriptType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MultisigRedeemScriptType.displayName = 'proto.MultisigRedeemScriptType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxInputType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.TxInputType.repeatedFields_, null);\n};\ngoog.inherits(proto.TxInputType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxInputType.displayName = 'proto.TxInputType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxOutputType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.TxOutputType.repeatedFields_, null);\n};\ngoog.inherits(proto.TxOutputType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxOutputType.displayName = 'proto.TxOutputType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxOutputBinType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TxOutputBinType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxOutputBinType.displayName = 'proto.TxOutputBinType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TransactionType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.TransactionType.repeatedFields_, null);\n};\ngoog.inherits(proto.TransactionType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TransactionType.displayName = 'proto.TransactionType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RawTransactionType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.RawTransactionType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.RawTransactionType.displayName = 'proto.RawTransactionType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxRequestDetailsType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TxRequestDetailsType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxRequestDetailsType.displayName = 'proto.TxRequestDetailsType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxRequestSerializedType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TxRequestSerializedType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxRequestSerializedType.displayName = 'proto.TxRequestSerializedType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.IdentityType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.IdentityType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.IdentityType.displayName = 'proto.IdentityType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PolicyType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PolicyType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PolicyType.displayName = 'proto.PolicyType';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ExchangeType = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ExchangeType.repeatedFields_, null);\n};\ngoog.inherits(proto.ExchangeType, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ExchangeType.displayName = 'proto.ExchangeType';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.HDNodeType.prototype.toObject = function(opt_includeInstance) {\n  return proto.HDNodeType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.HDNodeType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HDNodeType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    depth: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    fingerprint: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    childNum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    chainCode: msg.getChainCode_asB64(),\n    privateKey: msg.getPrivateKey_asB64(),\n    publicKey: msg.getPublicKey_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.HDNodeType}\n */\nproto.HDNodeType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.HDNodeType;\n  return proto.HDNodeType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.HDNodeType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.HDNodeType}\n */\nproto.HDNodeType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDepth(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFingerprint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChildNum(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainCode(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPrivateKey(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.HDNodeType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.HDNodeType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.HDNodeType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HDNodeType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * required uint32 depth = 1;\n * @return {number}\n */\nproto.HDNodeType.prototype.getDepth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.setDepth = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.clearDepth = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodeType.prototype.hasDepth = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required uint32 fingerprint = 2;\n * @return {number}\n */\nproto.HDNodeType.prototype.getFingerprint = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.setFingerprint = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.clearFingerprint = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodeType.prototype.hasFingerprint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * required uint32 child_num = 3;\n * @return {number}\n */\nproto.HDNodeType.prototype.getChildNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.setChildNum = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.clearChildNum = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodeType.prototype.hasChildNum = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * required bytes chain_code = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.HDNodeType.prototype.getChainCode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * required bytes chain_code = 4;\n * This is a type-conversion wrapper around `getChainCode()`\n * @return {string}\n */\nproto.HDNodeType.prototype.getChainCode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainCode()));\n};\n\n\n/**\n * required bytes chain_code = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainCode()`\n * @return {!Uint8Array}\n */\nproto.HDNodeType.prototype.getChainCode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainCode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.setChainCode = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.clearChainCode = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodeType.prototype.hasChainCode = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bytes private_key = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.HDNodeType.prototype.getPrivateKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes private_key = 5;\n * This is a type-conversion wrapper around `getPrivateKey()`\n * @return {string}\n */\nproto.HDNodeType.prototype.getPrivateKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPrivateKey()));\n};\n\n\n/**\n * optional bytes private_key = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrivateKey()`\n * @return {!Uint8Array}\n */\nproto.HDNodeType.prototype.getPrivateKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPrivateKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.setPrivateKey = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.clearPrivateKey = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodeType.prototype.hasPrivateKey = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes public_key = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.HDNodeType.prototype.getPublicKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 6;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.HDNodeType.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.HDNodeType.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.setPublicKey = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodeType} returns this\n */\nproto.HDNodeType.prototype.clearPublicKey = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodeType.prototype.hasPublicKey = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.HDNodePathType.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.HDNodePathType.prototype.toObject = function(opt_includeInstance) {\n  return proto.HDNodePathType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.HDNodePathType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HDNodePathType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    node: (f = msg.getNode()) && proto.HDNodeType.toObject(includeInstance, f),\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.HDNodePathType}\n */\nproto.HDNodePathType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.HDNodePathType;\n  return proto.HDNodePathType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.HDNodePathType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.HDNodePathType}\n */\nproto.HDNodePathType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.HDNodeType;\n      reader.readMessage(value,proto.HDNodeType.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.HDNodePathType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.HDNodePathType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.HDNodePathType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HDNodePathType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.HDNodeType.serializeBinaryToWriter\n    );\n  }\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required HDNodeType node = 1;\n * @return {!proto.HDNodeType}\n */\nproto.HDNodePathType.prototype.getNode = function() {\n  return /** @type{!proto.HDNodeType} */ (\n    jspb.Message.getWrapperField(this, proto.HDNodeType, 1, 1));\n};\n\n\n/**\n * @param {!proto.HDNodeType} value\n * @return {!proto.HDNodePathType} returns this\n*/\nproto.HDNodePathType.prototype.setNode = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.HDNodePathType} returns this\n */\nproto.HDNodePathType.prototype.clearNode = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HDNodePathType.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated uint32 address_n = 2;\n * @return {!Array<number>}\n */\nproto.HDNodePathType.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.HDNodePathType} returns this\n */\nproto.HDNodePathType.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.HDNodePathType} returns this\n */\nproto.HDNodePathType.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.HDNodePathType} returns this\n */\nproto.HDNodePathType.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CoinType.prototype.toObject = function(opt_includeInstance) {\n  return proto.CoinType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CoinType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    coinName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    coinShortcut: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    addressType: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maxfeeKb: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    addressTypeP2sh: jspb.Message.getFieldWithDefault(msg, 5, 5),\n    signedMessageHeader: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    bip44AccountPath: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    forkid: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n    decimals: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,\n    contractAddress: msg.getContractAddress_asB64(),\n    xpubMagic: jspb.Message.getFieldWithDefault(msg, 16, 76067358),\n    segwit: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,\n    forceBip143: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,\n    curveName: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,\n    cashaddrPrefix: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,\n    bech32Prefix: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,\n    decred: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,\n    xpubMagicSegwitP2sh: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,\n    xpubMagicSegwitNative: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,\n    nanoaddrPrefix: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinType}\n */\nproto.CoinType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinType;\n  return proto.CoinType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinType}\n */\nproto.CoinType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinShortcut(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAddressType(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxfeeKb(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAddressTypeP2sh(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignedMessageHeader(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBip44AccountPath(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setForkid(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDecimals(value);\n      break;\n    case 14:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setXpubMagic(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSegwit(value);\n      break;\n    case 19:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setForceBip143(value);\n      break;\n    case 20:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCurveName(value);\n      break;\n    case 21:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCashaddrPrefix(value);\n      break;\n    case 22:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBech32Prefix(value);\n      break;\n    case 23:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDecred(value);\n      break;\n    case 25:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setXpubMagicSegwitP2sh(value);\n      break;\n    case 26:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setXpubMagicSegwitNative(value);\n      break;\n    case 27:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNanoaddrPrefix(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CoinType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeUint32(\n      12,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeUint32(\n      13,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeBytes(\n      14,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 16));\n  if (f != null) {\n    writer.writeUint32(\n      16,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));\n  if (f != null) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));\n  if (f != null) {\n    writer.writeBool(\n      19,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 20));\n  if (f != null) {\n    writer.writeString(\n      20,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 21));\n  if (f != null) {\n    writer.writeString(\n      21,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 22));\n  if (f != null) {\n    writer.writeString(\n      22,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));\n  if (f != null) {\n    writer.writeBool(\n      23,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 25));\n  if (f != null) {\n    writer.writeUint32(\n      25,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 26));\n  if (f != null) {\n    writer.writeUint32(\n      26,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 27));\n  if (f != null) {\n    writer.writeString(\n      27,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string coin_name = 1;\n * @return {string}\n */\nproto.CoinType.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string coin_shortcut = 2;\n * @return {string}\n */\nproto.CoinType.prototype.getCoinShortcut = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setCoinShortcut = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearCoinShortcut = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasCoinShortcut = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 address_type = 3;\n * @return {number}\n */\nproto.CoinType.prototype.getAddressType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setAddressType = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearAddressType = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasAddressType = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 maxfee_kb = 4;\n * @return {number}\n */\nproto.CoinType.prototype.getMaxfeeKb = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setMaxfeeKb = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearMaxfeeKb = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasMaxfeeKb = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint32 address_type_p2sh = 5;\n * @return {number}\n */\nproto.CoinType.prototype.getAddressTypeP2sh = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 5));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setAddressTypeP2sh = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearAddressTypeP2sh = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasAddressTypeP2sh = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string signed_message_header = 8;\n * @return {string}\n */\nproto.CoinType.prototype.getSignedMessageHeader = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setSignedMessageHeader = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearSignedMessageHeader = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasSignedMessageHeader = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 bip44_account_path = 9;\n * @return {number}\n */\nproto.CoinType.prototype.getBip44AccountPath = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setBip44AccountPath = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearBip44AccountPath = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasBip44AccountPath = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional uint32 forkid = 12;\n * @return {number}\n */\nproto.CoinType.prototype.getForkid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setForkid = function(value) {\n  return jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearForkid = function() {\n  return jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasForkid = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional uint32 decimals = 13;\n * @return {number}\n */\nproto.CoinType.prototype.getDecimals = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setDecimals = function(value) {\n  return jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearDecimals = function() {\n  return jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasDecimals = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional bytes contract_address = 14;\n * @return {!(string|Uint8Array)}\n */\nproto.CoinType.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 14;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nproto.CoinType.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nproto.CoinType.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setContractAddress = function(value) {\n  return jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearContractAddress = function() {\n  return jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasContractAddress = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional uint32 xpub_magic = 16;\n * @return {number}\n */\nproto.CoinType.prototype.getXpubMagic = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 76067358));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setXpubMagic = function(value) {\n  return jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearXpubMagic = function() {\n  return jspb.Message.setField(this, 16, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasXpubMagic = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n/**\n * optional bool segwit = 18;\n * @return {boolean}\n */\nproto.CoinType.prototype.getSegwit = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setSegwit = function(value) {\n  return jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearSegwit = function() {\n  return jspb.Message.setField(this, 18, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasSegwit = function() {\n  return jspb.Message.getField(this, 18) != null;\n};\n\n\n/**\n * optional bool force_bip143 = 19;\n * @return {boolean}\n */\nproto.CoinType.prototype.getForceBip143 = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setForceBip143 = function(value) {\n  return jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearForceBip143 = function() {\n  return jspb.Message.setField(this, 19, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasForceBip143 = function() {\n  return jspb.Message.getField(this, 19) != null;\n};\n\n\n/**\n * optional string curve_name = 20;\n * @return {string}\n */\nproto.CoinType.prototype.getCurveName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setCurveName = function(value) {\n  return jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearCurveName = function() {\n  return jspb.Message.setField(this, 20, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasCurveName = function() {\n  return jspb.Message.getField(this, 20) != null;\n};\n\n\n/**\n * optional string cashaddr_prefix = 21;\n * @return {string}\n */\nproto.CoinType.prototype.getCashaddrPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setCashaddrPrefix = function(value) {\n  return jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearCashaddrPrefix = function() {\n  return jspb.Message.setField(this, 21, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasCashaddrPrefix = function() {\n  return jspb.Message.getField(this, 21) != null;\n};\n\n\n/**\n * optional string bech32_prefix = 22;\n * @return {string}\n */\nproto.CoinType.prototype.getBech32Prefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setBech32Prefix = function(value) {\n  return jspb.Message.setField(this, 22, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearBech32Prefix = function() {\n  return jspb.Message.setField(this, 22, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasBech32Prefix = function() {\n  return jspb.Message.getField(this, 22) != null;\n};\n\n\n/**\n * optional bool decred = 23;\n * @return {boolean}\n */\nproto.CoinType.prototype.getDecred = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setDecred = function(value) {\n  return jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearDecred = function() {\n  return jspb.Message.setField(this, 23, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasDecred = function() {\n  return jspb.Message.getField(this, 23) != null;\n};\n\n\n/**\n * optional uint32 xpub_magic_segwit_p2sh = 25;\n * @return {number}\n */\nproto.CoinType.prototype.getXpubMagicSegwitP2sh = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setXpubMagicSegwitP2sh = function(value) {\n  return jspb.Message.setField(this, 25, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearXpubMagicSegwitP2sh = function() {\n  return jspb.Message.setField(this, 25, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasXpubMagicSegwitP2sh = function() {\n  return jspb.Message.getField(this, 25) != null;\n};\n\n\n/**\n * optional uint32 xpub_magic_segwit_native = 26;\n * @return {number}\n */\nproto.CoinType.prototype.getXpubMagicSegwitNative = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setXpubMagicSegwitNative = function(value) {\n  return jspb.Message.setField(this, 26, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearXpubMagicSegwitNative = function() {\n  return jspb.Message.setField(this, 26, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasXpubMagicSegwitNative = function() {\n  return jspb.Message.getField(this, 26) != null;\n};\n\n\n/**\n * optional string nanoaddr_prefix = 27;\n * @return {string}\n */\nproto.CoinType.prototype.getNanoaddrPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.setNanoaddrPrefix = function(value) {\n  return jspb.Message.setField(this, 27, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinType} returns this\n */\nproto.CoinType.prototype.clearNanoaddrPrefix = function() {\n  return jspb.Message.setField(this, 27, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinType.prototype.hasNanoaddrPrefix = function() {\n  return jspb.Message.getField(this, 27) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.MultisigRedeemScriptType.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.MultisigRedeemScriptType.prototype.toObject = function(opt_includeInstance) {\n  return proto.MultisigRedeemScriptType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.MultisigRedeemScriptType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MultisigRedeemScriptType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkeysList: jspb.Message.toObjectList(msg.getPubkeysList(),\n    proto.HDNodePathType.toObject, includeInstance),\n    signaturesList: msg.getSignaturesList_asB64(),\n    m: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MultisigRedeemScriptType}\n */\nproto.MultisigRedeemScriptType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MultisigRedeemScriptType;\n  return proto.MultisigRedeemScriptType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MultisigRedeemScriptType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MultisigRedeemScriptType}\n */\nproto.MultisigRedeemScriptType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.HDNodePathType;\n      reader.readMessage(value,proto.HDNodePathType.deserializeBinaryFromReader);\n      msg.addPubkeys(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addSignatures(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setM(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.MultisigRedeemScriptType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.MultisigRedeemScriptType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MultisigRedeemScriptType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MultisigRedeemScriptType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkeysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.HDNodePathType.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignaturesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated HDNodePathType pubkeys = 1;\n * @return {!Array<!proto.HDNodePathType>}\n */\nproto.MultisigRedeemScriptType.prototype.getPubkeysList = function() {\n  return /** @type{!Array<!proto.HDNodePathType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.HDNodePathType, 1));\n};\n\n\n/**\n * @param {!Array<!proto.HDNodePathType>} value\n * @return {!proto.MultisigRedeemScriptType} returns this\n*/\nproto.MultisigRedeemScriptType.prototype.setPubkeysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.HDNodePathType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.HDNodePathType}\n */\nproto.MultisigRedeemScriptType.prototype.addPubkeys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.HDNodePathType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\nproto.MultisigRedeemScriptType.prototype.clearPubkeysList = function() {\n  return this.setPubkeysList([]);\n};\n\n\n/**\n * repeated bytes signatures = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.MultisigRedeemScriptType.prototype.getSignaturesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes signatures = 2;\n * This is a type-conversion wrapper around `getSignaturesList()`\n * @return {!Array<string>}\n */\nproto.MultisigRedeemScriptType.prototype.getSignaturesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getSignaturesList()));\n};\n\n\n/**\n * repeated bytes signatures = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignaturesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.MultisigRedeemScriptType.prototype.getSignaturesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getSignaturesList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\nproto.MultisigRedeemScriptType.prototype.setSignaturesList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\nproto.MultisigRedeemScriptType.prototype.addSignatures = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\nproto.MultisigRedeemScriptType.prototype.clearSignaturesList = function() {\n  return this.setSignaturesList([]);\n};\n\n\n/**\n * optional uint32 m = 3;\n * @return {number}\n */\nproto.MultisigRedeemScriptType.prototype.getM = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\nproto.MultisigRedeemScriptType.prototype.setM = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.MultisigRedeemScriptType} returns this\n */\nproto.MultisigRedeemScriptType.prototype.clearM = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.MultisigRedeemScriptType.prototype.hasM = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.TxInputType.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxInputType.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxInputType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxInputType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxInputType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    prevHash: msg.getPrevHash_asB64(),\n    prevIndex: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    scriptSig: msg.getScriptSig_asB64(),\n    sequence: jspb.Message.getFieldWithDefault(msg, 5, -1),\n    scriptType: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    multisig: (f = msg.getMultisig()) && proto.MultisigRedeemScriptType.toObject(includeInstance, f),\n    amount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    decredTree: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    decredScriptVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxInputType}\n */\nproto.TxInputType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxInputType;\n  return proto.TxInputType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxInputType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxInputType}\n */\nproto.TxInputType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPrevHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPrevIndex(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScriptSig(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSequence(value);\n      break;\n    case 6:\n      var value = /** @type {!proto.InputScriptType} */ (reader.readEnum());\n      msg.setScriptType(value);\n      break;\n    case 7:\n      var value = new proto.MultisigRedeemScriptType;\n      reader.readMessage(value,proto.MultisigRedeemScriptType.deserializeBinaryFromReader);\n      msg.setMultisig(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmount(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDecredTree(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDecredScriptVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxInputType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxInputType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxInputType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxInputType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = /** @type {!proto.InputScriptType} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = message.getMultisig();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.MultisigRedeemScriptType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.TxInputType.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * required bytes prev_hash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.TxInputType.prototype.getPrevHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * required bytes prev_hash = 2;\n * This is a type-conversion wrapper around `getPrevHash()`\n * @return {string}\n */\nproto.TxInputType.prototype.getPrevHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPrevHash()));\n};\n\n\n/**\n * required bytes prev_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevHash()`\n * @return {!Uint8Array}\n */\nproto.TxInputType.prototype.getPrevHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPrevHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setPrevHash = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearPrevHash = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasPrevHash = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * required uint32 prev_index = 3;\n * @return {number}\n */\nproto.TxInputType.prototype.getPrevIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setPrevIndex = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearPrevIndex = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasPrevIndex = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes script_sig = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.TxInputType.prototype.getScriptSig = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes script_sig = 4;\n * This is a type-conversion wrapper around `getScriptSig()`\n * @return {string}\n */\nproto.TxInputType.prototype.getScriptSig_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScriptSig()));\n};\n\n\n/**\n * optional bytes script_sig = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScriptSig()`\n * @return {!Uint8Array}\n */\nproto.TxInputType.prototype.getScriptSig_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScriptSig()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setScriptSig = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearScriptSig = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasScriptSig = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint32 sequence = 5;\n * @return {number}\n */\nproto.TxInputType.prototype.getSequence = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, -1));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setSequence = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearSequence = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasSequence = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional InputScriptType script_type = 6;\n * @return {!proto.InputScriptType}\n */\nproto.TxInputType.prototype.getScriptType = function() {\n  return /** @type {!proto.InputScriptType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setScriptType = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearScriptType = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasScriptType = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional MultisigRedeemScriptType multisig = 7;\n * @return {?proto.MultisigRedeemScriptType}\n */\nproto.TxInputType.prototype.getMultisig = function() {\n  return /** @type{?proto.MultisigRedeemScriptType} */ (\n    jspb.Message.getWrapperField(this, proto.MultisigRedeemScriptType, 7));\n};\n\n\n/**\n * @param {?proto.MultisigRedeemScriptType|undefined} value\n * @return {!proto.TxInputType} returns this\n*/\nproto.TxInputType.prototype.setMultisig = function(value) {\n  return jspb.Message.setWrapperField(this, 7, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearMultisig = function() {\n  return this.setMultisig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasMultisig = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint64 amount = 8;\n * @return {number}\n */\nproto.TxInputType.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setAmount = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearAmount = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasAmount = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 decred_tree = 9;\n * @return {number}\n */\nproto.TxInputType.prototype.getDecredTree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setDecredTree = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearDecredTree = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasDecredTree = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional uint32 decred_script_version = 10;\n * @return {number}\n */\nproto.TxInputType.prototype.getDecredScriptVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.setDecredScriptVersion = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxInputType} returns this\n */\nproto.TxInputType.prototype.clearDecredScriptVersion = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxInputType.prototype.hasDecredScriptVersion = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.TxOutputType.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxOutputType.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxOutputType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxOutputType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxOutputType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,\n    amount: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    scriptType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    multisig: (f = msg.getMultisig()) && proto.MultisigRedeemScriptType.toObject(includeInstance, f),\n    opReturnData: msg.getOpReturnData_asB64(),\n    addressType: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n    exchangeType: (f = msg.getExchangeType()) && proto.ExchangeType.toObject(includeInstance, f),\n    decredScriptVersion: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxOutputType}\n */\nproto.TxOutputType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxOutputType;\n  return proto.TxOutputType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxOutputType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxOutputType}\n */\nproto.TxOutputType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmount(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.OutputScriptType} */ (reader.readEnum());\n      msg.setScriptType(value);\n      break;\n    case 5:\n      var value = new proto.MultisigRedeemScriptType;\n      reader.readMessage(value,proto.MultisigRedeemScriptType.deserializeBinaryFromReader);\n      msg.setMultisig(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOpReturnData(value);\n      break;\n    case 7:\n      var value = /** @type {!proto.OutputAddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 8:\n      var value = new proto.ExchangeType;\n      reader.readMessage(value,proto.ExchangeType.deserializeBinaryFromReader);\n      msg.setExchangeType(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDecredScriptVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxOutputType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxOutputType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxOutputType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxOutputType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = /** @type {!proto.OutputScriptType} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getMultisig();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.MultisigRedeemScriptType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = /** @type {!proto.OutputAddressType} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeEnum(\n      7,\n      f\n    );\n  }\n  f = message.getExchangeType();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.ExchangeType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.TxOutputType.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated uint32 address_n = 2;\n * @return {!Array<number>}\n */\nproto.TxOutputType.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * required uint64 amount = 3;\n * @return {number}\n */\nproto.TxOutputType.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setAmount = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearAmount = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasAmount = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * required OutputScriptType script_type = 4;\n * @return {!proto.OutputScriptType}\n */\nproto.TxOutputType.prototype.getScriptType = function() {\n  return /** @type {!proto.OutputScriptType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.OutputScriptType} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setScriptType = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearScriptType = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasScriptType = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional MultisigRedeemScriptType multisig = 5;\n * @return {?proto.MultisigRedeemScriptType}\n */\nproto.TxOutputType.prototype.getMultisig = function() {\n  return /** @type{?proto.MultisigRedeemScriptType} */ (\n    jspb.Message.getWrapperField(this, proto.MultisigRedeemScriptType, 5));\n};\n\n\n/**\n * @param {?proto.MultisigRedeemScriptType|undefined} value\n * @return {!proto.TxOutputType} returns this\n*/\nproto.TxOutputType.prototype.setMultisig = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearMultisig = function() {\n  return this.setMultisig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasMultisig = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes op_return_data = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.TxOutputType.prototype.getOpReturnData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes op_return_data = 6;\n * This is a type-conversion wrapper around `getOpReturnData()`\n * @return {string}\n */\nproto.TxOutputType.prototype.getOpReturnData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOpReturnData()));\n};\n\n\n/**\n * optional bytes op_return_data = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOpReturnData()`\n * @return {!Uint8Array}\n */\nproto.TxOutputType.prototype.getOpReturnData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOpReturnData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setOpReturnData = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearOpReturnData = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasOpReturnData = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional OutputAddressType address_type = 7;\n * @return {!proto.OutputAddressType}\n */\nproto.TxOutputType.prototype.getAddressType = function() {\n  return /** @type {!proto.OutputAddressType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setAddressType = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearAddressType = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasAddressType = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional ExchangeType exchange_type = 8;\n * @return {?proto.ExchangeType}\n */\nproto.TxOutputType.prototype.getExchangeType = function() {\n  return /** @type{?proto.ExchangeType} */ (\n    jspb.Message.getWrapperField(this, proto.ExchangeType, 8));\n};\n\n\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.TxOutputType} returns this\n*/\nproto.TxOutputType.prototype.setExchangeType = function(value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearExchangeType = function() {\n  return this.setExchangeType(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasExchangeType = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 decred_script_version = 9;\n * @return {number}\n */\nproto.TxOutputType.prototype.getDecredScriptVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.setDecredScriptVersion = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputType} returns this\n */\nproto.TxOutputType.prototype.clearDecredScriptVersion = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputType.prototype.hasDecredScriptVersion = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxOutputBinType.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxOutputBinType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxOutputBinType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxOutputBinType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    scriptPubkey: msg.getScriptPubkey_asB64(),\n    decredScriptVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxOutputBinType}\n */\nproto.TxOutputBinType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxOutputBinType;\n  return proto.TxOutputBinType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxOutputBinType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxOutputBinType}\n */\nproto.TxOutputBinType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmount(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScriptPubkey(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDecredScriptVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxOutputBinType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxOutputBinType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxOutputBinType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxOutputBinType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * required uint64 amount = 1;\n * @return {number}\n */\nproto.TxOutputBinType.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxOutputBinType} returns this\n */\nproto.TxOutputBinType.prototype.setAmount = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputBinType} returns this\n */\nproto.TxOutputBinType.prototype.clearAmount = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputBinType.prototype.hasAmount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required bytes script_pubkey = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.TxOutputBinType.prototype.getScriptPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * required bytes script_pubkey = 2;\n * This is a type-conversion wrapper around `getScriptPubkey()`\n * @return {string}\n */\nproto.TxOutputBinType.prototype.getScriptPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScriptPubkey()));\n};\n\n\n/**\n * required bytes script_pubkey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScriptPubkey()`\n * @return {!Uint8Array}\n */\nproto.TxOutputBinType.prototype.getScriptPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScriptPubkey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxOutputBinType} returns this\n */\nproto.TxOutputBinType.prototype.setScriptPubkey = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputBinType} returns this\n */\nproto.TxOutputBinType.prototype.clearScriptPubkey = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputBinType.prototype.hasScriptPubkey = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 decred_script_version = 3;\n * @return {number}\n */\nproto.TxOutputBinType.prototype.getDecredScriptVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxOutputBinType} returns this\n */\nproto.TxOutputBinType.prototype.setDecredScriptVersion = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxOutputBinType} returns this\n */\nproto.TxOutputBinType.prototype.clearDecredScriptVersion = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxOutputBinType.prototype.hasDecredScriptVersion = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.TransactionType.repeatedFields_ = [2,3,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TransactionType.prototype.toObject = function(opt_includeInstance) {\n  return proto.TransactionType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TransactionType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransactionType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    version: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    inputsList: jspb.Message.toObjectList(msg.getInputsList(),\n    proto.TxInputType.toObject, includeInstance),\n    binOutputsList: jspb.Message.toObjectList(msg.getBinOutputsList(),\n    proto.TxOutputBinType.toObject, includeInstance),\n    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),\n    proto.TxOutputType.toObject, includeInstance),\n    lockTime: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    inputsCnt: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    outputsCnt: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n    extraData: msg.getExtraData_asB64(),\n    extraDataLen: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    expiry: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n    overwintered: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,\n    versionGroupId: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n    branchId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TransactionType}\n */\nproto.TransactionType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TransactionType;\n  return proto.TransactionType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TransactionType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TransactionType}\n */\nproto.TransactionType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setVersion(value);\n      break;\n    case 2:\n      var value = new proto.TxInputType;\n      reader.readMessage(value,proto.TxInputType.deserializeBinaryFromReader);\n      msg.addInputs(value);\n      break;\n    case 3:\n      var value = new proto.TxOutputBinType;\n      reader.readMessage(value,proto.TxOutputBinType.deserializeBinaryFromReader);\n      msg.addBinOutputs(value);\n      break;\n    case 5:\n      var value = new proto.TxOutputType;\n      reader.readMessage(value,proto.TxOutputType.deserializeBinaryFromReader);\n      msg.addOutputs(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLockTime(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setInputsCnt(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputsCnt(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setExtraData(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExtraDataLen(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpiry(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setOverwintered(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setVersionGroupId(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBranchId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TransactionType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TransactionType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TransactionType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransactionType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getInputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.TxInputType.serializeBinaryToWriter\n    );\n  }\n  f = message.getBinOutputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.TxOutputBinType.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.TxOutputType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeUint32(\n      12,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeUint32(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 version = 1;\n * @return {number}\n */\nproto.TransactionType.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setVersion = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearVersion = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasVersion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated TxInputType inputs = 2;\n * @return {!Array<!proto.TxInputType>}\n */\nproto.TransactionType.prototype.getInputsList = function() {\n  return /** @type{!Array<!proto.TxInputType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.TxInputType, 2));\n};\n\n\n/**\n * @param {!Array<!proto.TxInputType>} value\n * @return {!proto.TransactionType} returns this\n*/\nproto.TransactionType.prototype.setInputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.TxInputType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TxInputType}\n */\nproto.TransactionType.prototype.addInputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.TxInputType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearInputsList = function() {\n  return this.setInputsList([]);\n};\n\n\n/**\n * repeated TxOutputBinType bin_outputs = 3;\n * @return {!Array<!proto.TxOutputBinType>}\n */\nproto.TransactionType.prototype.getBinOutputsList = function() {\n  return /** @type{!Array<!proto.TxOutputBinType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.TxOutputBinType, 3));\n};\n\n\n/**\n * @param {!Array<!proto.TxOutputBinType>} value\n * @return {!proto.TransactionType} returns this\n*/\nproto.TransactionType.prototype.setBinOutputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.TxOutputBinType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TxOutputBinType}\n */\nproto.TransactionType.prototype.addBinOutputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.TxOutputBinType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearBinOutputsList = function() {\n  return this.setBinOutputsList([]);\n};\n\n\n/**\n * repeated TxOutputType outputs = 5;\n * @return {!Array<!proto.TxOutputType>}\n */\nproto.TransactionType.prototype.getOutputsList = function() {\n  return /** @type{!Array<!proto.TxOutputType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.TxOutputType, 5));\n};\n\n\n/**\n * @param {!Array<!proto.TxOutputType>} value\n * @return {!proto.TransactionType} returns this\n*/\nproto.TransactionType.prototype.setOutputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.TxOutputType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TxOutputType}\n */\nproto.TransactionType.prototype.addOutputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.TxOutputType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearOutputsList = function() {\n  return this.setOutputsList([]);\n};\n\n\n/**\n * optional uint32 lock_time = 4;\n * @return {number}\n */\nproto.TransactionType.prototype.getLockTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setLockTime = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearLockTime = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasLockTime = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint32 inputs_cnt = 6;\n * @return {number}\n */\nproto.TransactionType.prototype.getInputsCnt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setInputsCnt = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearInputsCnt = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasInputsCnt = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional uint32 outputs_cnt = 7;\n * @return {number}\n */\nproto.TransactionType.prototype.getOutputsCnt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setOutputsCnt = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearOutputsCnt = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasOutputsCnt = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional bytes extra_data = 8;\n * @return {!(string|Uint8Array)}\n */\nproto.TransactionType.prototype.getExtraData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes extra_data = 8;\n * This is a type-conversion wrapper around `getExtraData()`\n * @return {string}\n */\nproto.TransactionType.prototype.getExtraData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getExtraData()));\n};\n\n\n/**\n * optional bytes extra_data = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExtraData()`\n * @return {!Uint8Array}\n */\nproto.TransactionType.prototype.getExtraData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getExtraData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setExtraData = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearExtraData = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasExtraData = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 extra_data_len = 9;\n * @return {number}\n */\nproto.TransactionType.prototype.getExtraDataLen = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setExtraDataLen = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearExtraDataLen = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasExtraDataLen = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional uint32 expiry = 10;\n * @return {number}\n */\nproto.TransactionType.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setExpiry = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearExpiry = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasExpiry = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional bool overwintered = 11;\n * @return {boolean}\n */\nproto.TransactionType.prototype.getOverwintered = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setOverwintered = function(value) {\n  return jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearOverwintered = function() {\n  return jspb.Message.setField(this, 11, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasOverwintered = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional uint32 version_group_id = 12;\n * @return {number}\n */\nproto.TransactionType.prototype.getVersionGroupId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setVersionGroupId = function(value) {\n  return jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearVersionGroupId = function() {\n  return jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasVersionGroupId = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional uint32 branch_id = 13;\n * @return {number}\n */\nproto.TransactionType.prototype.getBranchId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.setBranchId = function(value) {\n  return jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TransactionType} returns this\n */\nproto.TransactionType.prototype.clearBranchId = function() {\n  return jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TransactionType.prototype.hasBranchId = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RawTransactionType.prototype.toObject = function(opt_includeInstance) {\n  return proto.RawTransactionType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RawTransactionType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.RawTransactionType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RawTransactionType}\n */\nproto.RawTransactionType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RawTransactionType;\n  return proto.RawTransactionType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RawTransactionType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RawTransactionType}\n */\nproto.RawTransactionType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RawTransactionType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RawTransactionType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RawTransactionType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.RawTransactionType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required bytes payload = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.RawTransactionType.prototype.getPayload = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * required bytes payload = 1;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.RawTransactionType.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * required bytes payload = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.RawTransactionType.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.RawTransactionType} returns this\n */\nproto.RawTransactionType.prototype.setPayload = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RawTransactionType} returns this\n */\nproto.RawTransactionType.prototype.clearPayload = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RawTransactionType.prototype.hasPayload = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxRequestDetailsType.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxRequestDetailsType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxRequestDetailsType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxRequestDetailsType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requestIndex: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    txHash: msg.getTxHash_asB64(),\n    extraDataLen: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    extraDataOffset: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxRequestDetailsType}\n */\nproto.TxRequestDetailsType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxRequestDetailsType;\n  return proto.TxRequestDetailsType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxRequestDetailsType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxRequestDetailsType}\n */\nproto.TxRequestDetailsType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRequestIndex(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExtraDataLen(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExtraDataOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxRequestDetailsType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxRequestDetailsType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxRequestDetailsType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxRequestDetailsType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 request_index = 1;\n * @return {number}\n */\nproto.TxRequestDetailsType.prototype.getRequestIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.setRequestIndex = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.clearRequestIndex = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestDetailsType.prototype.hasRequestIndex = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes tx_hash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.TxRequestDetailsType.prototype.getTxHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes tx_hash = 2;\n * This is a type-conversion wrapper around `getTxHash()`\n * @return {string}\n */\nproto.TxRequestDetailsType.prototype.getTxHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxHash()));\n};\n\n\n/**\n * optional bytes tx_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxHash()`\n * @return {!Uint8Array}\n */\nproto.TxRequestDetailsType.prototype.getTxHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.setTxHash = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.clearTxHash = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestDetailsType.prototype.hasTxHash = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 extra_data_len = 3;\n * @return {number}\n */\nproto.TxRequestDetailsType.prototype.getExtraDataLen = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.setExtraDataLen = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.clearExtraDataLen = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestDetailsType.prototype.hasExtraDataLen = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint32 extra_data_offset = 4;\n * @return {number}\n */\nproto.TxRequestDetailsType.prototype.getExtraDataOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.setExtraDataOffset = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestDetailsType} returns this\n */\nproto.TxRequestDetailsType.prototype.clearExtraDataOffset = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestDetailsType.prototype.hasExtraDataOffset = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxRequestSerializedType.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxRequestSerializedType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxRequestSerializedType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxRequestSerializedType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signatureIndex: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    signature: msg.getSignature_asB64(),\n    serializedTx: msg.getSerializedTx_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxRequestSerializedType}\n */\nproto.TxRequestSerializedType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxRequestSerializedType;\n  return proto.TxRequestSerializedType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxRequestSerializedType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxRequestSerializedType}\n */\nproto.TxRequestSerializedType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSignatureIndex(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSerializedTx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxRequestSerializedType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxRequestSerializedType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxRequestSerializedType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxRequestSerializedType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 signature_index = 1;\n * @return {number}\n */\nproto.TxRequestSerializedType.prototype.getSignatureIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TxRequestSerializedType} returns this\n */\nproto.TxRequestSerializedType.prototype.setSignatureIndex = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestSerializedType} returns this\n */\nproto.TxRequestSerializedType.prototype.clearSignatureIndex = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestSerializedType.prototype.hasSignatureIndex = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.TxRequestSerializedType.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.TxRequestSerializedType.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.TxRequestSerializedType.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxRequestSerializedType} returns this\n */\nproto.TxRequestSerializedType.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestSerializedType} returns this\n */\nproto.TxRequestSerializedType.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestSerializedType.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes serialized_tx = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.TxRequestSerializedType.prototype.getSerializedTx = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes serialized_tx = 3;\n * This is a type-conversion wrapper around `getSerializedTx()`\n * @return {string}\n */\nproto.TxRequestSerializedType.prototype.getSerializedTx_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSerializedTx()));\n};\n\n\n/**\n * optional bytes serialized_tx = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSerializedTx()`\n * @return {!Uint8Array}\n */\nproto.TxRequestSerializedType.prototype.getSerializedTx_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSerializedTx()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.TxRequestSerializedType} returns this\n */\nproto.TxRequestSerializedType.prototype.setSerializedTx = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequestSerializedType} returns this\n */\nproto.TxRequestSerializedType.prototype.clearSerializedTx = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequestSerializedType.prototype.hasSerializedTx = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.IdentityType.prototype.toObject = function(opt_includeInstance) {\n  return proto.IdentityType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.IdentityType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.IdentityType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proto: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    user: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    host: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    port: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    path: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n    index: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.IdentityType}\n */\nproto.IdentityType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.IdentityType;\n  return proto.IdentityType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.IdentityType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.IdentityType}\n */\nproto.IdentityType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProto(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUser(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPort(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.IdentityType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.IdentityType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.IdentityType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.IdentityType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string proto = 1;\n * @return {string}\n */\nproto.IdentityType.prototype.getProto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.setProto = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.clearProto = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.IdentityType.prototype.hasProto = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string user = 2;\n * @return {string}\n */\nproto.IdentityType.prototype.getUser = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.setUser = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.clearUser = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.IdentityType.prototype.hasUser = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string host = 3;\n * @return {string}\n */\nproto.IdentityType.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.setHost = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.clearHost = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.IdentityType.prototype.hasHost = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string port = 4;\n * @return {string}\n */\nproto.IdentityType.prototype.getPort = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.setPort = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.clearPort = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.IdentityType.prototype.hasPort = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string path = 5;\n * @return {string}\n */\nproto.IdentityType.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.setPath = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.clearPath = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.IdentityType.prototype.hasPath = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional uint32 index = 6;\n * @return {number}\n */\nproto.IdentityType.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.setIndex = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.IdentityType} returns this\n */\nproto.IdentityType.prototype.clearIndex = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.IdentityType.prototype.hasIndex = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PolicyType.prototype.toObject = function(opt_includeInstance) {\n  return proto.PolicyType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PolicyType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PolicyType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    policyName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    enabled: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PolicyType}\n */\nproto.PolicyType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PolicyType;\n  return proto.PolicyType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PolicyType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PolicyType}\n */\nproto.PolicyType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPolicyName(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnabled(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PolicyType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PolicyType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PolicyType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PolicyType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string policy_name = 1;\n * @return {string}\n */\nproto.PolicyType.prototype.getPolicyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PolicyType} returns this\n */\nproto.PolicyType.prototype.setPolicyName = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PolicyType} returns this\n */\nproto.PolicyType.prototype.clearPolicyName = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PolicyType.prototype.hasPolicyName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool enabled = 2;\n * @return {boolean}\n */\nproto.PolicyType.prototype.getEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.PolicyType} returns this\n */\nproto.PolicyType.prototype.setEnabled = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PolicyType} returns this\n */\nproto.PolicyType.prototype.clearEnabled = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PolicyType.prototype.hasEnabled = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ExchangeType.repeatedFields_ = [3,4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ExchangeType.prototype.toObject = function(opt_includeInstance) {\n  return proto.ExchangeType.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ExchangeType} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ExchangeType.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signedExchangeResponse: (f = msg.getSignedExchangeResponse()) && exchange_pb.SignedExchangeResponse.toObject(includeInstance, f),\n    withdrawalCoinName: jspb.Message.getFieldWithDefault(msg, 2, \"Bitcoin\"),\n    withdrawalAddressNList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,\n    returnAddressNList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n    withdrawalScriptType: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    returnScriptType: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ExchangeType}\n */\nproto.ExchangeType.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ExchangeType;\n  return proto.ExchangeType.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ExchangeType} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ExchangeType}\n */\nproto.ExchangeType.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new exchange_pb.SignedExchangeResponse;\n      reader.readMessage(value,exchange_pb.SignedExchangeResponse.deserializeBinaryFromReader);\n      msg.setSignedExchangeResponse(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWithdrawalCoinName(value);\n      break;\n    case 3:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addWithdrawalAddressN(values[i]);\n      }\n      break;\n    case 4:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addReturnAddressN(values[i]);\n      }\n      break;\n    case 5:\n      var value = /** @type {!proto.InputScriptType} */ (reader.readEnum());\n      msg.setWithdrawalScriptType(value);\n      break;\n    case 6:\n      var value = /** @type {!proto.InputScriptType} */ (reader.readEnum());\n      msg.setReturnScriptType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ExchangeType.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ExchangeType.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ExchangeType} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ExchangeType.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignedExchangeResponse();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      exchange_pb.SignedExchangeResponse.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getWithdrawalAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      3,\n      f\n    );\n  }\n  f = message.getReturnAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {!proto.InputScriptType} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n  f = /** @type {!proto.InputScriptType} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional SignedExchangeResponse signed_exchange_response = 1;\n * @return {?proto.SignedExchangeResponse}\n */\nproto.ExchangeType.prototype.getSignedExchangeResponse = function() {\n  return /** @type{?proto.SignedExchangeResponse} */ (\n    jspb.Message.getWrapperField(this, exchange_pb.SignedExchangeResponse, 1));\n};\n\n\n/**\n * @param {?proto.SignedExchangeResponse|undefined} value\n * @return {!proto.ExchangeType} returns this\n*/\nproto.ExchangeType.prototype.setSignedExchangeResponse = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.clearSignedExchangeResponse = function() {\n  return this.setSignedExchangeResponse(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ExchangeType.prototype.hasSignedExchangeResponse = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string withdrawal_coin_name = 2;\n * @return {string}\n */\nproto.ExchangeType.prototype.getWithdrawalCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.setWithdrawalCoinName = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.clearWithdrawalCoinName = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ExchangeType.prototype.hasWithdrawalCoinName = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated uint32 withdrawal_address_n = 3;\n * @return {!Array<number>}\n */\nproto.ExchangeType.prototype.getWithdrawalAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.setWithdrawalAddressNList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.addWithdrawalAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.clearWithdrawalAddressNList = function() {\n  return this.setWithdrawalAddressNList([]);\n};\n\n\n/**\n * repeated uint32 return_address_n = 4;\n * @return {!Array<number>}\n */\nproto.ExchangeType.prototype.getReturnAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.setReturnAddressNList = function(value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.addReturnAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.clearReturnAddressNList = function() {\n  return this.setReturnAddressNList([]);\n};\n\n\n/**\n * optional InputScriptType withdrawal_script_type = 5;\n * @return {!proto.InputScriptType}\n */\nproto.ExchangeType.prototype.getWithdrawalScriptType = function() {\n  return /** @type {!proto.InputScriptType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.setWithdrawalScriptType = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.clearWithdrawalScriptType = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ExchangeType.prototype.hasWithdrawalScriptType = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional InputScriptType return_script_type = 6;\n * @return {!proto.InputScriptType}\n */\nproto.ExchangeType.prototype.getReturnScriptType = function() {\n  return /** @type {!proto.InputScriptType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.setReturnScriptType = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ExchangeType} returns this\n */\nproto.ExchangeType.prototype.clearReturnScriptType = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ExchangeType.prototype.hasReturnScriptType = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * @enum {number}\n */\nproto.FailureType = {\n  FAILURE_UNEXPECTEDMESSAGE: 1,\n  FAILURE_BUTTONEXPECTED: 2,\n  FAILURE_SYNTAXERROR: 3,\n  FAILURE_ACTIONCANCELLED: 4,\n  FAILURE_PINEXPECTED: 5,\n  FAILURE_PINCANCELLED: 6,\n  FAILURE_PININVALID: 7,\n  FAILURE_INVALIDSIGNATURE: 8,\n  FAILURE_OTHER: 9,\n  FAILURE_NOTENOUGHFUNDS: 10,\n  FAILURE_NOTINITIALIZED: 11,\n  FAILURE_PINMISMATCH: 12,\n  FAILURE_FIRMWAREERROR: 99\n};\n\n/**\n * @enum {number}\n */\nproto.OutputScriptType = {\n  PAYTOADDRESS: 0,\n  PAYTOSCRIPTHASH: 1,\n  PAYTOMULTISIG: 2,\n  PAYTOOPRETURN: 3,\n  PAYTOWITNESS: 4,\n  PAYTOP2SHWITNESS: 5\n};\n\n/**\n * @enum {number}\n */\nproto.InputScriptType = {\n  SPENDADDRESS: 0,\n  SPENDMULTISIG: 1,\n  EXTERNAL: 2,\n  SPENDWITNESS: 3,\n  SPENDP2SHWITNESS: 4\n};\n\n/**\n * @enum {number}\n */\nproto.RequestType = {\n  TXINPUT: 0,\n  TXOUTPUT: 1,\n  TXMETA: 2,\n  TXFINISHED: 3,\n  TXEXTRADATA: 4\n};\n\n/**\n * @enum {number}\n */\nproto.OutputAddressType = {\n  SPEND: 0,\n  TRANSFER: 1,\n  CHANGE: 2,\n  EXCHANGE: 3\n};\n\n/**\n * @enum {number}\n */\nproto.ButtonRequestType = {\n  BUTTONREQUEST_OTHER: 1,\n  BUTTONREQUEST_FEEOVERTHRESHOLD: 2,\n  BUTTONREQUEST_CONFIRMOUTPUT: 3,\n  BUTTONREQUEST_RESETDEVICE: 4,\n  BUTTONREQUEST_CONFIRMWORD: 5,\n  BUTTONREQUEST_WIPEDEVICE: 6,\n  BUTTONREQUEST_PROTECTCALL: 7,\n  BUTTONREQUEST_SIGNTX: 8,\n  BUTTONREQUEST_FIRMWARECHECK: 9,\n  BUTTONREQUEST_ADDRESS: 10,\n  BUTTONREQUEST_FIRMWAREERASE: 11,\n  BUTTONREQUEST_CONFIRMTRANSFERTOACCOUNT: 12,\n  BUTTONREQUEST_CONFIRMTRANSFERTONODEPATH: 13,\n  BUTTONREQUEST_CHANGELABEL: 14,\n  BUTTONREQUEST_CHANGELANGUAGE: 15,\n  BUTTONREQUEST_ENABLEPASSPHRASE: 16,\n  BUTTONREQUEST_DISABLEPASSPHRASE: 17,\n  BUTTONREQUEST_ENCRYPTANDSIGNMESSAGE: 18,\n  BUTTONREQUEST_ENCRYPTMESSAGE: 19,\n  BUTTONREQUEST_IMPORTPRIVATEKEY: 20,\n  BUTTONREQUEST_IMPORTRECOVERYSENTENCE: 21,\n  BUTTONREQUEST_SIGNIDENTITY: 22,\n  BUTTONREQUEST_PING: 23,\n  BUTTONREQUEST_REMOVEPIN: 24,\n  BUTTONREQUEST_CHANGEPIN: 25,\n  BUTTONREQUEST_CREATEPIN: 26,\n  BUTTONREQUEST_GETENTROPY: 27,\n  BUTTONREQUEST_SIGNMESSAGE: 28,\n  BUTTONREQUEST_APPLYPOLICIES: 29,\n  BUTTONREQUEST_SIGNEXCHANGE: 30,\n  BUTTONREQUEST_AUTOLOCKDELAYMS: 31,\n  BUTTONREQUEST_U2FCOUNTER: 32,\n  BUTTONREQUEST_CONFIRMEOSACTION: 33,\n  BUTTONREQUEST_CONFIRMEOSBUDGET: 34,\n  BUTTONREQUEST_CONFIRMMEMO: 35,\n  BUTTONREQUEST_REMOVEWIPECODE: 36,\n  BUTTONREQUEST_CHANGEWIPECODE: 37,\n  BUTTONREQUEST_CREATEWIPECODE: 38\n};\n\n/**\n * @enum {number}\n */\nproto.PinMatrixRequestType = {\n  PINMATRIXREQUESTTYPE_CURRENT: 1,\n  PINMATRIXREQUESTTYPE_NEWFIRST: 2,\n  PINMATRIXREQUESTTYPE_NEWSECOND: 3\n};\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireIn`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\nproto.wireIn = new jspb.ExtensionFieldInfo(\n    50002,\n    {wireIn: 0},\n    null,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         null),\n    0);\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50002] = new jspb.ExtensionFieldBinaryInfo(\n    proto.wireIn,\n    jspb.BinaryReader.prototype.readBool,\n    jspb.BinaryWriter.prototype.writeBool,\n    undefined,\n    undefined,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50002] = proto.wireIn;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireOut`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\nproto.wireOut = new jspb.ExtensionFieldInfo(\n    50003,\n    {wireOut: 0},\n    null,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         null),\n    0);\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50003] = new jspb.ExtensionFieldBinaryInfo(\n    proto.wireOut,\n    jspb.BinaryReader.prototype.readBool,\n    jspb.BinaryWriter.prototype.writeBool,\n    undefined,\n    undefined,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50003] = proto.wireOut;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireDebugIn`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\nproto.wireDebugIn = new jspb.ExtensionFieldInfo(\n    50004,\n    {wireDebugIn: 0},\n    null,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         null),\n    0);\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50004] = new jspb.ExtensionFieldBinaryInfo(\n    proto.wireDebugIn,\n    jspb.BinaryReader.prototype.readBool,\n    jspb.BinaryWriter.prototype.writeBool,\n    undefined,\n    undefined,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50004] = proto.wireDebugIn;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `wireDebugOut`.\n * @type {!jspb.ExtensionFieldInfo<boolean>}\n */\nproto.wireDebugOut = new jspb.ExtensionFieldInfo(\n    50005,\n    {wireDebugOut: 0},\n    null,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         null),\n    0);\n\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50005] = new jspb.ExtensionFieldBinaryInfo(\n    proto.wireDebugOut,\n    jspb.BinaryReader.prototype.readBool,\n    jspb.BinaryWriter.prototype.writeBool,\n    undefined,\n    undefined,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.EnumValueOptions.extensions[50005] = proto.wireDebugOut;\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"script"}