{"ast":null,"code":"// source: messages-binance.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\n\nvar global = function () {\n  return this;\n}.call(null);\n\nvar types_pb = require('./types_pb.js');\n\ngoog.object.extend(proto, types_pb);\ngoog.exportSymbol('proto.BinanceAddress', null, global);\ngoog.exportSymbol('proto.BinanceCancelMsg', null, global);\ngoog.exportSymbol('proto.BinanceGetAddress', null, global);\ngoog.exportSymbol('proto.BinanceGetPublicKey', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg.BinanceOrderSide', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg.BinanceOrderType', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg.BinanceTimeInForce', null, global);\ngoog.exportSymbol('proto.BinancePublicKey', null, global);\ngoog.exportSymbol('proto.BinanceSignTx', null, global);\ngoog.exportSymbol('proto.BinanceSignedTx', null, global);\ngoog.exportSymbol('proto.BinanceTransferMsg', null, global);\ngoog.exportSymbol('proto.BinanceTransferMsg.BinanceCoin', null, global);\ngoog.exportSymbol('proto.BinanceTransferMsg.BinanceInputOutput', null, global);\ngoog.exportSymbol('proto.BinanceTxRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.BinanceGetAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceGetAddress.repeatedFields_, null);\n};\n\ngoog.inherits(proto.BinanceGetAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceGetAddress.displayName = 'proto.BinanceGetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinanceAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceAddress.displayName = 'proto.BinanceAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceGetPublicKey = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceGetPublicKey.repeatedFields_, null);\n};\n\ngoog.inherits(proto.BinanceGetPublicKey, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceGetPublicKey.displayName = 'proto.BinanceGetPublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinancePublicKey = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinancePublicKey, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinancePublicKey.displayName = 'proto.BinancePublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceSignTx = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceSignTx.repeatedFields_, null);\n};\n\ngoog.inherits(proto.BinanceSignTx, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceSignTx.displayName = 'proto.BinanceSignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceTxRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinanceTxRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTxRequest.displayName = 'proto.BinanceTxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceTransferMsg = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceTransferMsg.repeatedFields_, null);\n};\n\ngoog.inherits(proto.BinanceTransferMsg, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTransferMsg.displayName = 'proto.BinanceTransferMsg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceTransferMsg.BinanceInputOutput.repeatedFields_, null);\n};\n\ngoog.inherits(proto.BinanceTransferMsg.BinanceInputOutput, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTransferMsg.BinanceInputOutput.displayName = 'proto.BinanceTransferMsg.BinanceInputOutput';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinanceTransferMsg.BinanceCoin, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTransferMsg.BinanceCoin.displayName = 'proto.BinanceTransferMsg.BinanceCoin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceOrderMsg = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinanceOrderMsg, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceOrderMsg.displayName = 'proto.BinanceOrderMsg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceCancelMsg = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinanceCancelMsg, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceCancelMsg.displayName = 'proto.BinanceCancelMsg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.BinanceSignedTx = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.BinanceSignedTx, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceSignedTx.displayName = 'proto.BinanceSignedTx';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.BinanceGetAddress.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceGetAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceGetAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceGetAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceGetAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceGetAddress}\n */\n\n\nproto.BinanceGetAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceGetAddress();\n  return proto.BinanceGetAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceGetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceGetAddress}\n */\n\n\nproto.BinanceGetAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setShowDisplay(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceGetAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceGetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceGetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceGetAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.BinanceGetAddress.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.BinanceGetAddress} returns this\n */\n\n\nproto.BinanceGetAddress.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.BinanceGetAddress} returns this\n */\n\n\nproto.BinanceGetAddress.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceGetAddress} returns this\n */\n\n\nproto.BinanceGetAddress.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\n\n\nproto.BinanceGetAddress.prototype.getShowDisplay = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.BinanceGetAddress} returns this\n */\n\n\nproto.BinanceGetAddress.prototype.setShowDisplay = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceGetAddress} returns this\n */\n\n\nproto.BinanceGetAddress.prototype.clearShowDisplay = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceGetAddress.prototype.hasShowDisplay = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceAddress}\n */\n\n\nproto.BinanceAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceAddress();\n  return proto.BinanceAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceAddress}\n */\n\n\nproto.BinanceAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.BinanceAddress.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceAddress} returns this\n */\n\n\nproto.BinanceAddress.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceAddress} returns this\n */\n\n\nproto.BinanceAddress.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceAddress.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.BinanceGetPublicKey.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceGetPublicKey.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceGetPublicKey.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceGetPublicKey} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceGetPublicKey.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceGetPublicKey}\n */\n\n\nproto.BinanceGetPublicKey.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceGetPublicKey();\n  return proto.BinanceGetPublicKey.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceGetPublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceGetPublicKey}\n */\n\n\nproto.BinanceGetPublicKey.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setShowDisplay(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceGetPublicKey.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceGetPublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceGetPublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceGetPublicKey.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.BinanceGetPublicKey.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.BinanceGetPublicKey} returns this\n */\n\n\nproto.BinanceGetPublicKey.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.BinanceGetPublicKey} returns this\n */\n\n\nproto.BinanceGetPublicKey.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceGetPublicKey} returns this\n */\n\n\nproto.BinanceGetPublicKey.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\n\n\nproto.BinanceGetPublicKey.prototype.getShowDisplay = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.BinanceGetPublicKey} returns this\n */\n\n\nproto.BinanceGetPublicKey.prototype.setShowDisplay = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceGetPublicKey} returns this\n */\n\n\nproto.BinanceGetPublicKey.prototype.clearShowDisplay = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceGetPublicKey.prototype.hasShowDisplay = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinancePublicKey.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinancePublicKey.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinancePublicKey} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinancePublicKey.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      publicKey: msg.getPublicKey_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinancePublicKey}\n */\n\n\nproto.BinancePublicKey.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinancePublicKey();\n  return proto.BinancePublicKey.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinancePublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinancePublicKey}\n */\n\n\nproto.BinancePublicKey.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setPublicKey(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinancePublicKey.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinancePublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinancePublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinancePublicKey.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes public_key = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.BinancePublicKey.prototype.getPublicKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\n\n\nproto.BinancePublicKey.prototype.getPublicKey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPublicKey());\n};\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.BinancePublicKey.prototype.getPublicKey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPublicKey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BinancePublicKey} returns this\n */\n\n\nproto.BinancePublicKey.prototype.setPublicKey = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinancePublicKey} returns this\n */\n\n\nproto.BinancePublicKey.prototype.clearPublicKey = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinancePublicKey.prototype.hasPublicKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.BinanceSignTx.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceSignTx.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceSignTx.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceSignTx} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceSignTx.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      msgCount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      accountNumber: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      chainId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      memo: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n      sequence: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      source: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceSignTx}\n */\n\n\nproto.BinanceSignTx.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceSignTx();\n  return proto.BinanceSignTx.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceSignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceSignTx}\n */\n\n\nproto.BinanceSignTx.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setMsgCount(value);\n        break;\n\n      case 3:\n        var value = reader.readSint64String();\n        msg.setAccountNumber(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setChainId(value);\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setMemo(value);\n        break;\n\n      case 6:\n        var value = reader.readSint64String();\n        msg.setSequence(value);\n        break;\n\n      case 7:\n        var value = reader.readSint64String();\n        msg.setSource(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceSignTx.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceSignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceSignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceSignTx.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeSint64String(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeSint64String(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeSint64String(7, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.BinanceSignTx.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional uint32 msg_count = 2;\n * @return {number}\n */\n\n\nproto.BinanceSignTx.prototype.getMsgCount = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setMsgCount = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearMsgCount = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignTx.prototype.hasMsgCount = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional sint64 account_number = 3;\n * @return {string}\n */\n\n\nproto.BinanceSignTx.prototype.getAccountNumber = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setAccountNumber = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearAccountNumber = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignTx.prototype.hasAccountNumber = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string chain_id = 4;\n * @return {string}\n */\n\n\nproto.BinanceSignTx.prototype.getChainId = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setChainId = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearChainId = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignTx.prototype.hasChainId = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string memo = 5;\n * @return {string}\n */\n\n\nproto.BinanceSignTx.prototype.getMemo = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setMemo = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearMemo = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignTx.prototype.hasMemo = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional sint64 sequence = 6;\n * @return {string}\n */\n\n\nproto.BinanceSignTx.prototype.getSequence = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setSequence = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearSequence = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignTx.prototype.hasSequence = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional sint64 source = 7;\n * @return {string}\n */\n\n\nproto.BinanceSignTx.prototype.getSource = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.setSource = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\n\n\nproto.BinanceSignTx.prototype.clearSource = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignTx.prototype.hasSource = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceTxRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceTxRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceTxRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceTxRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTxRequest}\n */\n\n\nproto.BinanceTxRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTxRequest();\n  return proto.BinanceTxRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTxRequest}\n */\n\n\nproto.BinanceTxRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceTxRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceTxRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.BinanceTransferMsg.repeatedFields_ = [1, 2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceTransferMsg.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceTransferMsg.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceTransferMsg} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceTransferMsg.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      inputsList: jspb.Message.toObjectList(msg.getInputsList(), proto.BinanceTransferMsg.BinanceInputOutput.toObject, includeInstance),\n      outputsList: jspb.Message.toObjectList(msg.getOutputsList(), proto.BinanceTransferMsg.BinanceInputOutput.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTransferMsg}\n */\n\n\nproto.BinanceTransferMsg.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTransferMsg();\n  return proto.BinanceTransferMsg.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTransferMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTransferMsg}\n */\n\n\nproto.BinanceTransferMsg.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.BinanceTransferMsg.BinanceInputOutput();\n        reader.readMessage(value, proto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader);\n        msg.addInputs(value);\n        break;\n\n      case 2:\n        var value = new proto.BinanceTransferMsg.BinanceInputOutput();\n        reader.readMessage(value, proto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader);\n        msg.addOutputs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceTransferMsg.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTransferMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTransferMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceTransferMsg.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInputsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter);\n  }\n\n  f = message.getOutputsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter);\n  }\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceTransferMsg.BinanceInputOutput.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceTransferMsg.BinanceInputOutput.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceTransferMsg.BinanceInputOutput} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceTransferMsg.BinanceInputOutput.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      coinsList: jspb.Message.toObjectList(msg.getCoinsList(), proto.BinanceTransferMsg.BinanceCoin.toObject, includeInstance),\n      addressType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      exchangeType: (f = msg.getExchangeType()) && types_pb.ExchangeType.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTransferMsg.BinanceInputOutput();\n  return proto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = new proto.BinanceTransferMsg.BinanceCoin();\n        reader.readMessage(value, proto.BinanceTransferMsg.BinanceCoin.deserializeBinaryFromReader);\n        msg.addCoins(value);\n        break;\n\n      case 3:\n        var value = reader.readEnum();\n        msg.setAddressType(value);\n        break;\n\n      case 4:\n        var value = new types_pb.ExchangeType();\n        reader.readMessage(value, types_pb.ExchangeType.deserializeBinaryFromReader);\n        msg.setExchangeType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCoinsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.BinanceTransferMsg.BinanceCoin.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeEnum(3, f);\n  }\n\n  f = message.getExchangeType();\n\n  if (f != null) {\n    writer.writeMessage(4, f, types_pb.ExchangeType.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated BinanceCoin coins = 2;\n * @return {!Array<!proto.BinanceTransferMsg.BinanceCoin>}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getCoinsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.BinanceTransferMsg.BinanceCoin, 2);\n};\n/**\n * @param {!Array<!proto.BinanceTransferMsg.BinanceCoin>} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n*/\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setCoinsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.BinanceTransferMsg.BinanceCoin=} opt_value\n * @param {number=} opt_index\n * @return {!proto.BinanceTransferMsg.BinanceCoin}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.addCoins = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.BinanceTransferMsg.BinanceCoin, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearCoinsList = function () {\n  return this.setCoinsList([]);\n};\n/**\n * optional OutputAddressType address_type = 3;\n * @return {!proto.OutputAddressType}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getAddressType = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setAddressType = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearAddressType = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.hasAddressType = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional ExchangeType exchange_type = 4;\n * @return {?proto.ExchangeType}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getExchangeType = function () {\n  return jspb.Message.getWrapperField(this, types_pb.ExchangeType, 4);\n};\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n*/\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setExchangeType = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearExchangeType = function () {\n  return this.setExchangeType(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.hasExchangeType = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceTransferMsg.BinanceCoin.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceTransferMsg.BinanceCoin.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceTransferMsg.BinanceCoin} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceTransferMsg.BinanceCoin.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      denom: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTransferMsg.BinanceCoin}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTransferMsg.BinanceCoin();\n  return proto.BinanceTransferMsg.BinanceCoin.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTransferMsg.BinanceCoin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTransferMsg.BinanceCoin}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readSint64String();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setDenom(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTransferMsg.BinanceCoin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTransferMsg.BinanceCoin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeSint64String(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional sint64 amount = 1;\n * @return {string}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.getAmount = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.setAmount = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.clearAmount = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.hasAmount = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string denom = 2;\n * @return {string}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.getDenom = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.setDenom = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.clearDenom = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceTransferMsg.BinanceCoin.prototype.hasDenom = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * repeated BinanceInputOutput inputs = 1;\n * @return {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>}\n */\n\n\nproto.BinanceTransferMsg.prototype.getInputsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.BinanceTransferMsg.BinanceInputOutput, 1);\n};\n/**\n * @param {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>} value\n * @return {!proto.BinanceTransferMsg} returns this\n*/\n\n\nproto.BinanceTransferMsg.prototype.setInputsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput=} opt_value\n * @param {number=} opt_index\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\n\n\nproto.BinanceTransferMsg.prototype.addInputs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BinanceTransferMsg.BinanceInputOutput, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceTransferMsg} returns this\n */\n\n\nproto.BinanceTransferMsg.prototype.clearInputsList = function () {\n  return this.setInputsList([]);\n};\n/**\n * repeated BinanceInputOutput outputs = 2;\n * @return {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>}\n */\n\n\nproto.BinanceTransferMsg.prototype.getOutputsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, proto.BinanceTransferMsg.BinanceInputOutput, 2);\n};\n/**\n * @param {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>} value\n * @return {!proto.BinanceTransferMsg} returns this\n*/\n\n\nproto.BinanceTransferMsg.prototype.setOutputsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput=} opt_value\n * @param {number=} opt_index\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\n\n\nproto.BinanceTransferMsg.prototype.addOutputs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.BinanceTransferMsg.BinanceInputOutput, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceTransferMsg} returns this\n */\n\n\nproto.BinanceTransferMsg.prototype.clearOutputsList = function () {\n  return this.setOutputsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceOrderMsg.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceOrderMsg.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceOrderMsg} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceOrderMsg.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      ordertype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      price: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      quantity: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      sender: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n      side: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      symbol: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n      timeinforce: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceOrderMsg}\n */\n\n\nproto.BinanceOrderMsg.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceOrderMsg();\n  return proto.BinanceOrderMsg.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceOrderMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceOrderMsg}\n */\n\n\nproto.BinanceOrderMsg.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = reader.readEnum();\n        msg.setOrdertype(value);\n        break;\n\n      case 3:\n        var value = reader.readSint64String();\n        msg.setPrice(value);\n        break;\n\n      case 4:\n        var value = reader.readSint64String();\n        msg.setQuantity(value);\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setSender(value);\n        break;\n\n      case 6:\n        var value = reader.readEnum();\n        msg.setSide(value);\n        break;\n\n      case 7:\n        var value = reader.readString();\n        msg.setSymbol(value);\n        break;\n\n      case 8:\n        var value = reader.readEnum();\n        msg.setTimeinforce(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceOrderMsg.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceOrderMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceOrderMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceOrderMsg.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeEnum(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeSint64String(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeSint64String(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeEnum(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeString(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeEnum(8, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.BinanceOrderMsg.BinanceOrderType = {\n  OT_UNKNOWN: 0,\n  MARKET: 1,\n  LIMIT: 2,\n  OT_RESERVED: 3\n};\n/**\n * @enum {number}\n */\n\nproto.BinanceOrderMsg.BinanceOrderSide = {\n  SIDE_UNKNOWN: 0,\n  BUY: 1,\n  SELL: 2\n};\n/**\n * @enum {number}\n */\n\nproto.BinanceOrderMsg.BinanceTimeInForce = {\n  TIF_UNKNOWN: 0,\n  GTE: 1,\n  TIF_RESERVED: 2,\n  IOC: 3\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\nproto.BinanceOrderMsg.prototype.getId = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setId = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearId = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasId = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional BinanceOrderType ordertype = 2;\n * @return {!proto.BinanceOrderMsg.BinanceOrderType}\n */\n\n\nproto.BinanceOrderMsg.prototype.getOrdertype = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {!proto.BinanceOrderMsg.BinanceOrderType} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setOrdertype = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearOrdertype = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasOrdertype = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional sint64 price = 3;\n * @return {string}\n */\n\n\nproto.BinanceOrderMsg.prototype.getPrice = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setPrice = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearPrice = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasPrice = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional sint64 quantity = 4;\n * @return {string}\n */\n\n\nproto.BinanceOrderMsg.prototype.getQuantity = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"0\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setQuantity = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearQuantity = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasQuantity = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string sender = 5;\n * @return {string}\n */\n\n\nproto.BinanceOrderMsg.prototype.getSender = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setSender = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearSender = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasSender = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional BinanceOrderSide side = 6;\n * @return {!proto.BinanceOrderMsg.BinanceOrderSide}\n */\n\n\nproto.BinanceOrderMsg.prototype.getSide = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, 0);\n};\n/**\n * @param {!proto.BinanceOrderMsg.BinanceOrderSide} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setSide = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearSide = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasSide = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional string symbol = 7;\n * @return {string}\n */\n\n\nproto.BinanceOrderMsg.prototype.getSymbol = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setSymbol = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearSymbol = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasSymbol = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional BinanceTimeInForce timeinforce = 8;\n * @return {!proto.BinanceOrderMsg.BinanceTimeInForce}\n */\n\n\nproto.BinanceOrderMsg.prototype.getTimeinforce = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {!proto.BinanceOrderMsg.BinanceTimeInForce} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.setTimeinforce = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\n\n\nproto.BinanceOrderMsg.prototype.clearTimeinforce = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceOrderMsg.prototype.hasTimeinforce = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceCancelMsg.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceCancelMsg.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceCancelMsg} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceCancelMsg.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      refid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      sender: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      symbol: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceCancelMsg}\n */\n\n\nproto.BinanceCancelMsg.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceCancelMsg();\n  return proto.BinanceCancelMsg.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceCancelMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceCancelMsg}\n */\n\n\nproto.BinanceCancelMsg.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setRefid(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setSender(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setSymbol(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceCancelMsg.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceCancelMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceCancelMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceCancelMsg.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string refid = 1;\n * @return {string}\n */\n\n\nproto.BinanceCancelMsg.prototype.getRefid = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceCancelMsg} returns this\n */\n\n\nproto.BinanceCancelMsg.prototype.setRefid = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceCancelMsg} returns this\n */\n\n\nproto.BinanceCancelMsg.prototype.clearRefid = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceCancelMsg.prototype.hasRefid = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string sender = 2;\n * @return {string}\n */\n\n\nproto.BinanceCancelMsg.prototype.getSender = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceCancelMsg} returns this\n */\n\n\nproto.BinanceCancelMsg.prototype.setSender = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceCancelMsg} returns this\n */\n\n\nproto.BinanceCancelMsg.prototype.clearSender = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceCancelMsg.prototype.hasSender = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string symbol = 3;\n * @return {string}\n */\n\n\nproto.BinanceCancelMsg.prototype.getSymbol = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.BinanceCancelMsg} returns this\n */\n\n\nproto.BinanceCancelMsg.prototype.setSymbol = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceCancelMsg} returns this\n */\n\n\nproto.BinanceCancelMsg.prototype.clearSymbol = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceCancelMsg.prototype.hasSymbol = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.BinanceSignedTx.prototype.toObject = function (opt_includeInstance) {\n    return proto.BinanceSignedTx.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.BinanceSignedTx} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.BinanceSignedTx.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      signature: msg.getSignature_asB64(),\n      publicKey: msg.getPublicKey_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceSignedTx}\n */\n\n\nproto.BinanceSignedTx.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceSignedTx();\n  return proto.BinanceSignedTx.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceSignedTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceSignedTx}\n */\n\n\nproto.BinanceSignedTx.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setPublicKey(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceSignedTx.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceSignedTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceSignedTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.BinanceSignedTx.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional bytes signature = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.BinanceSignedTx.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes signature = 1;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.BinanceSignedTx.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceSignedTx.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BinanceSignedTx} returns this\n */\n\n\nproto.BinanceSignedTx.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignedTx} returns this\n */\n\n\nproto.BinanceSignedTx.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignedTx.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes public_key = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.BinanceSignedTx.prototype.getPublicKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes public_key = 2;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\n\n\nproto.BinanceSignedTx.prototype.getPublicKey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPublicKey());\n};\n/**\n * optional bytes public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.BinanceSignedTx.prototype.getPublicKey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPublicKey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BinanceSignedTx} returns this\n */\n\n\nproto.BinanceSignedTx.prototype.setPublicKey = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignedTx} returns this\n */\n\n\nproto.BinanceSignedTx.prototype.clearPublicKey = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.BinanceSignedTx.prototype.hasPublicKey = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/@keepkey/device-protocol/lib/messages-binance_pb.js"],"names":["jspb","require","goog","global","call","types_pb","object","extend","proto","exportSymbol","BinanceGetAddress","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","BinanceAddress","BinanceGetPublicKey","BinancePublicKey","BinanceSignTx","BinanceTxRequest","BinanceTransferMsg","BinanceInputOutput","BinanceCoin","BinanceOrderMsg","BinanceCancelMsg","BinanceSignedTx","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","addressNList","getRepeatedField","undefined","showDisplay","getBooleanField","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","values","isDelimited","readPackedUint32","readUint32","i","length","addAddressN","value","readBool","setShowDisplay","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","getAddressNList","writeRepeatedUint32","getField","writeBool","setAddressNList","setField","opt_index","addToRepeatedField","clearAddressNList","getShowDisplay","getBooleanFieldWithDefault","clearShowDisplay","hasShowDisplay","address","readString","setAddress","writeString","getAddress","getFieldWithDefault","clearAddress","hasAddress","publicKey","getPublicKey_asB64","readBytes","setPublicKey","writeBytes","getPublicKey","bytesAsB64","getPublicKey_asU8","bytesAsU8","clearPublicKey","hasPublicKey","msgCount","accountNumber","chainId","memo","sequence","source","setMsgCount","readSint64String","setAccountNumber","setChainId","setMemo","setSequence","setSource","writeUint32","writeSint64String","getMsgCount","clearMsgCount","hasMsgCount","getAccountNumber","clearAccountNumber","hasAccountNumber","getChainId","clearChainId","hasChainId","getMemo","clearMemo","hasMemo","getSequence","clearSequence","hasSequence","getSource","clearSource","hasSource","inputsList","toObjectList","getInputsList","outputsList","getOutputsList","readMessage","addInputs","addOutputs","writeRepeatedMessage","coinsList","getCoinsList","addressType","exchangeType","getExchangeType","ExchangeType","addCoins","readEnum","setAddressType","setExchangeType","writeEnum","writeMessage","getRepeatedWrapperField","setCoinsList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearCoinsList","getAddressType","clearAddressType","hasAddressType","getWrapperField","setWrapperField","clearExchangeType","hasExchangeType","amount","denom","setAmount","setDenom","getAmount","clearAmount","hasAmount","getDenom","clearDenom","hasDenom","setInputsList","clearInputsList","setOutputsList","clearOutputsList","id","ordertype","price","quantity","sender","side","symbol","timeinforce","setId","setOrdertype","setPrice","setQuantity","setSender","setSide","setSymbol","setTimeinforce","BinanceOrderType","OT_UNKNOWN","MARKET","LIMIT","OT_RESERVED","BinanceOrderSide","SIDE_UNKNOWN","BUY","SELL","BinanceTimeInForce","TIF_UNKNOWN","GTE","TIF_RESERVED","IOC","getId","clearId","hasId","getOrdertype","clearOrdertype","hasOrdertype","getPrice","clearPrice","hasPrice","getQuantity","clearQuantity","hasQuantity","getSender","clearSender","hasSender","getSide","clearSide","hasSide","getSymbol","clearSymbol","hasSymbol","getTimeinforce","clearTimeinforce","hasTimeinforce","refid","setRefid","getRefid","clearRefid","hasRefid","signature","getSignature_asB64","setSignature","getSignature","getSignature_asU8","clearSignature","hasSignature","exports"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGF,IAAX;;AACA,IAAIG,MAAM,GAAI,YAAU;AAAE,SAAO,IAAP;AAAa,CAA1B,CAA4BC,IAA5B,CAAiC,IAAjC,CAAb;;AAEA,IAAIC,QAAQ,GAAGJ,OAAO,CAAC,eAAD,CAAtB;;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BH,QAA1B;AACAH,IAAI,CAACO,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgDN,MAAhD;AACAD,IAAI,CAACO,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDN,MAAlD;AACAD,IAAI,CAACO,YAAL,CAAkB,yBAAlB,EAA6C,IAA7C,EAAmDN,MAAnD;AACAD,IAAI,CAACO,YAAL,CAAkB,2BAAlB,EAA+C,IAA/C,EAAqDN,MAArD;AACAD,IAAI,CAACO,YAAL,CAAkB,uBAAlB,EAA2C,IAA3C,EAAiDN,MAAjD;AACAD,IAAI,CAACO,YAAL,CAAkB,wCAAlB,EAA4D,IAA5D,EAAkEN,MAAlE;AACAD,IAAI,CAACO,YAAL,CAAkB,wCAAlB,EAA4D,IAA5D,EAAkEN,MAAlE;AACAD,IAAI,CAACO,YAAL,CAAkB,0CAAlB,EAA8D,IAA9D,EAAoEN,MAApE;AACAD,IAAI,CAACO,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDN,MAAlD;AACAD,IAAI,CAACO,YAAL,CAAkB,qBAAlB,EAAyC,IAAzC,EAA+CN,MAA/C;AACAD,IAAI,CAACO,YAAL,CAAkB,uBAAlB,EAA2C,IAA3C,EAAiDN,MAAjD;AACAD,IAAI,CAACO,YAAL,CAAkB,0BAAlB,EAA8C,IAA9C,EAAoDN,MAApD;AACAD,IAAI,CAACO,YAAL,CAAkB,sCAAlB,EAA0D,IAA1D,EAAgEN,MAAhE;AACAD,IAAI,CAACO,YAAL,CAAkB,6CAAlB,EAAiE,IAAjE,EAAuEN,MAAvE;AACAD,IAAI,CAACO,YAAL,CAAkB,wBAAlB,EAA4C,IAA5C,EAAkDN,MAAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAK,KAAK,CAACE,iBAAN,GAA0B,UAASC,QAAT,EAAmB;AAC3CX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CH,KAAK,CAACE,iBAAN,CAAwBI,eAAvE,EAAwF,IAAxF;AACD,CAFD;;AAGAZ,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACE,iBAApB,EAAuCV,IAAI,CAACY,OAA5C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACE,iBAAN,CAAwBQ,WAAxB,GAAsC,yBAAtC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACW,cAAN,GAAuB,UAASR,QAAT,EAAmB;AACxCX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACW,cAApB,EAAoCnB,IAAI,CAACY,OAAzC;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACW,cAAN,CAAqBD,WAArB,GAAmC,sBAAnC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACY,mBAAN,GAA4B,UAAST,QAAT,EAAmB;AAC7CX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CH,KAAK,CAACY,mBAAN,CAA0BN,eAAzE,EAA0F,IAA1F;AACD,CAFD;;AAGAZ,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACY,mBAApB,EAAyCpB,IAAI,CAACY,OAA9C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACY,mBAAN,CAA0BF,WAA1B,GAAwC,2BAAxC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACa,gBAAN,GAAyB,UAASV,QAAT,EAAmB;AAC1CX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACa,gBAApB,EAAsCrB,IAAI,CAACY,OAA3C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACa,gBAAN,CAAuBH,WAAvB,GAAqC,wBAArC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACc,aAAN,GAAsB,UAASX,QAAT,EAAmB;AACvCX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CH,KAAK,CAACc,aAAN,CAAoBR,eAAnE,EAAoF,IAApF;AACD,CAFD;;AAGAZ,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACc,aAApB,EAAmCtB,IAAI,CAACY,OAAxC;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACc,aAAN,CAAoBJ,WAApB,GAAkC,qBAAlC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACe,gBAAN,GAAyB,UAASZ,QAAT,EAAmB;AAC1CX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACe,gBAApB,EAAsCvB,IAAI,CAACY,OAA3C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACe,gBAAN,CAAuBL,WAAvB,GAAqC,wBAArC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACgB,kBAAN,GAA2B,UAASb,QAAT,EAAmB;AAC5CX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CH,KAAK,CAACgB,kBAAN,CAAyBV,eAAxE,EAAyF,IAAzF;AACD,CAFD;;AAGAZ,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACgB,kBAApB,EAAwCxB,IAAI,CAACY,OAA7C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACgB,kBAAN,CAAyBN,WAAzB,GAAuC,0BAAvC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,GAA8C,UAASd,QAAT,EAAmB;AAC/DX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CH,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CX,eAA3F,EAA4G,IAA5G;AACD,CAFD;;AAGAZ,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACgB,kBAAN,CAAyBC,kBAAvC,EAA2DzB,IAAI,CAACY,OAAhE;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CP,WAA5C,GAA0D,6CAA1D;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,GAAuC,UAASf,QAAT,EAAmB;AACxDX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACgB,kBAAN,CAAyBE,WAAvC,EAAoD1B,IAAI,CAACY,OAAzD;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCR,WAArC,GAAmD,sCAAnD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACmB,eAAN,GAAwB,UAAShB,QAAT,EAAmB;AACzCX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACmB,eAApB,EAAqC3B,IAAI,CAACY,OAA1C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACmB,eAAN,CAAsBT,WAAtB,GAAoC,uBAApC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACoB,gBAAN,GAAyB,UAASjB,QAAT,EAAmB;AAC1CX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACoB,gBAApB,EAAsC5B,IAAI,CAACY,OAA3C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACoB,gBAAN,CAAuBV,WAAvB,GAAqC,wBAArC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACqB,eAAN,GAAwB,UAASlB,QAAT,EAAmB;AACzCX,EAAAA,IAAI,CAACY,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAT,IAAI,CAACa,QAAL,CAAcP,KAAK,CAACqB,eAApB,EAAqC7B,IAAI,CAACY,OAA1C;;AACA,IAAIV,IAAI,CAACc,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACET,EAAAA,KAAK,CAACqB,eAAN,CAAsBX,WAAtB,GAAoC,uBAApC;AACD;AAED;AACA;AACA;AACA;AACA;;;AACAV,KAAK,CAACE,iBAAN,CAAwBI,eAAxB,GAA0C,CAAC,CAAD,CAA1C;;AAIA,IAAId,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkCC,QAAlC,GAA6C,UAASC,mBAAT,EAA8B;AACzE,WAAOzB,KAAK,CAACE,iBAAN,CAAwBsB,QAAxB,CAAiCC,mBAAjC,EAAsD,IAAtD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACE,iBAAN,CAAwBsB,QAAxB,GAAmC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAChE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,YAAY,EAAE,CAACF,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa2B,gBAAb,CAA8BJ,GAA9B,EAAmC,CAAnC,CAAL,KAA+C,IAA/C,GAAsDK,SAAtD,GAAkEJ,CADrE;AAEXK,MAAAA,WAAW,EAAE,CAACL,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa8B,eAAb,CAA6BP,GAA7B,EAAkC,CAAlC,CAAL,KAA8C,IAA9C,GAAqDK,SAArD,GAAiEJ;AAFnE,KAAb;;AAKA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACE,iBAAN,CAAwBkC,iBAAxB,GAA4C,UAASC,KAAT,EAAgB;AAC1D,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACE,iBAAV,EAAV;AACA,SAAOF,KAAK,CAACE,iBAAN,CAAwBsC,2BAAxB,CAAoDb,GAApD,EAAyDW,MAAzD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACE,iBAAN,CAAwBsC,2BAAxB,GAAsD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AAC1E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,MAAM,GAAkCP,MAAM,CAACQ,WAAP,KAAuBR,MAAM,CAACS,gBAAP,EAAvB,GAAmD,CAACT,MAAM,CAACU,UAAP,EAAD,CAA/F;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCtB,UAAAA,GAAG,CAACwB,WAAJ,CAAgBN,MAAM,CAACI,CAAD,CAAtB;AACD;;AACD;;AACF,WAAK,CAAL;AACE,YAAIG,KAAK,GAA2Bd,MAAM,CAACe,QAAP,EAApC;AACA1B,QAAAA,GAAG,CAAC2B,cAAJ,CAAmBF,KAAnB;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAbF;AAeD;;AACD,SAAO5B,GAAP;AACD,CAvBD;AA0BA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkCiC,eAAlC,GAAoD,YAAW;AAC7D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACE,iBAAN,CAAwByD,uBAAxB,CAAgD,IAAhD,EAAsDF,MAAtD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACE,iBAAN,CAAwByD,uBAAxB,GAAkD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC1E,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAAGiC,OAAO,CAACC,eAAR,EAAJ;;AACA,MAAIlC,CAAC,CAACsB,MAAF,GAAW,CAAf,EAAkB;AAChBO,IAAAA,MAAM,CAACM,mBAAP,CACE,CADF,EAEEnC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA2BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA5B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACQ,SAAP,CACE,CADF,EAEErC,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkCuC,eAAlC,GAAoD,YAAW;AAC7D,SAAsCtE,IAAI,CAACY,OAAL,CAAa2B,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACA/B,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkC2C,eAAlC,GAAoD,UAASd,KAAT,EAAgB;AAClE,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAAK,IAAI,EAAxC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACApD,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkC4B,WAAlC,GAAgD,UAASC,KAAT,EAAgBgB,SAAhB,EAA2B;AACzE,SAAO5E,IAAI,CAACY,OAAL,CAAaiE,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyCjB,KAAzC,EAAgDgB,SAAhD,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApE,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkC+C,iBAAlC,GAAsD,YAAW;AAC/D,SAAO,KAAKJ,eAAL,CAAqB,EAArB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAlE,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkCgD,cAAlC,GAAmD,YAAW;AAC5D,SAA+B/E,IAAI,CAACY,OAAL,CAAaoE,0BAAb,CAAwC,IAAxC,EAA8C,CAA9C,EAAiD,KAAjD,CAA/B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxE,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkC+B,cAAlC,GAAmD,UAASF,KAAT,EAAgB;AACjE,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkCkD,gBAAlC,GAAqD,YAAW;AAC9D,SAAOjF,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACE,iBAAN,CAAwBqB,SAAxB,CAAkCmD,cAAlC,GAAmD,YAAW;AAC5D,SAAOlF,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAIxE,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACW,cAAN,CAAqBY,SAArB,CAA+BC,QAA/B,GAA0C,UAASC,mBAAT,EAA8B;AACtE,WAAOzB,KAAK,CAACW,cAAN,CAAqBa,QAArB,CAA8BC,mBAA9B,EAAmD,IAAnD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACW,cAAN,CAAqBa,QAArB,GAAgC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX8C,MAAAA,OAAO,EAAE,CAAC/C,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ;AADxD,KAAb;;AAIA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACW,cAAN,CAAqByB,iBAArB,GAAyC,UAASC,KAAT,EAAgB;AACvD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACW,cAAV,EAAV;AACA,SAAOX,KAAK,CAACW,cAAN,CAAqB6B,2BAArB,CAAiDb,GAAjD,EAAsDW,MAAtD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACW,cAAN,CAAqB6B,2BAArB,GAAmD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACvE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACkD,UAAJ,CAAezB,KAAf;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAPF;AASD;;AACD,SAAO5B,GAAP;AACD,CAjBD;AAoBA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACW,cAAN,CAAqBY,SAArB,CAA+BiC,eAA/B,GAAiD,YAAW;AAC1D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACW,cAAN,CAAqBgD,uBAArB,CAA6C,IAA7C,EAAmDF,MAAnD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACW,cAAN,CAAqBgD,uBAArB,GAA+C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvE,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;AACF,CATD;AAYA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACW,cAAN,CAAqBY,SAArB,CAA+BwD,UAA/B,GAA4C,YAAW;AACrD,SAA8BvF,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACW,cAAN,CAAqBY,SAArB,CAA+BsD,UAA/B,GAA4C,UAASzB,KAAT,EAAgB;AAC1D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACW,cAAN,CAAqBY,SAArB,CAA+B0D,YAA/B,GAA8C,YAAW;AACvD,SAAOzF,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACW,cAAN,CAAqBY,SAArB,CAA+B2D,UAA/B,GAA4C,YAAW;AACrD,SAAO1F,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAMA;AACA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACY,mBAAN,CAA0BN,eAA1B,GAA4C,CAAC,CAAD,CAA5C;;AAIA,IAAId,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoCC,QAApC,GAA+C,UAASC,mBAAT,EAA8B;AAC3E,WAAOzB,KAAK,CAACY,mBAAN,CAA0BY,QAA1B,CAAmCC,mBAAnC,EAAwD,IAAxD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACY,mBAAN,CAA0BY,QAA1B,GAAqC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAClE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,YAAY,EAAE,CAACF,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa2B,gBAAb,CAA8BJ,GAA9B,EAAmC,CAAnC,CAAL,KAA+C,IAA/C,GAAsDK,SAAtD,GAAkEJ,CADrE;AAEXK,MAAAA,WAAW,EAAE,CAACL,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa8B,eAAb,CAA6BP,GAA7B,EAAkC,CAAlC,CAAL,KAA8C,IAA9C,GAAqDK,SAArD,GAAiEJ;AAFnE,KAAb;;AAKA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACY,mBAAN,CAA0BwB,iBAA1B,GAA8C,UAASC,KAAT,EAAgB;AAC5D,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACY,mBAAV,EAAV;AACA,SAAOZ,KAAK,CAACY,mBAAN,CAA0B4B,2BAA1B,CAAsDb,GAAtD,EAA2DW,MAA3D,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACY,mBAAN,CAA0B4B,2BAA1B,GAAwD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AAC5E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,MAAM,GAAkCP,MAAM,CAACQ,WAAP,KAAuBR,MAAM,CAACS,gBAAP,EAAvB,GAAmD,CAACT,MAAM,CAACU,UAAP,EAAD,CAA/F;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCtB,UAAAA,GAAG,CAACwB,WAAJ,CAAgBN,MAAM,CAACI,CAAD,CAAtB;AACD;;AACD;;AACF,WAAK,CAAL;AACE,YAAIG,KAAK,GAA2Bd,MAAM,CAACe,QAAP,EAApC;AACA1B,QAAAA,GAAG,CAAC2B,cAAJ,CAAmBF,KAAnB;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAbF;AAeD;;AACD,SAAO5B,GAAP;AACD,CAvBD;AA0BA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoCiC,eAApC,GAAsD,YAAW;AAC/D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACY,mBAAN,CAA0B+C,uBAA1B,CAAkD,IAAlD,EAAwDF,MAAxD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACY,mBAAN,CAA0B+C,uBAA1B,GAAoD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC5E,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAAGiC,OAAO,CAACC,eAAR,EAAJ;;AACA,MAAIlC,CAAC,CAACsB,MAAF,GAAW,CAAf,EAAkB;AAChBO,IAAAA,MAAM,CAACM,mBAAP,CACE,CADF,EAEEnC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA2BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA5B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACQ,SAAP,CACE,CADF,EAEErC,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoCuC,eAApC,GAAsD,YAAW;AAC/D,SAAsCtE,IAAI,CAACY,OAAL,CAAa2B,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACA/B,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoC2C,eAApC,GAAsD,UAASd,KAAT,EAAgB;AACpE,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAAK,IAAI,EAAxC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACApD,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoC4B,WAApC,GAAkD,UAASC,KAAT,EAAgBgB,SAAhB,EAA2B;AAC3E,SAAO5E,IAAI,CAACY,OAAL,CAAaiE,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyCjB,KAAzC,EAAgDgB,SAAhD,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApE,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoC+C,iBAApC,GAAwD,YAAW;AACjE,SAAO,KAAKJ,eAAL,CAAqB,EAArB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAlE,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoCgD,cAApC,GAAqD,YAAW;AAC9D,SAA+B/E,IAAI,CAACY,OAAL,CAAaoE,0BAAb,CAAwC,IAAxC,EAA8C,CAA9C,EAAiD,KAAjD,CAA/B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxE,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoC+B,cAApC,GAAqD,UAASF,KAAT,EAAgB;AACnE,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoCkD,gBAApC,GAAuD,YAAW;AAChE,SAAOjF,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACY,mBAAN,CAA0BW,SAA1B,CAAoCmD,cAApC,GAAqD,YAAW;AAC9D,SAAOlF,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAIxE,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOzB,KAAK,CAACa,gBAAN,CAAuBW,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACa,gBAAN,CAAuBW,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXsD,MAAAA,SAAS,EAAExD,GAAG,CAACyD,kBAAJ;AADA,KAAb;;AAIA,QAAI1D,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACa,gBAAN,CAAuBuB,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACa,gBAAV,EAAV;AACA,SAAOb,KAAK,CAACa,gBAAN,CAAuB2B,2BAAvB,CAAmDb,GAAnD,EAAwDW,MAAxD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACa,gBAAN,CAAuB2B,2BAAvB,GAAqD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA+Bd,MAAM,CAAC+C,SAAP,EAAxC;AACA1D,QAAAA,GAAG,CAAC2D,YAAJ,CAAiBlC,KAAjB;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAPF;AASD;;AACD,SAAO5B,GAAP;AACD,CAjBD;AAoBA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiCiC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACa,gBAAN,CAAuB8C,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACa,gBAAN,CAAuB8C,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAAwCpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAAzC;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAAC8B,UAAP,CACE,CADF,EAEE3D,CAFF;AAID;AACF,CATD;AAYA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiCiE,YAAjC,GAAgD,YAAW;AACzD,SAA4ChG,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiC6D,kBAAjC,GAAsD,YAAW;AAC/D,SAA8B5F,IAAI,CAACY,OAAL,CAAaqF,UAAb,CAC1B,KAAKD,YAAL,EAD0B,CAA9B;AAED,CAHD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAxF,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiCmE,iBAAjC,GAAqD,YAAW;AAC9D,SAAmClG,IAAI,CAACY,OAAL,CAAauF,SAAb,CAC/B,KAAKH,YAAL,EAD+B,CAAnC;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAxF,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiC+D,YAAjC,GAAgD,UAASlC,KAAT,EAAgB;AAC9D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiCqE,cAAjC,GAAkD,YAAW;AAC3D,SAAOpG,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACa,gBAAN,CAAuBU,SAAvB,CAAiCsE,YAAjC,GAAgD,YAAW;AACzD,SAAOrG,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAMA;AACA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACc,aAAN,CAAoBR,eAApB,GAAsC,CAAC,CAAD,CAAtC;;AAIA,IAAId,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BC,QAA9B,GAAyC,UAASC,mBAAT,EAA8B;AACrE,WAAOzB,KAAK,CAACc,aAAN,CAAoBU,QAApB,CAA6BC,mBAA7B,EAAkD,IAAlD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACc,aAAN,CAAoBU,QAApB,GAA+B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC5D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,YAAY,EAAE,CAACF,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa2B,gBAAb,CAA8BJ,GAA9B,EAAmC,CAAnC,CAAL,KAA+C,IAA/C,GAAsDK,SAAtD,GAAkEJ,CADrE;AAEXkE,MAAAA,QAAQ,EAAE,CAAClE,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAFzD;AAGXmE,MAAAA,aAAa,EAAE,CAACnE,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAH9D;AAIXoE,MAAAA,OAAO,EAAE,CAACpE,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAJxD;AAKXqE,MAAAA,IAAI,EAAE,CAACrE,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CALrD;AAMXsE,MAAAA,QAAQ,EAAE,CAACtE,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CANzD;AAOXuE,MAAAA,MAAM,EAAE,CAACvE,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ;AAPvD,KAAb;;AAUA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAfD;AAgBC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACc,aAAN,CAAoBsB,iBAApB,GAAwC,UAASC,KAAT,EAAgB;AACtD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACc,aAAV,EAAV;AACA,SAAOd,KAAK,CAACc,aAAN,CAAoB0B,2BAApB,CAAgDb,GAAhD,EAAqDW,MAArD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACc,aAAN,CAAoB0B,2BAApB,GAAkD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACtE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,MAAM,GAAkCP,MAAM,CAACQ,WAAP,KAAuBR,MAAM,CAACS,gBAAP,EAAvB,GAAmD,CAACT,MAAM,CAACU,UAAP,EAAD,CAA/F;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCtB,UAAAA,GAAG,CAACwB,WAAJ,CAAgBN,MAAM,CAACI,CAAD,CAAtB;AACD;;AACD;;AACF,WAAK,CAAL;AACE,YAAIG,KAAK,GAA0Bd,MAAM,CAACU,UAAP,EAAnC;AACArB,QAAAA,GAAG,CAACyE,WAAJ,CAAgBhD,KAAhB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAAC+D,gBAAP,EAAnC;AACA1E,QAAAA,GAAG,CAAC2E,gBAAJ,CAAqBlD,KAArB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAAC4E,UAAJ,CAAenD,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAAC6E,OAAJ,CAAYpD,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAAC+D,gBAAP,EAAnC;AACA1E,QAAAA,GAAG,CAAC8E,WAAJ,CAAgBrD,KAAhB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAAC+D,gBAAP,EAAnC;AACA1E,QAAAA,GAAG,CAAC+E,SAAJ,CAActD,KAAd;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAjCF;AAmCD;;AACD,SAAO5B,GAAP;AACD,CA3CD;AA8CA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BiC,eAA9B,GAAgD,YAAW;AACzD,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACc,aAAN,CAAoB6C,uBAApB,CAA4C,IAA5C,EAAkDF,MAAlD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACc,aAAN,CAAoB6C,uBAApB,GAA8C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACtE,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAAGiC,OAAO,CAACC,eAAR,EAAJ;;AACA,MAAIlC,CAAC,CAACsB,MAAF,GAAW,CAAf,EAAkB;AAChBO,IAAAA,MAAM,CAACM,mBAAP,CACE,CADF,EAEEnC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACkD,WAAP,CACE,CADF,EAEE/E,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACmD,iBAAP,CACE,CADF,EAEEhF,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACmD,iBAAP,CACE,CADF,EAEEhF,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACmD,iBAAP,CACE,CADF,EAEEhF,CAFF;AAID;AACF,CAnDD;AAsDA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BuC,eAA9B,GAAgD,YAAW;AACzD,SAAsCtE,IAAI,CAACY,OAAL,CAAa2B,gBAAb,CAA8B,IAA9B,EAAoC,CAApC,CAAtC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACA/B,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B2C,eAA9B,GAAgD,UAASd,KAAT,EAAgB;AAC9D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAAK,IAAI,EAAxC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B4B,WAA9B,GAA4C,UAASC,KAAT,EAAgBgB,SAAhB,EAA2B;AACrE,SAAO5E,IAAI,CAACY,OAAL,CAAaiE,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyCjB,KAAzC,EAAgDgB,SAAhD,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B+C,iBAA9B,GAAkD,YAAW;AAC3D,SAAO,KAAKJ,eAAL,CAAqB,EAArB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAlE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BsF,WAA9B,GAA4C,YAAW;AACrD,SAA8BrH,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B6E,WAA9B,GAA4C,UAAShD,KAAT,EAAgB;AAC1D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BuF,aAA9B,GAA8C,YAAW;AACvD,SAAOtH,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BwF,WAA9B,GAA4C,YAAW;AACrD,SAAOvH,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8ByF,gBAA9B,GAAiD,YAAW;AAC1D,SAA8BxH,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,GAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B+E,gBAA9B,GAAiD,UAASlD,KAAT,EAAgB;AAC/D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B0F,kBAA9B,GAAmD,YAAW;AAC5D,SAAOzH,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B2F,gBAA9B,GAAiD,YAAW;AAC1D,SAAO1H,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B4F,UAA9B,GAA2C,YAAW;AACpD,SAA8B3H,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BgF,UAA9B,GAA2C,UAASnD,KAAT,EAAgB;AACzD,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B6F,YAA9B,GAA6C,YAAW;AACtD,SAAO5H,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B8F,UAA9B,GAA2C,YAAW;AACpD,SAAO7H,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8B+F,OAA9B,GAAwC,YAAW;AACjD,SAA8B9H,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BiF,OAA9B,GAAwC,UAASpD,KAAT,EAAgB;AACtD,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BgG,SAA9B,GAA0C,YAAW;AACnD,SAAO/H,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BiG,OAA9B,GAAwC,YAAW;AACjD,SAAOhI,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BkG,WAA9B,GAA4C,YAAW;AACrD,SAA8BjI,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,GAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BkF,WAA9B,GAA4C,UAASrD,KAAT,EAAgB;AAC1D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BmG,aAA9B,GAA8C,YAAW;AACvD,SAAOlI,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BoG,WAA9B,GAA4C,YAAW;AACrD,SAAOnI,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BqG,SAA9B,GAA0C,YAAW;AACnD,SAA8BpI,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,GAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BmF,SAA9B,GAA0C,UAAStD,KAAT,EAAgB;AACxD,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BsG,WAA9B,GAA4C,YAAW;AACrD,SAAOrI,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACc,aAAN,CAAoBS,SAApB,CAA8BuG,SAA9B,GAA0C,YAAW;AACnD,SAAOtI,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAIxE,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACe,gBAAN,CAAuBQ,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOzB,KAAK,CAACe,gBAAN,CAAuBS,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACe,gBAAN,CAAuBS,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG,EAAb;;AAIA,QAAIH,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACe,gBAAN,CAAuBqB,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACe,gBAAV,EAAV;AACA,SAAOf,KAAK,CAACe,gBAAN,CAAuByB,2BAAvB,CAAmDb,GAAnD,EAAwDW,MAAxD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACe,gBAAN,CAAuByB,2BAAvB,GAAqD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA;AACEL,QAAAA,MAAM,CAACiB,SAAP;AACA;AAHF;AAKD;;AACD,SAAO5B,GAAP;AACD,CAbD;AAgBA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACe,gBAAN,CAAuBQ,SAAvB,CAAiCiC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACe,gBAAN,CAAuB4C,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACe,gBAAN,CAAuB4C,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAI7B,CAAC,GAAGI,SAAR;AACD,CAFD;AAMA;AACA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACgB,kBAAN,CAAyBV,eAAzB,GAA2C,CAAC,CAAD,EAAG,CAAH,CAA3C;;AAIA,IAAId,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmCC,QAAnC,GAA8C,UAASC,mBAAT,EAA8B;AAC1E,WAAOzB,KAAK,CAACgB,kBAAN,CAAyBQ,QAAzB,CAAkCC,mBAAlC,EAAuD,IAAvD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACgB,kBAAN,CAAyBQ,QAAzB,GAAoC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACjE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXkG,MAAAA,UAAU,EAAEvI,IAAI,CAACY,OAAL,CAAa4H,YAAb,CAA0BrG,GAAG,CAACsG,aAAJ,EAA1B,EACZjI,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CO,QADhC,EAC0CE,eAD1C,CADD;AAGXwG,MAAAA,WAAW,EAAE1I,IAAI,CAACY,OAAL,CAAa4H,YAAb,CAA0BrG,GAAG,CAACwG,cAAJ,EAA1B,EACbnI,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CO,QAD/B,EACyCE,eADzC;AAHF,KAAb;;AAOA,QAAIA,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAZD;AAaC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACgB,kBAAN,CAAyBoB,iBAAzB,GAA6C,UAASC,KAAT,EAAgB;AAC3D,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACgB,kBAAV,EAAV;AACA,SAAOhB,KAAK,CAACgB,kBAAN,CAAyBwB,2BAAzB,CAAqDb,GAArD,EAA0DW,MAA1D,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACgB,kBAAN,CAAyBwB,2BAAzB,GAAuD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AAC3E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAAG,IAAIpD,KAAK,CAACgB,kBAAN,CAAyBC,kBAA7B,EAAZ;AACAqB,QAAAA,MAAM,CAAC8F,WAAP,CAAmBhF,KAAnB,EAAyBpD,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CuB,2BAArE;AACAb,QAAAA,GAAG,CAAC0G,SAAJ,CAAcjF,KAAd;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAIpD,KAAK,CAACgB,kBAAN,CAAyBC,kBAA7B,EAAZ;AACAqB,QAAAA,MAAM,CAAC8F,WAAP,CAAmBhF,KAAnB,EAAyBpD,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CuB,2BAArE;AACAb,QAAAA,GAAG,CAAC2G,UAAJ,CAAelF,KAAf;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAbF;AAeD;;AACD,SAAO5B,GAAP;AACD,CAvBD;AA0BA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmCiC,eAAnC,GAAqD,YAAW;AAC9D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACgB,kBAAN,CAAyB2C,uBAAzB,CAAiD,IAAjD,EAAuDF,MAAvD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACgB,kBAAN,CAAyB2C,uBAAzB,GAAmD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC3E,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAAGiC,OAAO,CAACoE,aAAR,EAAJ;;AACA,MAAIrG,CAAC,CAACsB,MAAF,GAAW,CAAf,EAAkB;AAChBO,IAAAA,MAAM,CAAC8E,oBAAP,CACE,CADF,EAEE3G,CAFF,EAGE5B,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4C0C,uBAH9C;AAKD;;AACD/B,EAAAA,CAAC,GAAGiC,OAAO,CAACsE,cAAR,EAAJ;;AACA,MAAIvG,CAAC,CAACsB,MAAF,GAAW,CAAf,EAAkB;AAChBO,IAAAA,MAAM,CAAC8E,oBAAP,CACE,CADF,EAEE3G,CAFF,EAGE5B,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4C0C,uBAH9C;AAKD;AACF,CAlBD;AAsBA;AACA;AACA;AACA;AACA;;;AACA3D,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CX,eAA5C,GAA8D,CAAC,CAAD,CAA9D;;AAIA,IAAId,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDC,QAAtD,GAAiE,UAASC,mBAAT,EAA8B;AAC7F,WAAOzB,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CO,QAA5C,CAAqDC,mBAArD,EAA0E,IAA1E,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CO,QAA5C,GAAuD,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACpF,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX8C,MAAAA,OAAO,EAAE,CAAC/C,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CADxD;AAEX4G,MAAAA,SAAS,EAAEhJ,IAAI,CAACY,OAAL,CAAa4H,YAAb,CAA0BrG,GAAG,CAAC8G,YAAJ,EAA1B,EACXzI,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCM,QAD1B,EACoCE,eADpC,CAFA;AAIXgH,MAAAA,WAAW,EAAE,CAAC9G,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAJ5D;AAKX+G,MAAAA,YAAY,EAAE,CAAC/G,CAAC,GAAGD,GAAG,CAACiH,eAAJ,EAAL,KAA+B/I,QAAQ,CAACgJ,YAAT,CAAsBrH,QAAtB,CAA+BE,eAA/B,EAAgDE,CAAhD;AALlC,KAAb;;AAQA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAbD;AAcC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CmB,iBAA5C,GAAgE,UAASC,KAAT,EAAgB;AAC9E,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACgB,kBAAN,CAAyBC,kBAA7B,EAAV;AACA,SAAOjB,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CuB,2BAA5C,CAAwEb,GAAxE,EAA6EW,MAA7E,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CuB,2BAA5C,GAA0E,UAASb,GAAT,EAAcW,MAAd,EAAsB;AAC9F,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACkD,UAAJ,CAAezB,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAIpD,KAAK,CAACgB,kBAAN,CAAyBE,WAA7B,EAAZ;AACAoB,QAAAA,MAAM,CAAC8F,WAAP,CAAmBhF,KAAnB,EAAyBpD,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCsB,2BAA9D;AACAb,QAAAA,GAAG,CAACmH,QAAJ,CAAa1F,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA4Cd,MAAM,CAACyG,QAAP,EAArD;AACApH,QAAAA,GAAG,CAACqH,cAAJ,CAAmB5F,KAAnB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAIvD,QAAQ,CAACgJ,YAAb,EAAZ;AACAvG,QAAAA,MAAM,CAAC8F,WAAP,CAAmBhF,KAAnB,EAAyBvD,QAAQ,CAACgJ,YAAT,CAAsBrG,2BAA/C;AACAb,QAAAA,GAAG,CAACsH,eAAJ,CAAoB7F,KAApB;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AArBF;AAuBD;;AACD,SAAO5B,GAAP;AACD,CA/BD;AAkCA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDiC,eAAtD,GAAwE,YAAW;AACjF,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4C0C,uBAA5C,CAAoE,IAApE,EAA0EF,MAA1E;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4C0C,uBAA5C,GAAsE,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC9F,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiC,OAAO,CAAC4E,YAAR,EAAJ;;AACA,MAAI7G,CAAC,CAACsB,MAAF,GAAW,CAAf,EAAkB;AAChBO,IAAAA,MAAM,CAAC8E,oBAAP,CACE,CADF,EAEE3G,CAFF,EAGE5B,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCyC,uBAHvC;AAKD;;AACD/B,EAAAA,CAAC,GAA4CpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA7C;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACyF,SAAP,CACE,CADF,EAEEtH,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGiC,OAAO,CAAC+E,eAAR,EAAJ;;AACA,MAAIhH,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAAC0F,YAAP,CACE,CADF,EAEEvH,CAFF,EAGE/B,QAAQ,CAACgJ,YAAT,CAAsBlF,uBAHxB;AAKD;AACF,CAhCD;AAmCA;AACA;AACA;AACA;;;AACA3D,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDwD,UAAtD,GAAmE,YAAW;AAC5E,SAA8BvF,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDsD,UAAtD,GAAmE,UAASzB,KAAT,EAAgB;AACjF,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsD0D,YAAtD,GAAqE,YAAW;AAC9E,SAAOzF,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsD2D,UAAtD,GAAmE,YAAW;AAC5E,SAAO1F,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDkH,YAAtD,GAAqE,YAAW;AAC9E,SACEjJ,IAAI,CAACY,OAAL,CAAagJ,uBAAb,CAAqC,IAArC,EAA2CpJ,KAAK,CAACgB,kBAAN,CAAyBE,WAApE,EAAiF,CAAjF,CADF;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAlB,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsD8H,YAAtD,GAAqE,UAASjG,KAAT,EAAgB;AACnF,SAAO5D,IAAI,CAACY,OAAL,CAAakJ,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8ClG,KAA9C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDuH,QAAtD,GAAiE,UAASS,SAAT,EAAoBnF,SAApB,EAA+B;AAC9F,SAAO5E,IAAI,CAACY,OAAL,CAAaoJ,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2DvJ,KAAK,CAACgB,kBAAN,CAAyBE,WAApF,EAAiGkD,SAAjG,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApE,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDkI,cAAtD,GAAuE,YAAW;AAChF,SAAO,KAAKJ,YAAL,CAAkB,EAAlB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArJ,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDmI,cAAtD,GAAuE,YAAW;AAChF,SAAgDlK,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAAhD;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDyH,cAAtD,GAAuE,UAAS5F,KAAT,EAAgB;AACrF,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDoI,gBAAtD,GAAyE,YAAW;AAClF,SAAOnK,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDqI,cAAtD,GAAuE,YAAW;AAChF,SAAOpK,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDqH,eAAtD,GAAwE,YAAW;AACjF,SACEpJ,IAAI,CAACY,OAAL,CAAayJ,eAAb,CAA6B,IAA7B,EAAmChK,QAAQ,CAACgJ,YAA5C,EAA0D,CAA1D,CADF;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACA7I,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsD0H,eAAtD,GAAwE,UAAS7F,KAAT,EAAgB;AACtF,SAAO5D,IAAI,CAACY,OAAL,CAAa0J,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsC1G,KAAtC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDwI,iBAAtD,GAA0E,YAAW;AACnF,SAAO,KAAKd,eAAL,CAAqBjH,SAArB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACgB,kBAAN,CAAyBC,kBAAzB,CAA4CM,SAA5C,CAAsDyI,eAAtD,GAAwE,YAAW;AACjF,SAAOxK,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAIxE,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+CC,QAA/C,GAA0D,UAASC,mBAAT,EAA8B;AACtF,WAAOzB,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCM,QAArC,CAA8CC,mBAA9C,EAAmE,IAAnE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCM,QAArC,GAAgD,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXoI,MAAAA,MAAM,EAAE,CAACrI,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CADvD;AAEXsI,MAAAA,KAAK,EAAE,CAACtI,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ;AAFtD,KAAb;;AAKA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCkB,iBAArC,GAAyD,UAASC,KAAT,EAAgB;AACvE,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACgB,kBAAN,CAAyBE,WAA7B,EAAV;AACA,SAAOlB,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCsB,2BAArC,CAAiEb,GAAjE,EAAsEW,MAAtE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCsB,2BAArC,GAAmE,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACvF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA0Bd,MAAM,CAAC+D,gBAAP,EAAnC;AACA1E,QAAAA,GAAG,CAACwI,SAAJ,CAAc/G,KAAd;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACyI,QAAJ,CAAahH,KAAb;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAXF;AAaD;;AACD,SAAO5B,GAAP;AACD,CArBD;AAwBA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+CiC,eAA/C,GAAiE,YAAW;AAC1E,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCyC,uBAArC,CAA6D,IAA7D,EAAmEF,MAAnE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCyC,uBAArC,GAA+D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvF,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACmD,iBAAP,CACE,CADF,EAEEhF,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+C8I,SAA/C,GAA2D,YAAW;AACpE,SAA8B7K,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,GAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+C4I,SAA/C,GAA2D,UAAS/G,KAAT,EAAgB;AACzE,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+C+I,WAA/C,GAA6D,YAAW;AACtE,SAAO9K,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+CgJ,SAA/C,GAA2D,YAAW;AACpE,SAAO/K,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+CiJ,QAA/C,GAA0D,YAAW;AACnE,SAA8BhL,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+C6I,QAA/C,GAA0D,UAAShH,KAAT,EAAgB;AACxE,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+CkJ,UAA/C,GAA4D,YAAW;AACrE,SAAOjL,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACgB,kBAAN,CAAyBE,WAAzB,CAAqCK,SAArC,CAA+CmJ,QAA/C,GAA0D,YAAW;AACnE,SAAOlL,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmC0G,aAAnC,GAAmD,YAAW;AAC5D,SACEzI,IAAI,CAACY,OAAL,CAAagJ,uBAAb,CAAqC,IAArC,EAA2CpJ,KAAK,CAACgB,kBAAN,CAAyBC,kBAApE,EAAwF,CAAxF,CADF;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAjB,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmCoJ,aAAnC,GAAmD,UAASvH,KAAT,EAAgB;AACjE,SAAO5D,IAAI,CAACY,OAAL,CAAakJ,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8ClG,KAA9C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmC8G,SAAnC,GAA+C,UAASkB,SAAT,EAAoBnF,SAApB,EAA+B;AAC5E,SAAO5E,IAAI,CAACY,OAAL,CAAaoJ,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2DvJ,KAAK,CAACgB,kBAAN,CAAyBC,kBAApF,EAAwGmD,SAAxG,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApE,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmCqJ,eAAnC,GAAqD,YAAW;AAC9D,SAAO,KAAKD,aAAL,CAAmB,EAAnB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACA3K,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmC4G,cAAnC,GAAoD,YAAW;AAC7D,SACE3I,IAAI,CAACY,OAAL,CAAagJ,uBAAb,CAAqC,IAArC,EAA2CpJ,KAAK,CAACgB,kBAAN,CAAyBC,kBAApE,EAAwF,CAAxF,CADF;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAjB,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmCsJ,cAAnC,GAAoD,UAASzH,KAAT,EAAgB;AAClE,SAAO5D,IAAI,CAACY,OAAL,CAAakJ,uBAAb,CAAqC,IAArC,EAA2C,CAA3C,EAA8ClG,KAA9C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACApD,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmC+G,UAAnC,GAAgD,UAASiB,SAAT,EAAoBnF,SAApB,EAA+B;AAC7E,SAAO5E,IAAI,CAACY,OAAL,CAAaoJ,yBAAb,CAAuC,IAAvC,EAA6C,CAA7C,EAAgDD,SAAhD,EAA2DvJ,KAAK,CAACgB,kBAAN,CAAyBC,kBAApF,EAAwGmD,SAAxG,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApE,KAAK,CAACgB,kBAAN,CAAyBO,SAAzB,CAAmCuJ,gBAAnC,GAAsD,YAAW;AAC/D,SAAO,KAAKD,cAAL,CAAoB,EAApB,CAAP;AACD,CAFD;;AAQA,IAAIrL,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCC,QAAhC,GAA2C,UAASC,mBAAT,EAA8B;AACvE,WAAOzB,KAAK,CAACmB,eAAN,CAAsBK,QAAtB,CAA+BC,mBAA/B,EAAoD,IAApD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACmB,eAAN,CAAsBK,QAAtB,GAAiC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC9D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXkJ,MAAAA,EAAE,EAAE,CAACnJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CADnD;AAEXoJ,MAAAA,SAAS,EAAE,CAACpJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAF1D;AAGXqJ,MAAAA,KAAK,EAAE,CAACrJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAHtD;AAIXsJ,MAAAA,QAAQ,EAAE,CAACtJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAJzD;AAKXuJ,MAAAA,MAAM,EAAE,CAACvJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CALvD;AAMXwJ,MAAAA,IAAI,EAAE,CAACxJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CANrD;AAOXyJ,MAAAA,MAAM,EAAE,CAACzJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAPvD;AAQX0J,MAAAA,WAAW,EAAE,CAAC1J,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ;AAR5D,KAAb;;AAWA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAhBD;AAiBC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACmB,eAAN,CAAsBiB,iBAAtB,GAA0C,UAASC,KAAT,EAAgB;AACxD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACmB,eAAV,EAAV;AACA,SAAOnB,KAAK,CAACmB,eAAN,CAAsBqB,2BAAtB,CAAkDb,GAAlD,EAAuDW,MAAvD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACmB,eAAN,CAAsBqB,2BAAtB,GAAoD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACxE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAAC4J,KAAJ,CAAUnI,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA2Dd,MAAM,CAACyG,QAAP,EAApE;AACApH,QAAAA,GAAG,CAAC6J,YAAJ,CAAiBpI,KAAjB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAAC+D,gBAAP,EAAnC;AACA1E,QAAAA,GAAG,CAAC8J,QAAJ,CAAarI,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAAC+D,gBAAP,EAAnC;AACA1E,QAAAA,GAAG,CAAC+J,WAAJ,CAAgBtI,KAAhB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACgK,SAAJ,CAAcvI,KAAd;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA2Dd,MAAM,CAACyG,QAAP,EAApE;AACApH,QAAAA,GAAG,CAACiK,OAAJ,CAAYxI,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACkK,SAAJ,CAAczI,KAAd;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA6Dd,MAAM,CAACyG,QAAP,EAAtE;AACApH,QAAAA,GAAG,CAACmK,cAAJ,CAAmB1I,KAAnB;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAnCF;AAqCD;;AACD,SAAO5B,GAAP;AACD,CA7CD;AAgDA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCiC,eAAhC,GAAkD,YAAW;AAC3D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACmB,eAAN,CAAsBwC,uBAAtB,CAA8C,IAA9C,EAAoDF,MAApD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACmB,eAAN,CAAsBwC,uBAAtB,GAAgD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACxE,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA2DpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA5D;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACyF,SAAP,CACE,CADF,EAEEtH,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACmD,iBAAP,CACE,CADF,EAEEhF,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACmD,iBAAP,CACE,CADF,EAEEhF,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA2DpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA5D;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACyF,SAAP,CACE,CADF,EAEEtH,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA6DpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA9D;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACyF,SAAP,CACE,CADF,EAEEtH,CAFF;AAID;AACF,CA1DD;AA6DA;AACA;AACA;;;AACA5B,KAAK,CAACmB,eAAN,CAAsB4K,gBAAtB,GAAyC;AACvCC,EAAAA,UAAU,EAAE,CAD2B;AAEvCC,EAAAA,MAAM,EAAE,CAF+B;AAGvCC,EAAAA,KAAK,EAAE,CAHgC;AAIvCC,EAAAA,WAAW,EAAE;AAJ0B,CAAzC;AAOA;AACA;AACA;;AACAnM,KAAK,CAACmB,eAAN,CAAsBiL,gBAAtB,GAAyC;AACvCC,EAAAA,YAAY,EAAE,CADyB;AAEvCC,EAAAA,GAAG,EAAE,CAFkC;AAGvCC,EAAAA,IAAI,EAAE;AAHiC,CAAzC;AAMA;AACA;AACA;;AACAvM,KAAK,CAACmB,eAAN,CAAsBqL,kBAAtB,GAA2C;AACzCC,EAAAA,WAAW,EAAE,CAD4B;AAEzCC,EAAAA,GAAG,EAAE,CAFoC;AAGzCC,EAAAA,YAAY,EAAE,CAH2B;AAIzCC,EAAAA,GAAG,EAAE;AAJoC,CAA3C;AAOA;AACA;AACA;AACA;;AACA5M,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCsL,KAAhC,GAAwC,YAAW;AACjD,SAA8BrN,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCgK,KAAhC,GAAwC,UAASnI,KAAT,EAAgB;AACtD,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCuL,OAAhC,GAA0C,YAAW;AACnD,SAAOtN,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCwL,KAAhC,GAAwC,YAAW;AACjD,SAAOvN,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCyL,YAAhC,GAA+C,YAAW;AACxD,SAA+DxN,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA/D;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCiK,YAAhC,GAA+C,UAASpI,KAAT,EAAgB;AAC7D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC0L,cAAhC,GAAiD,YAAW;AAC1D,SAAOzN,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC2L,YAAhC,GAA+C,YAAW;AACxD,SAAO1N,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC4L,QAAhC,GAA2C,YAAW;AACpD,SAA8B3N,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,GAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCkK,QAAhC,GAA2C,UAASrI,KAAT,EAAgB;AACzD,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC6L,UAAhC,GAA6C,YAAW;AACtD,SAAO5N,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC8L,QAAhC,GAA2C,YAAW;AACpD,SAAO7N,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC+L,WAAhC,GAA8C,YAAW;AACvD,SAA8B9N,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,GAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCmK,WAAhC,GAA8C,UAAStI,KAAT,EAAgB;AAC5D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCgM,aAAhC,GAAgD,YAAW;AACzD,SAAO/N,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCiM,WAAhC,GAA8C,YAAW;AACvD,SAAOhO,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCkM,SAAhC,GAA4C,YAAW;AACrD,SAA8BjO,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCoK,SAAhC,GAA4C,UAASvI,KAAT,EAAgB;AAC1D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCmM,WAAhC,GAA8C,YAAW;AACvD,SAAOlO,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCoM,SAAhC,GAA4C,YAAW;AACrD,SAAOnO,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCqM,OAAhC,GAA0C,YAAW;AACnD,SAA+DpO,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAA/D;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCqK,OAAhC,GAA0C,UAASxI,KAAT,EAAgB;AACxD,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCsM,SAAhC,GAA4C,YAAW;AACrD,SAAOrO,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCuM,OAAhC,GAA0C,YAAW;AACnD,SAAOtO,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCwM,SAAhC,GAA4C,YAAW;AACrD,SAA8BvO,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCsK,SAAhC,GAA4C,UAASzI,KAAT,EAAgB;AAC1D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCyM,WAAhC,GAA8C,YAAW;AACvD,SAAOxO,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC0M,SAAhC,GAA4C,YAAW;AACrD,SAAOzO,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC2M,cAAhC,GAAiD,YAAW;AAC1D,SAAiE1O,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CAAjE;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgCuK,cAAhC,GAAiD,UAAS1I,KAAT,EAAgB;AAC/D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC4M,gBAAhC,GAAmD,YAAW;AAC5D,SAAO3O,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACmB,eAAN,CAAsBI,SAAtB,CAAgC6M,cAAhC,GAAiD,YAAW;AAC1D,SAAO5O,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAIxE,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCC,QAAjC,GAA4C,UAASC,mBAAT,EAA8B;AACxE,WAAOzB,KAAK,CAACoB,gBAAN,CAAuBI,QAAvB,CAAgCC,mBAAhC,EAAqD,IAArD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACoB,gBAAN,CAAuBI,QAAvB,GAAkC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC/D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXwM,MAAAA,KAAK,EAAE,CAACzM,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CADtD;AAEXuJ,MAAAA,MAAM,EAAE,CAACvJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ,CAFvD;AAGXyJ,MAAAA,MAAM,EAAE,CAACzJ,CAAC,GAAGpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBrC,GAAtB,EAA2B,CAA3B,CAAL,KAAuC,IAAvC,GAA8CK,SAA9C,GAA0DJ;AAHvD,KAAb;;AAMA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACoB,gBAAN,CAAuBgB,iBAAvB,GAA2C,UAASC,KAAT,EAAgB;AACzD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACoB,gBAAV,EAAV;AACA,SAAOpB,KAAK,CAACoB,gBAAN,CAAuBoB,2BAAvB,CAAmDb,GAAnD,EAAwDW,MAAxD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACoB,gBAAN,CAAuBoB,2BAAvB,GAAqD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACzE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAAC2M,QAAJ,CAAalL,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACgK,SAAJ,CAAcvI,KAAd;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA0Bd,MAAM,CAACsC,UAAP,EAAnC;AACAjD,QAAAA,GAAG,CAACkK,SAAJ,CAAczI,KAAd;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAfF;AAiBD;;AACD,SAAO5B,GAAP;AACD,CAzBD;AA4BA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCiC,eAAjC,GAAmD,YAAW;AAC5D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACoB,gBAAN,CAAuBuC,uBAAvB,CAA+C,IAA/C,EAAqDF,MAArD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACoB,gBAAN,CAAuBuC,uBAAvB,GAAiD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACzE,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;;AACDA,EAAAA,CAAC,GAA0BpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAA3B;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEElD,CAFF;AAID;AACF,CAvBD;AA0BA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCgN,QAAjC,GAA4C,YAAW;AACrD,SAA8B/O,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiC+M,QAAjC,GAA4C,UAASlL,KAAT,EAAgB;AAC1D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCiN,UAAjC,GAA8C,YAAW;AACvD,SAAOhP,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCkN,QAAjC,GAA4C,YAAW;AACrD,SAAOjP,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCkM,SAAjC,GAA6C,YAAW;AACtD,SAA8BjO,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCoK,SAAjC,GAA6C,UAASvI,KAAT,EAAgB;AAC3D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCmM,WAAjC,GAA+C,YAAW;AACxD,SAAOlO,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCoM,SAAjC,GAA6C,YAAW;AACtD,SAAOnO,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCwM,SAAjC,GAA6C,YAAW;AACtD,SAA8BvO,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCsK,SAAjC,GAA6C,UAASzI,KAAT,EAAgB;AAC3D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiCyM,WAAjC,GAA+C,YAAW;AACxD,SAAOxO,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACoB,gBAAN,CAAuBG,SAAvB,CAAiC0M,SAAjC,GAA6C,YAAW;AACtD,SAAOzO,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAIxE,IAAI,CAACY,OAAL,CAAakB,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,EAAAA,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCC,QAAhC,GAA2C,UAASC,mBAAT,EAA8B;AACvE,WAAOzB,KAAK,CAACqB,eAAN,CAAsBG,QAAtB,CAA+BC,mBAA/B,EAAoD,IAApD,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzB,EAAAA,KAAK,CAACqB,eAAN,CAAsBG,QAAtB,GAAiC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC9D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX6M,MAAAA,SAAS,EAAE/M,GAAG,CAACgN,kBAAJ,EADA;AAEXxJ,MAAAA,SAAS,EAAExD,GAAG,CAACyD,kBAAJ;AAFA,KAAb;;AAKA,QAAI1D,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACA7B,KAAK,CAACqB,eAAN,CAAsBe,iBAAtB,GAA0C,UAASC,KAAT,EAAgB;AACxD,MAAIC,MAAM,GAAG,IAAI9C,IAAI,CAAC+C,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACqB,eAAV,EAAV;AACA,SAAOrB,KAAK,CAACqB,eAAN,CAAsBmB,2BAAtB,CAAkDb,GAAlD,EAAuDW,MAAvD,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,KAAK,CAACqB,eAAN,CAAsBmB,2BAAtB,GAAoD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACxE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIS,KAAK,GAA+Bd,MAAM,CAAC+C,SAAP,EAAxC;AACA1D,QAAAA,GAAG,CAACiN,YAAJ,CAAiBxL,KAAjB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAA+Bd,MAAM,CAAC+C,SAAP,EAAxC;AACA1D,QAAAA,GAAG,CAAC2D,YAAJ,CAAiBlC,KAAjB;AACA;;AACF;AACEd,QAAAA,MAAM,CAACiB,SAAP;AACA;AAXF;AAaD;;AACD,SAAO5B,GAAP;AACD,CArBD;AAwBA;AACA;AACA;AACA;;;AACA3B,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCiC,eAAhC,GAAkD,YAAW;AAC3D,MAAIC,MAAM,GAAG,IAAIjE,IAAI,CAACkE,YAAT,EAAb;AACA1D,EAAAA,KAAK,CAACqB,eAAN,CAAsBsC,uBAAtB,CAA8C,IAA9C,EAAoDF,MAApD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5D,KAAK,CAACqB,eAAN,CAAsBsC,uBAAtB,GAAgD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACxE,MAAI7B,CAAC,GAAGI,SAAR;AACAJ,EAAAA,CAAC,GAAwCpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAAzC;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAAC8B,UAAP,CACE,CADF,EAEE3D,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAwCpC,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsBH,OAAtB,EAA+B,CAA/B,CAAzC;;AACA,MAAIjC,CAAC,IAAI,IAAT,EAAe;AACb6B,IAAAA,MAAM,CAAC8B,UAAP,CACE,CADF,EAEE3D,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACA5B,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCsN,YAAhC,GAA+C,YAAW;AACxD,SAA4CrP,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCoN,kBAAhC,GAAqD,YAAW;AAC9D,SAA8BnP,IAAI,CAACY,OAAL,CAAaqF,UAAb,CAC1B,KAAKoJ,YAAL,EAD0B,CAA9B;AAED,CAHD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA7O,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCuN,iBAAhC,GAAoD,YAAW;AAC7D,SAAmCtP,IAAI,CAACY,OAAL,CAAauF,SAAb,CAC/B,KAAKkJ,YAAL,EAD+B,CAAnC;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACA7O,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCqN,YAAhC,GAA+C,UAASxL,KAAT,EAAgB;AAC7D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCwN,cAAhC,GAAiD,YAAW;AAC1D,SAAOvP,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCyN,YAAhC,GAA+C,YAAW;AACxD,SAAOxP,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhE,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCiE,YAAhC,GAA+C,YAAW;AACxD,SAA4ChG,IAAI,CAACY,OAAL,CAAa4E,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C,CAA5C;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAhF,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgC6D,kBAAhC,GAAqD,YAAW;AAC9D,SAA8B5F,IAAI,CAACY,OAAL,CAAaqF,UAAb,CAC1B,KAAKD,YAAL,EAD0B,CAA9B;AAED,CAHD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAxF,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCmE,iBAAhC,GAAoD,YAAW;AAC7D,SAAmClG,IAAI,CAACY,OAAL,CAAauF,SAAb,CAC/B,KAAKH,YAAL,EAD+B,CAAnC;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAxF,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgC+D,YAAhC,GAA+C,UAASlC,KAAT,EAAgB;AAC7D,SAAO5D,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+Bf,KAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACApD,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCqE,cAAhC,GAAiD,YAAW;AAC1D,SAAOpG,IAAI,CAACY,OAAL,CAAa+D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BnC,SAA/B,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAhC,KAAK,CAACqB,eAAN,CAAsBE,SAAtB,CAAgCsE,YAAhC,GAA+C,YAAW;AACxD,SAAOrG,IAAI,CAACY,OAAL,CAAa4D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAKAtE,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBkP,OAAnB,EAA4BjP,KAA5B","sourcesContent":["// source: messages-binance.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function(){ return this }).call(null);\n\nvar types_pb = require('./types_pb.js');\ngoog.object.extend(proto, types_pb);\ngoog.exportSymbol('proto.BinanceAddress', null, global);\ngoog.exportSymbol('proto.BinanceCancelMsg', null, global);\ngoog.exportSymbol('proto.BinanceGetAddress', null, global);\ngoog.exportSymbol('proto.BinanceGetPublicKey', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg.BinanceOrderSide', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg.BinanceOrderType', null, global);\ngoog.exportSymbol('proto.BinanceOrderMsg.BinanceTimeInForce', null, global);\ngoog.exportSymbol('proto.BinancePublicKey', null, global);\ngoog.exportSymbol('proto.BinanceSignTx', null, global);\ngoog.exportSymbol('proto.BinanceSignedTx', null, global);\ngoog.exportSymbol('proto.BinanceTransferMsg', null, global);\ngoog.exportSymbol('proto.BinanceTransferMsg.BinanceCoin', null, global);\ngoog.exportSymbol('proto.BinanceTransferMsg.BinanceInputOutput', null, global);\ngoog.exportSymbol('proto.BinanceTxRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceGetAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceGetAddress.repeatedFields_, null);\n};\ngoog.inherits(proto.BinanceGetAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceGetAddress.displayName = 'proto.BinanceGetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinanceAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceAddress.displayName = 'proto.BinanceAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceGetPublicKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceGetPublicKey.repeatedFields_, null);\n};\ngoog.inherits(proto.BinanceGetPublicKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceGetPublicKey.displayName = 'proto.BinanceGetPublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinancePublicKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinancePublicKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinancePublicKey.displayName = 'proto.BinancePublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceSignTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceSignTx.repeatedFields_, null);\n};\ngoog.inherits(proto.BinanceSignTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceSignTx.displayName = 'proto.BinanceSignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceTxRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinanceTxRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTxRequest.displayName = 'proto.BinanceTxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceTransferMsg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceTransferMsg.repeatedFields_, null);\n};\ngoog.inherits(proto.BinanceTransferMsg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTransferMsg.displayName = 'proto.BinanceTransferMsg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceTransferMsg.BinanceInputOutput = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.BinanceTransferMsg.BinanceInputOutput.repeatedFields_, null);\n};\ngoog.inherits(proto.BinanceTransferMsg.BinanceInputOutput, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTransferMsg.BinanceInputOutput.displayName = 'proto.BinanceTransferMsg.BinanceInputOutput';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceTransferMsg.BinanceCoin = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinanceTransferMsg.BinanceCoin, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceTransferMsg.BinanceCoin.displayName = 'proto.BinanceTransferMsg.BinanceCoin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceOrderMsg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinanceOrderMsg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceOrderMsg.displayName = 'proto.BinanceOrderMsg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceCancelMsg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinanceCancelMsg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceCancelMsg.displayName = 'proto.BinanceCancelMsg';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BinanceSignedTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BinanceSignedTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BinanceSignedTx.displayName = 'proto.BinanceSignedTx';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.BinanceGetAddress.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceGetAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceGetAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceGetAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceGetAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceGetAddress}\n */\nproto.BinanceGetAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceGetAddress;\n  return proto.BinanceGetAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceGetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceGetAddress}\n */\nproto.BinanceGetAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowDisplay(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceGetAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceGetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceGetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceGetAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.BinanceGetAddress.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.BinanceGetAddress} returns this\n */\nproto.BinanceGetAddress.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.BinanceGetAddress} returns this\n */\nproto.BinanceGetAddress.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceGetAddress} returns this\n */\nproto.BinanceGetAddress.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\nproto.BinanceGetAddress.prototype.getShowDisplay = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.BinanceGetAddress} returns this\n */\nproto.BinanceGetAddress.prototype.setShowDisplay = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceGetAddress} returns this\n */\nproto.BinanceGetAddress.prototype.clearShowDisplay = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceGetAddress.prototype.hasShowDisplay = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceAddress}\n */\nproto.BinanceAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceAddress;\n  return proto.BinanceAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceAddress}\n */\nproto.BinanceAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.BinanceAddress.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceAddress} returns this\n */\nproto.BinanceAddress.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceAddress} returns this\n */\nproto.BinanceAddress.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceAddress.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.BinanceGetPublicKey.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceGetPublicKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceGetPublicKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceGetPublicKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceGetPublicKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceGetPublicKey}\n */\nproto.BinanceGetPublicKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceGetPublicKey;\n  return proto.BinanceGetPublicKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceGetPublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceGetPublicKey}\n */\nproto.BinanceGetPublicKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowDisplay(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceGetPublicKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceGetPublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceGetPublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceGetPublicKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.BinanceGetPublicKey.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.BinanceGetPublicKey} returns this\n */\nproto.BinanceGetPublicKey.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.BinanceGetPublicKey} returns this\n */\nproto.BinanceGetPublicKey.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceGetPublicKey} returns this\n */\nproto.BinanceGetPublicKey.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\nproto.BinanceGetPublicKey.prototype.getShowDisplay = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.BinanceGetPublicKey} returns this\n */\nproto.BinanceGetPublicKey.prototype.setShowDisplay = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceGetPublicKey} returns this\n */\nproto.BinanceGetPublicKey.prototype.clearShowDisplay = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceGetPublicKey.prototype.hasShowDisplay = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinancePublicKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinancePublicKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinancePublicKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinancePublicKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    publicKey: msg.getPublicKey_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinancePublicKey}\n */\nproto.BinancePublicKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinancePublicKey;\n  return proto.BinancePublicKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinancePublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinancePublicKey}\n */\nproto.BinancePublicKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinancePublicKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinancePublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinancePublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinancePublicKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes public_key = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.BinancePublicKey.prototype.getPublicKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.BinancePublicKey.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.BinancePublicKey.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BinancePublicKey} returns this\n */\nproto.BinancePublicKey.prototype.setPublicKey = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinancePublicKey} returns this\n */\nproto.BinancePublicKey.prototype.clearPublicKey = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinancePublicKey.prototype.hasPublicKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.BinanceSignTx.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceSignTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceSignTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceSignTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceSignTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    msgCount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    accountNumber: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    chainId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    memo: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n    sequence: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    source: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceSignTx}\n */\nproto.BinanceSignTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceSignTx;\n  return proto.BinanceSignTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceSignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceSignTx}\n */\nproto.BinanceSignTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMsgCount(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readSint64String());\n      msg.setAccountNumber(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainId(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readSint64String());\n      msg.setSequence(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readSint64String());\n      msg.setSource(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceSignTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceSignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceSignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceSignTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeSint64String(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeSint64String(\n      6,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeSint64String(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.BinanceSignTx.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional uint32 msg_count = 2;\n * @return {number}\n */\nproto.BinanceSignTx.prototype.getMsgCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setMsgCount = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearMsgCount = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignTx.prototype.hasMsgCount = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional sint64 account_number = 3;\n * @return {string}\n */\nproto.BinanceSignTx.prototype.getAccountNumber = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setAccountNumber = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearAccountNumber = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignTx.prototype.hasAccountNumber = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string chain_id = 4;\n * @return {string}\n */\nproto.BinanceSignTx.prototype.getChainId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setChainId = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearChainId = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignTx.prototype.hasChainId = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string memo = 5;\n * @return {string}\n */\nproto.BinanceSignTx.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setMemo = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearMemo = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignTx.prototype.hasMemo = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional sint64 sequence = 6;\n * @return {string}\n */\nproto.BinanceSignTx.prototype.getSequence = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setSequence = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearSequence = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignTx.prototype.hasSequence = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional sint64 source = 7;\n * @return {string}\n */\nproto.BinanceSignTx.prototype.getSource = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.setSource = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignTx} returns this\n */\nproto.BinanceSignTx.prototype.clearSource = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignTx.prototype.hasSource = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceTxRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceTxRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceTxRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTxRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTxRequest}\n */\nproto.BinanceTxRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTxRequest;\n  return proto.BinanceTxRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTxRequest}\n */\nproto.BinanceTxRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceTxRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTxRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.BinanceTransferMsg.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceTransferMsg.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceTransferMsg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceTransferMsg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTransferMsg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    inputsList: jspb.Message.toObjectList(msg.getInputsList(),\n    proto.BinanceTransferMsg.BinanceInputOutput.toObject, includeInstance),\n    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),\n    proto.BinanceTransferMsg.BinanceInputOutput.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTransferMsg}\n */\nproto.BinanceTransferMsg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTransferMsg;\n  return proto.BinanceTransferMsg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTransferMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTransferMsg}\n */\nproto.BinanceTransferMsg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.BinanceTransferMsg.BinanceInputOutput;\n      reader.readMessage(value,proto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader);\n      msg.addInputs(value);\n      break;\n    case 2:\n      var value = new proto.BinanceTransferMsg.BinanceInputOutput;\n      reader.readMessage(value,proto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader);\n      msg.addOutputs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceTransferMsg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTransferMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTransferMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTransferMsg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.BinanceTransferMsg.BinanceInputOutput.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceTransferMsg.BinanceInputOutput.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTransferMsg.BinanceInputOutput.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    coinsList: jspb.Message.toObjectList(msg.getCoinsList(),\n    proto.BinanceTransferMsg.BinanceCoin.toObject, includeInstance),\n    addressType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    exchangeType: (f = msg.getExchangeType()) && types_pb.ExchangeType.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTransferMsg.BinanceInputOutput;\n  return proto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new proto.BinanceTransferMsg.BinanceCoin;\n      reader.readMessage(value,proto.BinanceTransferMsg.BinanceCoin.deserializeBinaryFromReader);\n      msg.addCoins(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.OutputAddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 4:\n      var value = new types_pb.ExchangeType;\n      reader.readMessage(value,types_pb.ExchangeType.deserializeBinaryFromReader);\n      msg.setExchangeType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTransferMsg.BinanceInputOutput.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCoinsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.BinanceTransferMsg.BinanceCoin.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!proto.OutputAddressType} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getExchangeType();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      types_pb.ExchangeType.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated BinanceCoin coins = 2;\n * @return {!Array<!proto.BinanceTransferMsg.BinanceCoin>}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getCoinsList = function() {\n  return /** @type{!Array<!proto.BinanceTransferMsg.BinanceCoin>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.BinanceTransferMsg.BinanceCoin, 2));\n};\n\n\n/**\n * @param {!Array<!proto.BinanceTransferMsg.BinanceCoin>} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n*/\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setCoinsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.BinanceTransferMsg.BinanceCoin=} opt_value\n * @param {number=} opt_index\n * @return {!proto.BinanceTransferMsg.BinanceCoin}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.addCoins = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.BinanceTransferMsg.BinanceCoin, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearCoinsList = function() {\n  return this.setCoinsList([]);\n};\n\n\n/**\n * optional OutputAddressType address_type = 3;\n * @return {!proto.OutputAddressType}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getAddressType = function() {\n  return /** @type {!proto.OutputAddressType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setAddressType = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearAddressType = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.hasAddressType = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ExchangeType exchange_type = 4;\n * @return {?proto.ExchangeType}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.getExchangeType = function() {\n  return /** @type{?proto.ExchangeType} */ (\n    jspb.Message.getWrapperField(this, types_pb.ExchangeType, 4));\n};\n\n\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n*/\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.setExchangeType = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput} returns this\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.clearExchangeType = function() {\n  return this.setExchangeType(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceTransferMsg.BinanceInputOutput.prototype.hasExchangeType = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceTransferMsg.BinanceCoin.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceTransferMsg.BinanceCoin} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTransferMsg.BinanceCoin.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    denom: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceTransferMsg.BinanceCoin}\n */\nproto.BinanceTransferMsg.BinanceCoin.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceTransferMsg.BinanceCoin;\n  return proto.BinanceTransferMsg.BinanceCoin.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceTransferMsg.BinanceCoin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceTransferMsg.BinanceCoin}\n */\nproto.BinanceTransferMsg.BinanceCoin.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readSint64String());\n      msg.setAmount(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDenom(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceTransferMsg.BinanceCoin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceTransferMsg.BinanceCoin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceTransferMsg.BinanceCoin.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeSint64String(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional sint64 amount = 1;\n * @return {string}\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.getAmount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.setAmount = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.clearAmount = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.hasAmount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string denom = 2;\n * @return {string}\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.getDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.setDenom = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceTransferMsg.BinanceCoin} returns this\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.clearDenom = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceTransferMsg.BinanceCoin.prototype.hasDenom = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated BinanceInputOutput inputs = 1;\n * @return {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>}\n */\nproto.BinanceTransferMsg.prototype.getInputsList = function() {\n  return /** @type{!Array<!proto.BinanceTransferMsg.BinanceInputOutput>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.BinanceTransferMsg.BinanceInputOutput, 1));\n};\n\n\n/**\n * @param {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>} value\n * @return {!proto.BinanceTransferMsg} returns this\n*/\nproto.BinanceTransferMsg.prototype.setInputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput=} opt_value\n * @param {number=} opt_index\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\nproto.BinanceTransferMsg.prototype.addInputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BinanceTransferMsg.BinanceInputOutput, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceTransferMsg} returns this\n */\nproto.BinanceTransferMsg.prototype.clearInputsList = function() {\n  return this.setInputsList([]);\n};\n\n\n/**\n * repeated BinanceInputOutput outputs = 2;\n * @return {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>}\n */\nproto.BinanceTransferMsg.prototype.getOutputsList = function() {\n  return /** @type{!Array<!proto.BinanceTransferMsg.BinanceInputOutput>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.BinanceTransferMsg.BinanceInputOutput, 2));\n};\n\n\n/**\n * @param {!Array<!proto.BinanceTransferMsg.BinanceInputOutput>} value\n * @return {!proto.BinanceTransferMsg} returns this\n*/\nproto.BinanceTransferMsg.prototype.setOutputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.BinanceTransferMsg.BinanceInputOutput=} opt_value\n * @param {number=} opt_index\n * @return {!proto.BinanceTransferMsg.BinanceInputOutput}\n */\nproto.BinanceTransferMsg.prototype.addOutputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.BinanceTransferMsg.BinanceInputOutput, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.BinanceTransferMsg} returns this\n */\nproto.BinanceTransferMsg.prototype.clearOutputsList = function() {\n  return this.setOutputsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceOrderMsg.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceOrderMsg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceOrderMsg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceOrderMsg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    ordertype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    price: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    quantity: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    sender: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n    side: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    symbol: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n    timeinforce: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceOrderMsg}\n */\nproto.BinanceOrderMsg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceOrderMsg;\n  return proto.BinanceOrderMsg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceOrderMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceOrderMsg}\n */\nproto.BinanceOrderMsg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.BinanceOrderMsg.BinanceOrderType} */ (reader.readEnum());\n      msg.setOrdertype(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readSint64String());\n      msg.setPrice(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readSint64String());\n      msg.setQuantity(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSender(value);\n      break;\n    case 6:\n      var value = /** @type {!proto.BinanceOrderMsg.BinanceOrderSide} */ (reader.readEnum());\n      msg.setSide(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSymbol(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.BinanceOrderMsg.BinanceTimeInForce} */ (reader.readEnum());\n      msg.setTimeinforce(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceOrderMsg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceOrderMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceOrderMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceOrderMsg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {!proto.BinanceOrderMsg.BinanceOrderType} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeSint64String(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeSint64String(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {!proto.BinanceOrderMsg.BinanceOrderSide} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = /** @type {!proto.BinanceOrderMsg.BinanceTimeInForce} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.BinanceOrderMsg.BinanceOrderType = {\n  OT_UNKNOWN: 0,\n  MARKET: 1,\n  LIMIT: 2,\n  OT_RESERVED: 3\n};\n\n/**\n * @enum {number}\n */\nproto.BinanceOrderMsg.BinanceOrderSide = {\n  SIDE_UNKNOWN: 0,\n  BUY: 1,\n  SELL: 2\n};\n\n/**\n * @enum {number}\n */\nproto.BinanceOrderMsg.BinanceTimeInForce = {\n  TIF_UNKNOWN: 0,\n  GTE: 1,\n  TIF_RESERVED: 2,\n  IOC: 3\n};\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.BinanceOrderMsg.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setId = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearId = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional BinanceOrderType ordertype = 2;\n * @return {!proto.BinanceOrderMsg.BinanceOrderType}\n */\nproto.BinanceOrderMsg.prototype.getOrdertype = function() {\n  return /** @type {!proto.BinanceOrderMsg.BinanceOrderType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!proto.BinanceOrderMsg.BinanceOrderType} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setOrdertype = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearOrdertype = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasOrdertype = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional sint64 price = 3;\n * @return {string}\n */\nproto.BinanceOrderMsg.prototype.getPrice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setPrice = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearPrice = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasPrice = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional sint64 quantity = 4;\n * @return {string}\n */\nproto.BinanceOrderMsg.prototype.getQuantity = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setQuantity = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearQuantity = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasQuantity = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string sender = 5;\n * @return {string}\n */\nproto.BinanceOrderMsg.prototype.getSender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setSender = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearSender = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasSender = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional BinanceOrderSide side = 6;\n * @return {!proto.BinanceOrderMsg.BinanceOrderSide}\n */\nproto.BinanceOrderMsg.prototype.getSide = function() {\n  return /** @type {!proto.BinanceOrderMsg.BinanceOrderSide} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!proto.BinanceOrderMsg.BinanceOrderSide} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setSide = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearSide = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasSide = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional string symbol = 7;\n * @return {string}\n */\nproto.BinanceOrderMsg.prototype.getSymbol = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setSymbol = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearSymbol = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasSymbol = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional BinanceTimeInForce timeinforce = 8;\n * @return {!proto.BinanceOrderMsg.BinanceTimeInForce}\n */\nproto.BinanceOrderMsg.prototype.getTimeinforce = function() {\n  return /** @type {!proto.BinanceOrderMsg.BinanceTimeInForce} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {!proto.BinanceOrderMsg.BinanceTimeInForce} value\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.setTimeinforce = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceOrderMsg} returns this\n */\nproto.BinanceOrderMsg.prototype.clearTimeinforce = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceOrderMsg.prototype.hasTimeinforce = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceCancelMsg.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceCancelMsg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceCancelMsg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceCancelMsg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    refid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    sender: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    symbol: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceCancelMsg}\n */\nproto.BinanceCancelMsg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceCancelMsg;\n  return proto.BinanceCancelMsg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceCancelMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceCancelMsg}\n */\nproto.BinanceCancelMsg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRefid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSender(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSymbol(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceCancelMsg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceCancelMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceCancelMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceCancelMsg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string refid = 1;\n * @return {string}\n */\nproto.BinanceCancelMsg.prototype.getRefid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceCancelMsg} returns this\n */\nproto.BinanceCancelMsg.prototype.setRefid = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceCancelMsg} returns this\n */\nproto.BinanceCancelMsg.prototype.clearRefid = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceCancelMsg.prototype.hasRefid = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string sender = 2;\n * @return {string}\n */\nproto.BinanceCancelMsg.prototype.getSender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceCancelMsg} returns this\n */\nproto.BinanceCancelMsg.prototype.setSender = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceCancelMsg} returns this\n */\nproto.BinanceCancelMsg.prototype.clearSender = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceCancelMsg.prototype.hasSender = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string symbol = 3;\n * @return {string}\n */\nproto.BinanceCancelMsg.prototype.getSymbol = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.BinanceCancelMsg} returns this\n */\nproto.BinanceCancelMsg.prototype.setSymbol = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceCancelMsg} returns this\n */\nproto.BinanceCancelMsg.prototype.clearSymbol = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceCancelMsg.prototype.hasSymbol = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BinanceSignedTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.BinanceSignedTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BinanceSignedTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceSignedTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: msg.getSignature_asB64(),\n    publicKey: msg.getPublicKey_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BinanceSignedTx}\n */\nproto.BinanceSignedTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BinanceSignedTx;\n  return proto.BinanceSignedTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BinanceSignedTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BinanceSignedTx}\n */\nproto.BinanceSignedTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BinanceSignedTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BinanceSignedTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BinanceSignedTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BinanceSignedTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signature = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.BinanceSignedTx.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signature = 1;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.BinanceSignedTx.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.BinanceSignedTx.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BinanceSignedTx} returns this\n */\nproto.BinanceSignedTx.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignedTx} returns this\n */\nproto.BinanceSignedTx.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignedTx.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes public_key = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.BinanceSignedTx.prototype.getPublicKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 2;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.BinanceSignedTx.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.BinanceSignedTx.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BinanceSignedTx} returns this\n */\nproto.BinanceSignedTx.prototype.setPublicKey = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.BinanceSignedTx} returns this\n */\nproto.BinanceSignedTx.prototype.clearPublicKey = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.BinanceSignedTx.prototype.hasPublicKey = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"script"}