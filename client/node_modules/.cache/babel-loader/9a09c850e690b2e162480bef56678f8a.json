{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavigateToDashboard = exports.WebUSBCouldNotPair = exports.WebUSBCouldNotInitialize = exports.WebUSBNotAvailable = exports.FirmwareUpdateRequired = exports.WrongApp = exports.SelectApp = exports.ConflictingApp = exports.PopupClosedError = exports.DeviceLocked = exports.DisconnectedDeviceDuringOperation = exports.DeviceDisconnected = exports.ActionCancelled = exports.HDWalletError = exports.HDWalletErrorType = void 0;\nvar HDWalletErrorType;\n\n(function (HDWalletErrorType) {\n  HDWalletErrorType[\"ActionCancelled\"] = \"ActionCancelled\";\n  HDWalletErrorType[\"DeviceDisconnected\"] = \"DeviceDisconnected\";\n  HDWalletErrorType[\"DisconnectedDeviceDuringOperation\"] = \"DisconnectedDeviceDuringOperation\";\n  HDWalletErrorType[\"DeviceLocked\"] = \"DeviceLocked\";\n  HDWalletErrorType[\"PopupClosedError\"] = \"PopupClosedError\";\n  HDWalletErrorType[\"ConflictingApp\"] = \"ConflictingApp\";\n  HDWalletErrorType[\"SelectApp\"] = \"SelectApp\";\n  HDWalletErrorType[\"WrongApp\"] = \"WrongApp\";\n  HDWalletErrorType[\"FirmwareUpdateRequired\"] = \"FirmwareUpdateRequired\";\n  HDWalletErrorType[\"WebUSBNotAvailable\"] = \"WebUSBNotAvailable\";\n  HDWalletErrorType[\"WebUSBCouldNotInitialize\"] = \"WebUSBCouldNotInitialize\";\n  HDWalletErrorType[\"WebUSBCouldNotPair\"] = \"WebUSBCouldNotPair\";\n  HDWalletErrorType[\"NavigateToDashboard\"] = \"NavigateToDashboard\";\n})(HDWalletErrorType = exports.HDWalletErrorType || (exports.HDWalletErrorType = {}));\n\nclass HDWalletError extends Error {\n  constructor(message, type) {\n    super(message);\n    this.name = type;\n    this.type = type;\n    this.message = message;\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n\n}\n\nexports.HDWalletError = HDWalletError;\n\nclass ActionCancelled extends HDWalletError {\n  constructor() {\n    super(\"Action cancelled\", HDWalletErrorType.ActionCancelled);\n  }\n\n}\n\nexports.ActionCancelled = ActionCancelled;\n\nclass DeviceDisconnected extends HDWalletError {\n  constructor() {\n    super(\"Device disconnected\", HDWalletErrorType.DeviceDisconnected);\n  }\n\n}\n\nexports.DeviceDisconnected = DeviceDisconnected;\n\nclass DisconnectedDeviceDuringOperation extends HDWalletError {\n  constructor() {\n    super(\"Ledger device disconnected during operation\", HDWalletErrorType.DisconnectedDeviceDuringOperation);\n  }\n\n}\n\nexports.DisconnectedDeviceDuringOperation = DisconnectedDeviceDuringOperation;\n\nclass DeviceLocked extends HDWalletError {\n  constructor() {\n    super(\"Device locked\", HDWalletErrorType.DeviceLocked);\n  }\n\n}\n\nexports.DeviceLocked = DeviceLocked;\n\nclass PopupClosedError extends HDWalletError {\n  constructor() {\n    super(\"TrezorConnect popup closed\", HDWalletErrorType.PopupClosedError);\n  }\n\n}\n\nexports.PopupClosedError = PopupClosedError;\n\nclass ConflictingApp extends HDWalletError {\n  constructor(model) {\n    super(`Conflicting Application: Another wallet is trying to connect with your ${model}.`, HDWalletErrorType.ConflictingApp);\n    this.model = model;\n  }\n\n}\n\nexports.ConflictingApp = ConflictingApp;\n\nclass SelectApp extends HDWalletError {\n  constructor(model, app) {\n    super(`Please open the ${app} app on your ${model}.`, HDWalletErrorType.SelectApp);\n  }\n\n}\n\nexports.SelectApp = SelectApp;\n\nclass WrongApp extends HDWalletError {\n  constructor(model, app) {\n    super(`Wrong app open. Please open the ${app} app on your ${model} and try again.`, HDWalletErrorType.WrongApp);\n  }\n\n}\n\nexports.WrongApp = WrongApp;\n\nclass FirmwareUpdateRequired extends HDWalletError {\n  constructor(model, minVer) {\n    super(`Firmware ${minVer} or later is required to use your ${model} with this client. Please update your device.`, HDWalletErrorType.FirmwareUpdateRequired);\n  }\n\n}\n\nexports.FirmwareUpdateRequired = FirmwareUpdateRequired;\n\nclass WebUSBNotAvailable extends HDWalletError {\n  constructor() {\n    super(`WebUSB is not available in this browser. We recommend trying Chrome.`, HDWalletErrorType.WebUSBNotAvailable);\n  }\n\n}\n\nexports.WebUSBNotAvailable = WebUSBNotAvailable;\n\nclass WebUSBCouldNotInitialize extends HDWalletError {\n  constructor(model, message) {\n    super(`Could not initialize ${model}: ${message}`, HDWalletErrorType.WebUSBCouldNotInitialize);\n  }\n\n}\n\nexports.WebUSBCouldNotInitialize = WebUSBCouldNotInitialize;\n\nclass WebUSBCouldNotPair extends HDWalletError {\n  constructor(model, message) {\n    super(`Could not pair ${model}: ${message}`, HDWalletErrorType.WebUSBCouldNotPair);\n  }\n\n}\n\nexports.WebUSBCouldNotPair = WebUSBCouldNotPair;\n\nclass NavigateToDashboard extends HDWalletError {\n  constructor(model) {\n    super(`Please navigate to the dashboard of your ${model}.`, HDWalletErrorType.NavigateToDashboard);\n  }\n\n}\n\nexports.NavigateToDashboard = NavigateToDashboard;","map":{"version":3,"sources":["../src/exceptions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NavigateToDashboard = exports.WebUSBCouldNotPair = exports.WebUSBCouldNotInitialize = exports.WebUSBNotAvailable = exports.FirmwareUpdateRequired = exports.WrongApp = exports.SelectApp = exports.ConflictingApp = exports.PopupClosedError = exports.DeviceLocked = exports.DisconnectedDeviceDuringOperation = exports.DeviceDisconnected = exports.ActionCancelled = exports.HDWalletError = exports.HDWalletErrorType = void 0;\nvar HDWalletErrorType;\n(function (HDWalletErrorType) {\n    HDWalletErrorType[\"ActionCancelled\"] = \"ActionCancelled\";\n    HDWalletErrorType[\"DeviceDisconnected\"] = \"DeviceDisconnected\";\n    HDWalletErrorType[\"DisconnectedDeviceDuringOperation\"] = \"DisconnectedDeviceDuringOperation\";\n    HDWalletErrorType[\"DeviceLocked\"] = \"DeviceLocked\";\n    HDWalletErrorType[\"PopupClosedError\"] = \"PopupClosedError\";\n    HDWalletErrorType[\"ConflictingApp\"] = \"ConflictingApp\";\n    HDWalletErrorType[\"SelectApp\"] = \"SelectApp\";\n    HDWalletErrorType[\"WrongApp\"] = \"WrongApp\";\n    HDWalletErrorType[\"FirmwareUpdateRequired\"] = \"FirmwareUpdateRequired\";\n    HDWalletErrorType[\"WebUSBNotAvailable\"] = \"WebUSBNotAvailable\";\n    HDWalletErrorType[\"WebUSBCouldNotInitialize\"] = \"WebUSBCouldNotInitialize\";\n    HDWalletErrorType[\"WebUSBCouldNotPair\"] = \"WebUSBCouldNotPair\";\n    HDWalletErrorType[\"NavigateToDashboard\"] = \"NavigateToDashboard\";\n})(HDWalletErrorType = exports.HDWalletErrorType || (exports.HDWalletErrorType = {}));\nclass HDWalletError extends Error {\n    constructor(message, type) {\n        super(message);\n        this.name = type;\n        this.type = type;\n        this.message = message;\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            this.stack = new Error(message).stack;\n        }\n    }\n}\nexports.HDWalletError = HDWalletError;\nclass ActionCancelled extends HDWalletError {\n    constructor() {\n        super(\"Action cancelled\", HDWalletErrorType.ActionCancelled);\n    }\n}\nexports.ActionCancelled = ActionCancelled;\nclass DeviceDisconnected extends HDWalletError {\n    constructor() {\n        super(\"Device disconnected\", HDWalletErrorType.DeviceDisconnected);\n    }\n}\nexports.DeviceDisconnected = DeviceDisconnected;\nclass DisconnectedDeviceDuringOperation extends HDWalletError {\n    constructor() {\n        super(\"Ledger device disconnected during operation\", HDWalletErrorType.DisconnectedDeviceDuringOperation);\n    }\n}\nexports.DisconnectedDeviceDuringOperation = DisconnectedDeviceDuringOperation;\nclass DeviceLocked extends HDWalletError {\n    constructor() {\n        super(\"Device locked\", HDWalletErrorType.DeviceLocked);\n    }\n}\nexports.DeviceLocked = DeviceLocked;\nclass PopupClosedError extends HDWalletError {\n    constructor() {\n        super(\"TrezorConnect popup closed\", HDWalletErrorType.PopupClosedError);\n    }\n}\nexports.PopupClosedError = PopupClosedError;\nclass ConflictingApp extends HDWalletError {\n    constructor(model) {\n        super(`Conflicting Application: Another wallet is trying to connect with your ${model}.`, HDWalletErrorType.ConflictingApp);\n        this.model = model;\n    }\n}\nexports.ConflictingApp = ConflictingApp;\nclass SelectApp extends HDWalletError {\n    constructor(model, app) {\n        super(`Please open the ${app} app on your ${model}.`, HDWalletErrorType.SelectApp);\n    }\n}\nexports.SelectApp = SelectApp;\nclass WrongApp extends HDWalletError {\n    constructor(model, app) {\n        super(`Wrong app open. Please open the ${app} app on your ${model} and try again.`, HDWalletErrorType.WrongApp);\n    }\n}\nexports.WrongApp = WrongApp;\nclass FirmwareUpdateRequired extends HDWalletError {\n    constructor(model, minVer) {\n        super(`Firmware ${minVer} or later is required to use your ${model} with this client. Please update your device.`, HDWalletErrorType.FirmwareUpdateRequired);\n    }\n}\nexports.FirmwareUpdateRequired = FirmwareUpdateRequired;\nclass WebUSBNotAvailable extends HDWalletError {\n    constructor() {\n        super(`WebUSB is not available in this browser. We recommend trying Chrome.`, HDWalletErrorType.WebUSBNotAvailable);\n    }\n}\nexports.WebUSBNotAvailable = WebUSBNotAvailable;\nclass WebUSBCouldNotInitialize extends HDWalletError {\n    constructor(model, message) {\n        super(`Could not initialize ${model}: ${message}`, HDWalletErrorType.WebUSBCouldNotInitialize);\n    }\n}\nexports.WebUSBCouldNotInitialize = WebUSBCouldNotInitialize;\nclass WebUSBCouldNotPair extends HDWalletError {\n    constructor(model, message) {\n        super(`Could not pair ${model}: ${message}`, HDWalletErrorType.WebUSBCouldNotPair);\n    }\n}\nexports.WebUSBCouldNotPair = WebUSBCouldNotPair;\nclass NavigateToDashboard extends HDWalletError {\n    constructor(model) {\n        super(`Please navigate to the dashboard of your ${model}.`, HDWalletErrorType.NavigateToDashboard);\n    }\n}\nexports.NavigateToDashboard = NavigateToDashboard;\n//# sourceMappingURL=exceptions.js.map"]},"metadata":{},"sourceType":"script"}