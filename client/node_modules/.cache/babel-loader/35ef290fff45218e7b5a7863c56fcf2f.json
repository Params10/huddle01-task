{"ast":null,"code":"// source: messages.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\n\nvar global = function () {\n  return this;\n}.call(null);\n\nvar types_pb = require('./types_pb.js');\n\ngoog.object.extend(proto, types_pb);\ngoog.exportSymbol('proto.Address', null, global);\ngoog.exportSymbol('proto.ApplyPolicies', null, global);\ngoog.exportSymbol('proto.ApplySettings', null, global);\ngoog.exportSymbol('proto.ButtonAck', null, global);\ngoog.exportSymbol('proto.ButtonRequest', null, global);\ngoog.exportSymbol('proto.Cancel', null, global);\ngoog.exportSymbol('proto.ChangePin', null, global);\ngoog.exportSymbol('proto.ChangeWipeCode', null, global);\ngoog.exportSymbol('proto.CharacterAck', null, global);\ngoog.exportSymbol('proto.CharacterRequest', null, global);\ngoog.exportSymbol('proto.CipherKeyValue', null, global);\ngoog.exportSymbol('proto.CipheredKeyValue', null, global);\ngoog.exportSymbol('proto.ClearSession', null, global);\ngoog.exportSymbol('proto.CoinTable', null, global);\ngoog.exportSymbol('proto.DebugLinkDecision', null, global);\ngoog.exportSymbol('proto.DebugLinkFillConfig', null, global);\ngoog.exportSymbol('proto.DebugLinkFlashDump', null, global);\ngoog.exportSymbol('proto.DebugLinkFlashDumpResponse', null, global);\ngoog.exportSymbol('proto.DebugLinkGetState', null, global);\ngoog.exportSymbol('proto.DebugLinkLog', null, global);\ngoog.exportSymbol('proto.DebugLinkState', null, global);\ngoog.exportSymbol('proto.DebugLinkStop', null, global);\ngoog.exportSymbol('proto.DecryptMessage', null, global);\ngoog.exportSymbol('proto.DecryptedMessage', null, global);\ngoog.exportSymbol('proto.EncryptMessage', null, global);\ngoog.exportSymbol('proto.EncryptedMessage', null, global);\ngoog.exportSymbol('proto.Entropy', null, global);\ngoog.exportSymbol('proto.EntropyAck', null, global);\ngoog.exportSymbol('proto.EntropyRequest', null, global);\ngoog.exportSymbol('proto.EthereumAddress', null, global);\ngoog.exportSymbol('proto.EthereumGetAddress', null, global);\ngoog.exportSymbol('proto.EthereumMessageSignature', null, global);\ngoog.exportSymbol('proto.EthereumSignMessage', null, global);\ngoog.exportSymbol('proto.EthereumSignTx', null, global);\ngoog.exportSymbol('proto.EthereumTxAck', null, global);\ngoog.exportSymbol('proto.EthereumTxRequest', null, global);\ngoog.exportSymbol('proto.EthereumVerifyMessage', null, global);\ngoog.exportSymbol('proto.Failure', null, global);\ngoog.exportSymbol('proto.Features', null, global);\ngoog.exportSymbol('proto.FirmwareErase', null, global);\ngoog.exportSymbol('proto.FirmwareUpload', null, global);\ngoog.exportSymbol('proto.FlashHash', null, global);\ngoog.exportSymbol('proto.FlashHashResponse', null, global);\ngoog.exportSymbol('proto.FlashWrite', null, global);\ngoog.exportSymbol('proto.GetAddress', null, global);\ngoog.exportSymbol('proto.GetCoinTable', null, global);\ngoog.exportSymbol('proto.GetEntropy', null, global);\ngoog.exportSymbol('proto.GetFeatures', null, global);\ngoog.exportSymbol('proto.GetPublicKey', null, global);\ngoog.exportSymbol('proto.Initialize', null, global);\ngoog.exportSymbol('proto.LoadDevice', null, global);\ngoog.exportSymbol('proto.MessageSignature', null, global);\ngoog.exportSymbol('proto.MessageType', null, global);\ngoog.exportSymbol('proto.PassphraseAck', null, global);\ngoog.exportSymbol('proto.PassphraseRequest', null, global);\ngoog.exportSymbol('proto.PinMatrixAck', null, global);\ngoog.exportSymbol('proto.PinMatrixRequest', null, global);\ngoog.exportSymbol('proto.Ping', null, global);\ngoog.exportSymbol('proto.PublicKey', null, global);\ngoog.exportSymbol('proto.RawTxAck', null, global);\ngoog.exportSymbol('proto.RecoveryDevice', null, global);\ngoog.exportSymbol('proto.ResetDevice', null, global);\ngoog.exportSymbol('proto.SignIdentity', null, global);\ngoog.exportSymbol('proto.SignMessage', null, global);\ngoog.exportSymbol('proto.SignTx', null, global);\ngoog.exportSymbol('proto.SignedIdentity', null, global);\ngoog.exportSymbol('proto.SoftReset', null, global);\ngoog.exportSymbol('proto.Success', null, global);\ngoog.exportSymbol('proto.TxAck', null, global);\ngoog.exportSymbol('proto.TxRequest', null, global);\ngoog.exportSymbol('proto.VerifyMessage', null, global);\ngoog.exportSymbol('proto.WipeDevice', null, global);\ngoog.exportSymbol('proto.WordAck', null, global);\ngoog.exportSymbol('proto.WordRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Initialize = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Initialize, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Initialize.displayName = 'proto.Initialize';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.GetFeatures = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.GetFeatures, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetFeatures.displayName = 'proto.GetFeatures';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Features = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Features.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Features, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Features.displayName = 'proto.Features';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.GetCoinTable = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.GetCoinTable, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetCoinTable.displayName = 'proto.GetCoinTable';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CoinTable = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoinTable.repeatedFields_, null);\n};\n\ngoog.inherits(proto.CoinTable, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinTable.displayName = 'proto.CoinTable';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ClearSession = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ClearSession, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ClearSession.displayName = 'proto.ClearSession';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ApplySettings = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ApplySettings, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ApplySettings.displayName = 'proto.ApplySettings';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ChangePin = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ChangePin, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ChangePin.displayName = 'proto.ChangePin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Ping = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Ping, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Ping.displayName = 'proto.Ping';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Success = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Success, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Success.displayName = 'proto.Success';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Failure = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Failure, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Failure.displayName = 'proto.Failure';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ButtonRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ButtonRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ButtonRequest.displayName = 'proto.ButtonRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ButtonAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ButtonAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ButtonAck.displayName = 'proto.ButtonAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.PinMatrixRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.PinMatrixRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PinMatrixRequest.displayName = 'proto.PinMatrixRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.PinMatrixAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.PinMatrixAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PinMatrixAck.displayName = 'proto.PinMatrixAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Cancel = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Cancel, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Cancel.displayName = 'proto.Cancel';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.PassphraseRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.PassphraseRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PassphraseRequest.displayName = 'proto.PassphraseRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.PassphraseAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.PassphraseAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PassphraseAck.displayName = 'proto.PassphraseAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.GetEntropy = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.GetEntropy, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetEntropy.displayName = 'proto.GetEntropy';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Entropy = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Entropy, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Entropy.displayName = 'proto.Entropy';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.GetPublicKey = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.GetPublicKey.repeatedFields_, null);\n};\n\ngoog.inherits(proto.GetPublicKey, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetPublicKey.displayName = 'proto.GetPublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.PublicKey = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.PublicKey, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PublicKey.displayName = 'proto.PublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.GetAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.GetAddress.repeatedFields_, null);\n};\n\ngoog.inherits(proto.GetAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetAddress.displayName = 'proto.GetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumGetAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthereumGetAddress.repeatedFields_, null);\n};\n\ngoog.inherits(proto.EthereumGetAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumGetAddress.displayName = 'proto.EthereumGetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Address = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Address, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Address.displayName = 'proto.Address';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EthereumAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumAddress.displayName = 'proto.EthereumAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.WipeDevice = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.WipeDevice, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.WipeDevice.displayName = 'proto.WipeDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.LoadDevice = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.LoadDevice, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoadDevice.displayName = 'proto.LoadDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ResetDevice = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ResetDevice, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ResetDevice.displayName = 'proto.ResetDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EntropyRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EntropyRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EntropyRequest.displayName = 'proto.EntropyRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EntropyAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EntropyAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EntropyAck.displayName = 'proto.EntropyAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.RecoveryDevice = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.RecoveryDevice, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.RecoveryDevice.displayName = 'proto.RecoveryDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.WordRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.WordRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.WordRequest.displayName = 'proto.WordRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.WordAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.WordAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.WordAck.displayName = 'proto.WordAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CharacterRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CharacterRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CharacterRequest.displayName = 'proto.CharacterRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CharacterAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CharacterAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CharacterAck.displayName = 'proto.CharacterAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SignMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.SignMessage.repeatedFields_, null);\n};\n\ngoog.inherits(proto.SignMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignMessage.displayName = 'proto.SignMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.VerifyMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.VerifyMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.VerifyMessage.displayName = 'proto.VerifyMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.MessageSignature = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.MessageSignature, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MessageSignature.displayName = 'proto.MessageSignature';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EncryptMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EncryptMessage.repeatedFields_, null);\n};\n\ngoog.inherits(proto.EncryptMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EncryptMessage.displayName = 'proto.EncryptMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EncryptedMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EncryptedMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EncryptedMessage.displayName = 'proto.EncryptedMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DecryptMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.DecryptMessage.repeatedFields_, null);\n};\n\ngoog.inherits(proto.DecryptMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DecryptMessage.displayName = 'proto.DecryptMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DecryptedMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DecryptedMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DecryptedMessage.displayName = 'proto.DecryptedMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CipherKeyValue = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CipherKeyValue.repeatedFields_, null);\n};\n\ngoog.inherits(proto.CipherKeyValue, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CipherKeyValue.displayName = 'proto.CipherKeyValue';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CipheredKeyValue = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CipheredKeyValue, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CipheredKeyValue.displayName = 'proto.CipheredKeyValue';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SignTx = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SignTx, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignTx.displayName = 'proto.SignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.TxRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxRequest.displayName = 'proto.TxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.TxAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.TxAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxAck.displayName = 'proto.TxAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.RawTxAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.RawTxAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.RawTxAck.displayName = 'proto.RawTxAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumSignTx = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthereumSignTx.repeatedFields_, null);\n};\n\ngoog.inherits(proto.EthereumSignTx, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumSignTx.displayName = 'proto.EthereumSignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumTxRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EthereumTxRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumTxRequest.displayName = 'proto.EthereumTxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumTxAck = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EthereumTxAck, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumTxAck.displayName = 'proto.EthereumTxAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumSignMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthereumSignMessage.repeatedFields_, null);\n};\n\ngoog.inherits(proto.EthereumSignMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumSignMessage.displayName = 'proto.EthereumSignMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumVerifyMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EthereumVerifyMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumVerifyMessage.displayName = 'proto.EthereumVerifyMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EthereumMessageSignature = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EthereumMessageSignature, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumMessageSignature.displayName = 'proto.EthereumMessageSignature';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SignIdentity = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SignIdentity, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignIdentity.displayName = 'proto.SignIdentity';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SignedIdentity = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SignedIdentity, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignedIdentity.displayName = 'proto.SignedIdentity';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ApplyPolicies = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ApplyPolicies.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ApplyPolicies, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ApplyPolicies.displayName = 'proto.ApplyPolicies';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.FlashHash = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.FlashHash, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FlashHash.displayName = 'proto.FlashHash';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.FlashWrite = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.FlashWrite, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FlashWrite.displayName = 'proto.FlashWrite';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.FlashHashResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.FlashHashResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FlashHashResponse.displayName = 'proto.FlashHashResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkFlashDump = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkFlashDump, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkFlashDump.displayName = 'proto.DebugLinkFlashDump';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkFlashDumpResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkFlashDumpResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkFlashDumpResponse.displayName = 'proto.DebugLinkFlashDumpResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SoftReset = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SoftReset, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SoftReset.displayName = 'proto.SoftReset';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.FirmwareErase = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.FirmwareErase, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FirmwareErase.displayName = 'proto.FirmwareErase';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.FirmwareUpload = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.FirmwareUpload, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FirmwareUpload.displayName = 'proto.FirmwareUpload';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkDecision = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkDecision, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkDecision.displayName = 'proto.DebugLinkDecision';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkGetState = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkGetState, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkGetState.displayName = 'proto.DebugLinkGetState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkState = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkState, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkState.displayName = 'proto.DebugLinkState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkStop = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkStop, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkStop.displayName = 'proto.DebugLinkStop';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkLog = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkLog, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkLog.displayName = 'proto.DebugLinkLog';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DebugLinkFillConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DebugLinkFillConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkFillConfig.displayName = 'proto.DebugLinkFillConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ChangeWipeCode = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ChangeWipeCode, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ChangeWipeCode.displayName = 'proto.ChangeWipeCode';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Initialize.prototype.toObject = function (opt_includeInstance) {\n    return proto.Initialize.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Initialize} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Initialize.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Initialize}\n */\n\n\nproto.Initialize.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Initialize();\n  return proto.Initialize.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Initialize} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Initialize}\n */\n\n\nproto.Initialize.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Initialize.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Initialize.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Initialize} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Initialize.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.GetFeatures.prototype.toObject = function (opt_includeInstance) {\n    return proto.GetFeatures.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.GetFeatures} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.GetFeatures.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetFeatures}\n */\n\n\nproto.GetFeatures.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetFeatures();\n  return proto.GetFeatures.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetFeatures} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetFeatures}\n */\n\n\nproto.GetFeatures.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.GetFeatures.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.GetFeatures.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetFeatures} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.GetFeatures.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Features.repeatedFields_ = [11, 18];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Features.prototype.toObject = function (opt_includeInstance) {\n    return proto.Features.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Features} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Features.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      vendor: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      majorVersion: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      minorVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      patchVersion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      bootloaderMode: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,\n      deviceId: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      pinProtection: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n      passphraseProtection: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,\n      language: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      label: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n      coinsList: jspb.Message.toObjectList(msg.getCoinsList(), types_pb.CoinType.toObject, includeInstance),\n      initialized: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,\n      revision: msg.getRevision_asB64(),\n      bootloaderHash: msg.getBootloaderHash_asB64(),\n      imported: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,\n      pinCached: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,\n      passphraseCached: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,\n      policiesList: jspb.Message.toObjectList(msg.getPoliciesList(), types_pb.PolicyType.toObject, includeInstance),\n      model: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,\n      firmwareVariant: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,\n      firmwareHash: msg.getFirmwareHash_asB64(),\n      noBackup: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,\n      wipeCodeProtection: (f = jspb.Message.getBooleanField(msg, 25)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Features}\n */\n\n\nproto.Features.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Features();\n  return proto.Features.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Features} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Features}\n */\n\n\nproto.Features.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setVendor(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setMajorVersion(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setMinorVersion(value);\n        break;\n\n      case 4:\n        var value = reader.readUint32();\n        msg.setPatchVersion(value);\n        break;\n\n      case 5:\n        var value = reader.readBool();\n        msg.setBootloaderMode(value);\n        break;\n\n      case 6:\n        var value = reader.readString();\n        msg.setDeviceId(value);\n        break;\n\n      case 7:\n        var value = reader.readBool();\n        msg.setPinProtection(value);\n        break;\n\n      case 8:\n        var value = reader.readBool();\n        msg.setPassphraseProtection(value);\n        break;\n\n      case 9:\n        var value = reader.readString();\n        msg.setLanguage(value);\n        break;\n\n      case 10:\n        var value = reader.readString();\n        msg.setLabel(value);\n        break;\n\n      case 11:\n        var value = new types_pb.CoinType();\n        reader.readMessage(value, types_pb.CoinType.deserializeBinaryFromReader);\n        msg.addCoins(value);\n        break;\n\n      case 12:\n        var value = reader.readBool();\n        msg.setInitialized(value);\n        break;\n\n      case 13:\n        var value = reader.readBytes();\n        msg.setRevision(value);\n        break;\n\n      case 14:\n        var value = reader.readBytes();\n        msg.setBootloaderHash(value);\n        break;\n\n      case 15:\n        var value = reader.readBool();\n        msg.setImported(value);\n        break;\n\n      case 16:\n        var value = reader.readBool();\n        msg.setPinCached(value);\n        break;\n\n      case 17:\n        var value = reader.readBool();\n        msg.setPassphraseCached(value);\n        break;\n\n      case 18:\n        var value = new types_pb.PolicyType();\n        reader.readMessage(value, types_pb.PolicyType.deserializeBinaryFromReader);\n        msg.addPolicies(value);\n        break;\n\n      case 21:\n        var value = reader.readString();\n        msg.setModel(value);\n        break;\n\n      case 22:\n        var value = reader.readString();\n        msg.setFirmwareVariant(value);\n        break;\n\n      case 23:\n        var value = reader.readBytes();\n        msg.setFirmwareHash(value);\n        break;\n\n      case 24:\n        var value = reader.readBool();\n        msg.setNoBackup(value);\n        break;\n\n      case 25:\n        var value = reader.readBool();\n        msg.setWipeCodeProtection(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Features.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Features.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Features} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Features.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeBool(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeString(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBool(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeBool(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeString(9, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeString(10, f);\n  }\n\n  f = message.getCoinsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(11, f, types_pb.CoinType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 12);\n\n  if (f != null) {\n    writer.writeBool(12, f);\n  }\n\n  f = jspb.Message.getField(message, 13);\n\n  if (f != null) {\n    writer.writeBytes(13, f);\n  }\n\n  f = jspb.Message.getField(message, 14);\n\n  if (f != null) {\n    writer.writeBytes(14, f);\n  }\n\n  f = jspb.Message.getField(message, 15);\n\n  if (f != null) {\n    writer.writeBool(15, f);\n  }\n\n  f = jspb.Message.getField(message, 16);\n\n  if (f != null) {\n    writer.writeBool(16, f);\n  }\n\n  f = jspb.Message.getField(message, 17);\n\n  if (f != null) {\n    writer.writeBool(17, f);\n  }\n\n  f = message.getPoliciesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(18, f, types_pb.PolicyType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 21);\n\n  if (f != null) {\n    writer.writeString(21, f);\n  }\n\n  f = jspb.Message.getField(message, 22);\n\n  if (f != null) {\n    writer.writeString(22, f);\n  }\n\n  f = jspb.Message.getField(message, 23);\n\n  if (f != null) {\n    writer.writeBytes(23, f);\n  }\n\n  f = jspb.Message.getField(message, 24);\n\n  if (f != null) {\n    writer.writeBool(24, f);\n  }\n\n  f = jspb.Message.getField(message, 25);\n\n  if (f != null) {\n    writer.writeBool(25, f);\n  }\n};\n/**\n * optional string vendor = 1;\n * @return {string}\n */\n\n\nproto.Features.prototype.getVendor = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setVendor = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearVendor = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasVendor = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 major_version = 2;\n * @return {number}\n */\n\n\nproto.Features.prototype.getMajorVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setMajorVersion = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearMajorVersion = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasMajorVersion = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint32 minor_version = 3;\n * @return {number}\n */\n\n\nproto.Features.prototype.getMinorVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setMinorVersion = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearMinorVersion = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasMinorVersion = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional uint32 patch_version = 4;\n * @return {number}\n */\n\n\nproto.Features.prototype.getPatchVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setPatchVersion = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearPatchVersion = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasPatchVersion = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional bool bootloader_mode = 5;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getBootloaderMode = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 5, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setBootloaderMode = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearBootloaderMode = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasBootloaderMode = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional string device_id = 6;\n * @return {string}\n */\n\n\nproto.Features.prototype.getDeviceId = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setDeviceId = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearDeviceId = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasDeviceId = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bool pin_protection = 7;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getPinProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 7, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setPinProtection = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearPinProtection = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasPinProtection = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional bool passphrase_protection = 8;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getPassphraseProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 8, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setPassphraseProtection = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearPassphraseProtection = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasPassphraseProtection = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional string language = 9;\n * @return {string}\n */\n\n\nproto.Features.prototype.getLanguage = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setLanguage = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearLanguage = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasLanguage = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional string label = 10;\n * @return {string}\n */\n\n\nproto.Features.prototype.getLabel = function () {\n  return jspb.Message.getFieldWithDefault(this, 10, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setLabel = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearLabel = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasLabel = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n/**\n * repeated CoinType coins = 11;\n * @return {!Array<!proto.CoinType>}\n */\n\n\nproto.Features.prototype.getCoinsList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, types_pb.CoinType, 11);\n};\n/**\n * @param {!Array<!proto.CoinType>} value\n * @return {!proto.Features} returns this\n*/\n\n\nproto.Features.prototype.setCoinsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n/**\n * @param {!proto.CoinType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.CoinType}\n */\n\n\nproto.Features.prototype.addCoins = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.CoinType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearCoinsList = function () {\n  return this.setCoinsList([]);\n};\n/**\n * optional bool initialized = 12;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getInitialized = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 12, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setInitialized = function (value) {\n  return jspb.Message.setField(this, 12, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearInitialized = function () {\n  return jspb.Message.setField(this, 12, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasInitialized = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * optional bytes revision = 13;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.Features.prototype.getRevision = function () {\n  return jspb.Message.getFieldWithDefault(this, 13, \"\");\n};\n/**\n * optional bytes revision = 13;\n * This is a type-conversion wrapper around `getRevision()`\n * @return {string}\n */\n\n\nproto.Features.prototype.getRevision_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getRevision());\n};\n/**\n * optional bytes revision = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRevision()`\n * @return {!Uint8Array}\n */\n\n\nproto.Features.prototype.getRevision_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getRevision());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setRevision = function (value) {\n  return jspb.Message.setField(this, 13, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearRevision = function () {\n  return jspb.Message.setField(this, 13, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasRevision = function () {\n  return jspb.Message.getField(this, 13) != null;\n};\n/**\n * optional bytes bootloader_hash = 14;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.Features.prototype.getBootloaderHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 14, \"\");\n};\n/**\n * optional bytes bootloader_hash = 14;\n * This is a type-conversion wrapper around `getBootloaderHash()`\n * @return {string}\n */\n\n\nproto.Features.prototype.getBootloaderHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getBootloaderHash());\n};\n/**\n * optional bytes bootloader_hash = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBootloaderHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.Features.prototype.getBootloaderHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getBootloaderHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setBootloaderHash = function (value) {\n  return jspb.Message.setField(this, 14, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearBootloaderHash = function () {\n  return jspb.Message.setField(this, 14, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasBootloaderHash = function () {\n  return jspb.Message.getField(this, 14) != null;\n};\n/**\n * optional bool imported = 15;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getImported = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 15, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setImported = function (value) {\n  return jspb.Message.setField(this, 15, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearImported = function () {\n  return jspb.Message.setField(this, 15, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasImported = function () {\n  return jspb.Message.getField(this, 15) != null;\n};\n/**\n * optional bool pin_cached = 16;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getPinCached = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 16, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setPinCached = function (value) {\n  return jspb.Message.setField(this, 16, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearPinCached = function () {\n  return jspb.Message.setField(this, 16, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasPinCached = function () {\n  return jspb.Message.getField(this, 16) != null;\n};\n/**\n * optional bool passphrase_cached = 17;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getPassphraseCached = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 17, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setPassphraseCached = function (value) {\n  return jspb.Message.setField(this, 17, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearPassphraseCached = function () {\n  return jspb.Message.setField(this, 17, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasPassphraseCached = function () {\n  return jspb.Message.getField(this, 17) != null;\n};\n/**\n * repeated PolicyType policies = 18;\n * @return {!Array<!proto.PolicyType>}\n */\n\n\nproto.Features.prototype.getPoliciesList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, types_pb.PolicyType, 18);\n};\n/**\n * @param {!Array<!proto.PolicyType>} value\n * @return {!proto.Features} returns this\n*/\n\n\nproto.Features.prototype.setPoliciesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 18, value);\n};\n/**\n * @param {!proto.PolicyType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.PolicyType}\n */\n\n\nproto.Features.prototype.addPolicies = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.PolicyType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearPoliciesList = function () {\n  return this.setPoliciesList([]);\n};\n/**\n * optional string model = 21;\n * @return {string}\n */\n\n\nproto.Features.prototype.getModel = function () {\n  return jspb.Message.getFieldWithDefault(this, 21, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setModel = function (value) {\n  return jspb.Message.setField(this, 21, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearModel = function () {\n  return jspb.Message.setField(this, 21, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasModel = function () {\n  return jspb.Message.getField(this, 21) != null;\n};\n/**\n * optional string firmware_variant = 22;\n * @return {string}\n */\n\n\nproto.Features.prototype.getFirmwareVariant = function () {\n  return jspb.Message.getFieldWithDefault(this, 22, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setFirmwareVariant = function (value) {\n  return jspb.Message.setField(this, 22, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearFirmwareVariant = function () {\n  return jspb.Message.setField(this, 22, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasFirmwareVariant = function () {\n  return jspb.Message.getField(this, 22) != null;\n};\n/**\n * optional bytes firmware_hash = 23;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.Features.prototype.getFirmwareHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 23, \"\");\n};\n/**\n * optional bytes firmware_hash = 23;\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {string}\n */\n\n\nproto.Features.prototype.getFirmwareHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getFirmwareHash());\n};\n/**\n * optional bytes firmware_hash = 23;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.Features.prototype.getFirmwareHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getFirmwareHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setFirmwareHash = function (value) {\n  return jspb.Message.setField(this, 23, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearFirmwareHash = function () {\n  return jspb.Message.setField(this, 23, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasFirmwareHash = function () {\n  return jspb.Message.getField(this, 23) != null;\n};\n/**\n * optional bool no_backup = 24;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getNoBackup = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 24, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setNoBackup = function (value) {\n  return jspb.Message.setField(this, 24, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearNoBackup = function () {\n  return jspb.Message.setField(this, 24, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasNoBackup = function () {\n  return jspb.Message.getField(this, 24) != null;\n};\n/**\n * optional bool wipe_code_protection = 25;\n * @return {boolean}\n */\n\n\nproto.Features.prototype.getWipeCodeProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 25, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.setWipeCodeProtection = function (value) {\n  return jspb.Message.setField(this, 25, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\n\n\nproto.Features.prototype.clearWipeCodeProtection = function () {\n  return jspb.Message.setField(this, 25, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Features.prototype.hasWipeCodeProtection = function () {\n  return jspb.Message.getField(this, 25) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.GetCoinTable.prototype.toObject = function (opt_includeInstance) {\n    return proto.GetCoinTable.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.GetCoinTable} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.GetCoinTable.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      start: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      end: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetCoinTable}\n */\n\n\nproto.GetCoinTable.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetCoinTable();\n  return proto.GetCoinTable.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetCoinTable} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetCoinTable}\n */\n\n\nproto.GetCoinTable.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setStart(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setEnd(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.GetCoinTable.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.GetCoinTable.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetCoinTable} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.GetCoinTable.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n};\n/**\n * optional uint32 start = 1;\n * @return {number}\n */\n\n\nproto.GetCoinTable.prototype.getStart = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.GetCoinTable} returns this\n */\n\n\nproto.GetCoinTable.prototype.setStart = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetCoinTable} returns this\n */\n\n\nproto.GetCoinTable.prototype.clearStart = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetCoinTable.prototype.hasStart = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 end = 2;\n * @return {number}\n */\n\n\nproto.GetCoinTable.prototype.getEnd = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.GetCoinTable} returns this\n */\n\n\nproto.GetCoinTable.prototype.setEnd = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetCoinTable} returns this\n */\n\n\nproto.GetCoinTable.prototype.clearEnd = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetCoinTable.prototype.hasEnd = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.CoinTable.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CoinTable.prototype.toObject = function (opt_includeInstance) {\n    return proto.CoinTable.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CoinTable} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CoinTable.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      tableList: jspb.Message.toObjectList(msg.getTableList(), types_pb.CoinType.toObject, includeInstance),\n      numCoins: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      chunkSize: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinTable}\n */\n\n\nproto.CoinTable.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinTable();\n  return proto.CoinTable.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinTable} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinTable}\n */\n\n\nproto.CoinTable.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new types_pb.CoinType();\n        reader.readMessage(value, types_pb.CoinType.deserializeBinaryFromReader);\n        msg.addTable(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setNumCoins(value);\n        break;\n\n      case 3:\n        var value = reader.readUint32();\n        msg.setChunkSize(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CoinTable.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinTable.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinTable} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CoinTable.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTableList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, types_pb.CoinType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * repeated CoinType table = 1;\n * @return {!Array<!proto.CoinType>}\n */\n\n\nproto.CoinTable.prototype.getTableList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, types_pb.CoinType, 1);\n};\n/**\n * @param {!Array<!proto.CoinType>} value\n * @return {!proto.CoinTable} returns this\n*/\n\n\nproto.CoinTable.prototype.setTableList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.CoinType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.CoinType}\n */\n\n\nproto.CoinTable.prototype.addTable = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoinType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CoinTable} returns this\n */\n\n\nproto.CoinTable.prototype.clearTableList = function () {\n  return this.setTableList([]);\n};\n/**\n * optional uint32 num_coins = 2;\n * @return {number}\n */\n\n\nproto.CoinTable.prototype.getNumCoins = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinTable} returns this\n */\n\n\nproto.CoinTable.prototype.setNumCoins = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinTable} returns this\n */\n\n\nproto.CoinTable.prototype.clearNumCoins = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinTable.prototype.hasNumCoins = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint32 chunk_size = 3;\n * @return {number}\n */\n\n\nproto.CoinTable.prototype.getChunkSize = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CoinTable} returns this\n */\n\n\nproto.CoinTable.prototype.setChunkSize = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinTable} returns this\n */\n\n\nproto.CoinTable.prototype.clearChunkSize = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CoinTable.prototype.hasChunkSize = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ClearSession.prototype.toObject = function (opt_includeInstance) {\n    return proto.ClearSession.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ClearSession} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ClearSession.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClearSession}\n */\n\n\nproto.ClearSession.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClearSession();\n  return proto.ClearSession.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClearSession} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClearSession}\n */\n\n\nproto.ClearSession.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ClearSession.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ClearSession.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClearSession} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ClearSession.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ApplySettings.prototype.toObject = function (opt_includeInstance) {\n    return proto.ApplySettings.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ApplySettings} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ApplySettings.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      language: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      label: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      usePassphrase: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      autoLockDelayMs: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      u2fCounter: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ApplySettings}\n */\n\n\nproto.ApplySettings.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ApplySettings();\n  return proto.ApplySettings.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ApplySettings} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ApplySettings}\n */\n\n\nproto.ApplySettings.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setLanguage(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setLabel(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setUsePassphrase(value);\n        break;\n\n      case 4:\n        var value = reader.readUint32();\n        msg.setAutoLockDelayMs(value);\n        break;\n\n      case 5:\n        var value = reader.readUint32();\n        msg.setU2fCounter(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ApplySettings.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ApplySettings.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ApplySettings} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ApplySettings.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeUint32(5, f);\n  }\n};\n/**\n * optional string language = 1;\n * @return {string}\n */\n\n\nproto.ApplySettings.prototype.getLanguage = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.setLanguage = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.clearLanguage = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ApplySettings.prototype.hasLanguage = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string label = 2;\n * @return {string}\n */\n\n\nproto.ApplySettings.prototype.getLabel = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.setLabel = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.clearLabel = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ApplySettings.prototype.hasLabel = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool use_passphrase = 3;\n * @return {boolean}\n */\n\n\nproto.ApplySettings.prototype.getUsePassphrase = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.setUsePassphrase = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.clearUsePassphrase = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ApplySettings.prototype.hasUsePassphrase = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional uint32 auto_lock_delay_ms = 4;\n * @return {number}\n */\n\n\nproto.ApplySettings.prototype.getAutoLockDelayMs = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.setAutoLockDelayMs = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.clearAutoLockDelayMs = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ApplySettings.prototype.hasAutoLockDelayMs = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 u2f_counter = 5;\n * @return {number}\n */\n\n\nproto.ApplySettings.prototype.getU2fCounter = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.setU2fCounter = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\n\n\nproto.ApplySettings.prototype.clearU2fCounter = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ApplySettings.prototype.hasU2fCounter = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ChangePin.prototype.toObject = function (opt_includeInstance) {\n    return proto.ChangePin.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ChangePin} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ChangePin.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      remove: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ChangePin}\n */\n\n\nproto.ChangePin.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ChangePin();\n  return proto.ChangePin.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ChangePin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ChangePin}\n */\n\n\nproto.ChangePin.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBool();\n        msg.setRemove(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ChangePin.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ChangePin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ChangePin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ChangePin.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBool(1, f);\n  }\n};\n/**\n * optional bool remove = 1;\n * @return {boolean}\n */\n\n\nproto.ChangePin.prototype.getRemove = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 1, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ChangePin} returns this\n */\n\n\nproto.ChangePin.prototype.setRemove = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ChangePin} returns this\n */\n\n\nproto.ChangePin.prototype.clearRemove = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ChangePin.prototype.hasRemove = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Ping.prototype.toObject = function (opt_includeInstance) {\n    return proto.Ping.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Ping} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Ping.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      message: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      buttonProtection: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,\n      pinProtection: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      passphraseProtection: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n      wipeCodeProtection: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Ping}\n */\n\n\nproto.Ping.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Ping();\n  return proto.Ping.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Ping} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Ping}\n */\n\n\nproto.Ping.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setMessage(value);\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setButtonProtection(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setPinProtection(value);\n        break;\n\n      case 4:\n        var value = reader.readBool();\n        msg.setPassphraseProtection(value);\n        break;\n\n      case 5:\n        var value = reader.readBool();\n        msg.setWipeCodeProtection(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Ping.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Ping.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Ping} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Ping.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBool(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeBool(5, f);\n  }\n};\n/**\n * optional string message = 1;\n * @return {string}\n */\n\n\nproto.Ping.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bool button_protection = 2;\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.getButtonProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.setButtonProtection = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.clearButtonProtection = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.hasButtonProtection = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool pin_protection = 3;\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.getPinProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.setPinProtection = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.clearPinProtection = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.hasPinProtection = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bool passphrase_protection = 4;\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.getPassphraseProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 4, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.setPassphraseProtection = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.clearPassphraseProtection = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.hasPassphraseProtection = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional bool wipe_code_protection = 5;\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.getWipeCodeProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 5, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.setWipeCodeProtection = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\n\n\nproto.Ping.prototype.clearWipeCodeProtection = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Ping.prototype.hasWipeCodeProtection = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Success.prototype.toObject = function (opt_includeInstance) {\n    return proto.Success.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Success} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Success.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      message: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Success}\n */\n\n\nproto.Success.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Success();\n  return proto.Success.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Success} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Success}\n */\n\n\nproto.Success.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Success.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Success.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Success} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Success.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string message = 1;\n * @return {string}\n */\n\n\nproto.Success.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Success} returns this\n */\n\n\nproto.Success.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Success} returns this\n */\n\n\nproto.Success.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Success.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Failure.prototype.toObject = function (opt_includeInstance) {\n    return proto.Failure.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Failure} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Failure.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      code: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Failure}\n */\n\n\nproto.Failure.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Failure();\n  return proto.Failure.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Failure} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Failure}\n */\n\n\nproto.Failure.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readEnum();\n        msg.setCode(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Failure.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Failure.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Failure} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Failure.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional FailureType code = 1;\n * @return {!proto.FailureType}\n */\n\n\nproto.Failure.prototype.getCode = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 1);\n};\n/**\n * @param {!proto.FailureType} value\n * @return {!proto.Failure} returns this\n */\n\n\nproto.Failure.prototype.setCode = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Failure} returns this\n */\n\n\nproto.Failure.prototype.clearCode = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Failure.prototype.hasCode = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string message = 2;\n * @return {string}\n */\n\n\nproto.Failure.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Failure} returns this\n */\n\n\nproto.Failure.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Failure} returns this\n */\n\n\nproto.Failure.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Failure.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ButtonRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ButtonRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ButtonRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ButtonRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      code: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      data: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ButtonRequest}\n */\n\n\nproto.ButtonRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ButtonRequest();\n  return proto.ButtonRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ButtonRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ButtonRequest}\n */\n\n\nproto.ButtonRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readEnum();\n        msg.setCode(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ButtonRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ButtonRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ButtonRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ButtonRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional ButtonRequestType code = 1;\n * @return {!proto.ButtonRequestType}\n */\n\n\nproto.ButtonRequest.prototype.getCode = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 1);\n};\n/**\n * @param {!proto.ButtonRequestType} value\n * @return {!proto.ButtonRequest} returns this\n */\n\n\nproto.ButtonRequest.prototype.setCode = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ButtonRequest} returns this\n */\n\n\nproto.ButtonRequest.prototype.clearCode = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ButtonRequest.prototype.hasCode = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string data = 2;\n * @return {string}\n */\n\n\nproto.ButtonRequest.prototype.getData = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.ButtonRequest} returns this\n */\n\n\nproto.ButtonRequest.prototype.setData = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ButtonRequest} returns this\n */\n\n\nproto.ButtonRequest.prototype.clearData = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ButtonRequest.prototype.hasData = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ButtonAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.ButtonAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ButtonAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ButtonAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ButtonAck}\n */\n\n\nproto.ButtonAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ButtonAck();\n  return proto.ButtonAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ButtonAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ButtonAck}\n */\n\n\nproto.ButtonAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ButtonAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ButtonAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ButtonAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ButtonAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.PinMatrixRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.PinMatrixRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.PinMatrixRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.PinMatrixRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PinMatrixRequest}\n */\n\n\nproto.PinMatrixRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PinMatrixRequest();\n  return proto.PinMatrixRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PinMatrixRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PinMatrixRequest}\n */\n\n\nproto.PinMatrixRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readEnum();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.PinMatrixRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.PinMatrixRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PinMatrixRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.PinMatrixRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n};\n/**\n * optional PinMatrixRequestType type = 1;\n * @return {!proto.PinMatrixRequestType}\n */\n\n\nproto.PinMatrixRequest.prototype.getType = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 1);\n};\n/**\n * @param {!proto.PinMatrixRequestType} value\n * @return {!proto.PinMatrixRequest} returns this\n */\n\n\nproto.PinMatrixRequest.prototype.setType = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PinMatrixRequest} returns this\n */\n\n\nproto.PinMatrixRequest.prototype.clearType = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PinMatrixRequest.prototype.hasType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.PinMatrixAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.PinMatrixAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.PinMatrixAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.PinMatrixAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pin: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PinMatrixAck}\n */\n\n\nproto.PinMatrixAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PinMatrixAck();\n  return proto.PinMatrixAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PinMatrixAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PinMatrixAck}\n */\n\n\nproto.PinMatrixAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setPin(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.PinMatrixAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.PinMatrixAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PinMatrixAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.PinMatrixAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string pin = 1;\n * @return {string}\n */\n\n\nproto.PinMatrixAck.prototype.getPin = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.PinMatrixAck} returns this\n */\n\n\nproto.PinMatrixAck.prototype.setPin = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PinMatrixAck} returns this\n */\n\n\nproto.PinMatrixAck.prototype.clearPin = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PinMatrixAck.prototype.hasPin = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Cancel.prototype.toObject = function (opt_includeInstance) {\n    return proto.Cancel.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Cancel} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Cancel.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cancel}\n */\n\n\nproto.Cancel.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cancel();\n  return proto.Cancel.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cancel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cancel}\n */\n\n\nproto.Cancel.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Cancel.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Cancel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cancel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Cancel.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.PassphraseRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.PassphraseRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.PassphraseRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.PassphraseRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PassphraseRequest}\n */\n\n\nproto.PassphraseRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PassphraseRequest();\n  return proto.PassphraseRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PassphraseRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PassphraseRequest}\n */\n\n\nproto.PassphraseRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.PassphraseRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.PassphraseRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PassphraseRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.PassphraseRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.PassphraseAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.PassphraseAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.PassphraseAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.PassphraseAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      passphrase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PassphraseAck}\n */\n\n\nproto.PassphraseAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PassphraseAck();\n  return proto.PassphraseAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PassphraseAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PassphraseAck}\n */\n\n\nproto.PassphraseAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setPassphrase(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.PassphraseAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.PassphraseAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PassphraseAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.PassphraseAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string passphrase = 1;\n * @return {string}\n */\n\n\nproto.PassphraseAck.prototype.getPassphrase = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.PassphraseAck} returns this\n */\n\n\nproto.PassphraseAck.prototype.setPassphrase = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PassphraseAck} returns this\n */\n\n\nproto.PassphraseAck.prototype.clearPassphrase = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PassphraseAck.prototype.hasPassphrase = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.GetEntropy.prototype.toObject = function (opt_includeInstance) {\n    return proto.GetEntropy.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.GetEntropy} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.GetEntropy.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      size: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetEntropy}\n */\n\n\nproto.GetEntropy.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetEntropy();\n  return proto.GetEntropy.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetEntropy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetEntropy}\n */\n\n\nproto.GetEntropy.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setSize(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.GetEntropy.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.GetEntropy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetEntropy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.GetEntropy.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n};\n/**\n * required uint32 size = 1;\n * @return {number}\n */\n\n\nproto.GetEntropy.prototype.getSize = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.GetEntropy} returns this\n */\n\n\nproto.GetEntropy.prototype.setSize = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetEntropy} returns this\n */\n\n\nproto.GetEntropy.prototype.clearSize = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetEntropy.prototype.hasSize = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Entropy.prototype.toObject = function (opt_includeInstance) {\n    return proto.Entropy.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Entropy} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Entropy.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      entropy: msg.getEntropy_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Entropy}\n */\n\n\nproto.Entropy.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Entropy();\n  return proto.Entropy.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Entropy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Entropy}\n */\n\n\nproto.Entropy.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setEntropy(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Entropy.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Entropy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Entropy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Entropy.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * required bytes entropy = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.Entropy.prototype.getEntropy = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * required bytes entropy = 1;\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {string}\n */\n\n\nproto.Entropy.prototype.getEntropy_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getEntropy());\n};\n/**\n * required bytes entropy = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {!Uint8Array}\n */\n\n\nproto.Entropy.prototype.getEntropy_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getEntropy());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Entropy} returns this\n */\n\n\nproto.Entropy.prototype.setEntropy = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Entropy} returns this\n */\n\n\nproto.Entropy.prototype.clearEntropy = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Entropy.prototype.hasEntropy = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.GetPublicKey.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.GetPublicKey.prototype.toObject = function (opt_includeInstance) {\n    return proto.GetPublicKey.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.GetPublicKey} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.GetPublicKey.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      ecdsaCurveName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      showDisplay: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      coinName: jspb.Message.getFieldWithDefault(msg, 4, \"Bitcoin\"),\n      scriptType: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetPublicKey}\n */\n\n\nproto.GetPublicKey.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetPublicKey();\n  return proto.GetPublicKey.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetPublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetPublicKey}\n */\n\n\nproto.GetPublicKey.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setEcdsaCurveName(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setShowDisplay(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      case 5:\n        var value = reader.readEnum();\n        msg.setScriptType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.GetPublicKey.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.GetPublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetPublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.GetPublicKey.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeEnum(5, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.GetPublicKey.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional string ecdsa_curve_name = 2;\n * @return {string}\n */\n\n\nproto.GetPublicKey.prototype.getEcdsaCurveName = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.setEcdsaCurveName = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.clearEcdsaCurveName = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetPublicKey.prototype.hasEcdsaCurveName = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool show_display = 3;\n * @return {boolean}\n */\n\n\nproto.GetPublicKey.prototype.getShowDisplay = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.setShowDisplay = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.clearShowDisplay = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetPublicKey.prototype.hasShowDisplay = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string coin_name = 4;\n * @return {string}\n */\n\n\nproto.GetPublicKey.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetPublicKey.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional InputScriptType script_type = 5;\n * @return {!proto.InputScriptType}\n */\n\n\nproto.GetPublicKey.prototype.getScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 0);\n};\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.setScriptType = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\n\n\nproto.GetPublicKey.prototype.clearScriptType = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetPublicKey.prototype.hasScriptType = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.PublicKey.prototype.toObject = function (opt_includeInstance) {\n    return proto.PublicKey.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.PublicKey} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.PublicKey.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      node: (f = msg.getNode()) && types_pb.HDNodeType.toObject(includeInstance, f),\n      xpub: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PublicKey}\n */\n\n\nproto.PublicKey.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PublicKey();\n  return proto.PublicKey.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PublicKey}\n */\n\n\nproto.PublicKey.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new types_pb.HDNodeType();\n        reader.readMessage(value, types_pb.HDNodeType.deserializeBinaryFromReader);\n        msg.setNode(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setXpub(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.PublicKey.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.PublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.PublicKey.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getNode();\n\n  if (f != null) {\n    writer.writeMessage(1, f, types_pb.HDNodeType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * required HDNodeType node = 1;\n * @return {!proto.HDNodeType}\n */\n\n\nproto.PublicKey.prototype.getNode = function () {\n  return jspb.Message.getWrapperField(this, types_pb.HDNodeType, 1, 1);\n};\n/**\n * @param {!proto.HDNodeType} value\n * @return {!proto.PublicKey} returns this\n*/\n\n\nproto.PublicKey.prototype.setNode = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PublicKey} returns this\n */\n\n\nproto.PublicKey.prototype.clearNode = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PublicKey.prototype.hasNode = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string xpub = 2;\n * @return {string}\n */\n\n\nproto.PublicKey.prototype.getXpub = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.PublicKey} returns this\n */\n\n\nproto.PublicKey.prototype.setXpub = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.PublicKey} returns this\n */\n\n\nproto.PublicKey.prototype.clearXpub = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.PublicKey.prototype.hasXpub = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.GetAddress.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.GetAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.GetAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.GetAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.GetAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      coinName: jspb.Message.getFieldWithDefault(msg, 2, \"Bitcoin\"),\n      showDisplay: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      multisig: (f = msg.getMultisig()) && types_pb.MultisigRedeemScriptType.toObject(includeInstance, f),\n      scriptType: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetAddress}\n */\n\n\nproto.GetAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetAddress();\n  return proto.GetAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetAddress}\n */\n\n\nproto.GetAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setShowDisplay(value);\n        break;\n\n      case 4:\n        var value = new types_pb.MultisigRedeemScriptType();\n        reader.readMessage(value, types_pb.MultisigRedeemScriptType.deserializeBinaryFromReader);\n        msg.setMultisig(value);\n        break;\n\n      case 5:\n        var value = reader.readEnum();\n        msg.setScriptType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.GetAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.GetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.GetAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getMultisig();\n\n  if (f != null) {\n    writer.writeMessage(4, f, types_pb.MultisigRedeemScriptType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeEnum(5, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.GetAddress.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional string coin_name = 2;\n * @return {string}\n */\n\n\nproto.GetAddress.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetAddress.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool show_display = 3;\n * @return {boolean}\n */\n\n\nproto.GetAddress.prototype.getShowDisplay = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.setShowDisplay = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.clearShowDisplay = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetAddress.prototype.hasShowDisplay = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional MultisigRedeemScriptType multisig = 4;\n * @return {?proto.MultisigRedeemScriptType}\n */\n\n\nproto.GetAddress.prototype.getMultisig = function () {\n  return jspb.Message.getWrapperField(this, types_pb.MultisigRedeemScriptType, 4);\n};\n/**\n * @param {?proto.MultisigRedeemScriptType|undefined} value\n * @return {!proto.GetAddress} returns this\n*/\n\n\nproto.GetAddress.prototype.setMultisig = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.clearMultisig = function () {\n  return this.setMultisig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetAddress.prototype.hasMultisig = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional InputScriptType script_type = 5;\n * @return {!proto.InputScriptType}\n */\n\n\nproto.GetAddress.prototype.getScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 0);\n};\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.setScriptType = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\n\n\nproto.GetAddress.prototype.clearScriptType = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.GetAddress.prototype.hasScriptType = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.EthereumGetAddress.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumGetAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumGetAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumGetAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumGetAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumGetAddress}\n */\n\n\nproto.EthereumGetAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumGetAddress();\n  return proto.EthereumGetAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumGetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumGetAddress}\n */\n\n\nproto.EthereumGetAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setShowDisplay(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumGetAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumGetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumGetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumGetAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.EthereumGetAddress.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumGetAddress} returns this\n */\n\n\nproto.EthereumGetAddress.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumGetAddress} returns this\n */\n\n\nproto.EthereumGetAddress.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumGetAddress} returns this\n */\n\n\nproto.EthereumGetAddress.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\n\n\nproto.EthereumGetAddress.prototype.getShowDisplay = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.EthereumGetAddress} returns this\n */\n\n\nproto.EthereumGetAddress.prototype.setShowDisplay = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumGetAddress} returns this\n */\n\n\nproto.EthereumGetAddress.prototype.clearShowDisplay = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumGetAddress.prototype.hasShowDisplay = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Address.prototype.toObject = function (opt_includeInstance) {\n    return proto.Address.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Address} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Address.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Address}\n */\n\n\nproto.Address.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Address();\n  return proto.Address.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Address} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Address}\n */\n\n\nproto.Address.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Address.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Address.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Address} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Address.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string address = 1;\n * @return {string}\n */\n\n\nproto.Address.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.Address} returns this\n */\n\n\nproto.Address.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.Address} returns this\n */\n\n\nproto.Address.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Address.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: msg.getAddress_asB64(),\n      addressStr: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumAddress}\n */\n\n\nproto.EthereumAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumAddress();\n  return proto.EthereumAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumAddress}\n */\n\n\nproto.EthereumAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setAddressStr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * required bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumAddress.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * required bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\n\n\nproto.EthereumAddress.prototype.getAddress_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getAddress());\n};\n/**\n * required bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumAddress.prototype.getAddress_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getAddress());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumAddress} returns this\n */\n\n\nproto.EthereumAddress.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumAddress} returns this\n */\n\n\nproto.EthereumAddress.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumAddress.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string address_str = 2;\n * @return {string}\n */\n\n\nproto.EthereumAddress.prototype.getAddressStr = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.EthereumAddress} returns this\n */\n\n\nproto.EthereumAddress.prototype.setAddressStr = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumAddress} returns this\n */\n\n\nproto.EthereumAddress.prototype.clearAddressStr = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumAddress.prototype.hasAddressStr = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.WipeDevice.prototype.toObject = function (opt_includeInstance) {\n    return proto.WipeDevice.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.WipeDevice} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.WipeDevice.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.WipeDevice}\n */\n\n\nproto.WipeDevice.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.WipeDevice();\n  return proto.WipeDevice.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.WipeDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.WipeDevice}\n */\n\n\nproto.WipeDevice.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.WipeDevice.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.WipeDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.WipeDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.WipeDevice.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.LoadDevice.prototype.toObject = function (opt_includeInstance) {\n    return proto.LoadDevice.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.LoadDevice} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.LoadDevice.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      mnemonic: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      node: (f = msg.getNode()) && types_pb.HDNodeType.toObject(includeInstance, f),\n      pin: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      passphraseProtection: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n      language: jspb.Message.getFieldWithDefault(msg, 5, \"english\"),\n      label: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      skipChecksum: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n      u2fCounter: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoadDevice}\n */\n\n\nproto.LoadDevice.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoadDevice();\n  return proto.LoadDevice.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoadDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoadDevice}\n */\n\n\nproto.LoadDevice.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setMnemonic(value);\n        break;\n\n      case 2:\n        var value = new types_pb.HDNodeType();\n        reader.readMessage(value, types_pb.HDNodeType.deserializeBinaryFromReader);\n        msg.setNode(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setPin(value);\n        break;\n\n      case 4:\n        var value = reader.readBool();\n        msg.setPassphraseProtection(value);\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setLanguage(value);\n        break;\n\n      case 6:\n        var value = reader.readString();\n        msg.setLabel(value);\n        break;\n\n      case 7:\n        var value = reader.readBool();\n        msg.setSkipChecksum(value);\n        break;\n\n      case 8:\n        var value = reader.readUint32();\n        msg.setU2fCounter(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.LoadDevice.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.LoadDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoadDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.LoadDevice.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getNode();\n\n  if (f != null) {\n    writer.writeMessage(2, f, types_pb.HDNodeType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBool(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeString(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBool(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint32(8, f);\n  }\n};\n/**\n * optional string mnemonic = 1;\n * @return {string}\n */\n\n\nproto.LoadDevice.prototype.getMnemonic = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setMnemonic = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearMnemonic = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasMnemonic = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional HDNodeType node = 2;\n * @return {?proto.HDNodeType}\n */\n\n\nproto.LoadDevice.prototype.getNode = function () {\n  return jspb.Message.getWrapperField(this, types_pb.HDNodeType, 2);\n};\n/**\n * @param {?proto.HDNodeType|undefined} value\n * @return {!proto.LoadDevice} returns this\n*/\n\n\nproto.LoadDevice.prototype.setNode = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearNode = function () {\n  return this.setNode(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasNode = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string pin = 3;\n * @return {string}\n */\n\n\nproto.LoadDevice.prototype.getPin = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setPin = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearPin = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasPin = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bool passphrase_protection = 4;\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.getPassphraseProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 4, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setPassphraseProtection = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearPassphraseProtection = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasPassphraseProtection = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string language = 5;\n * @return {string}\n */\n\n\nproto.LoadDevice.prototype.getLanguage = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"english\");\n};\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setLanguage = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearLanguage = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasLanguage = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional string label = 6;\n * @return {string}\n */\n\n\nproto.LoadDevice.prototype.getLabel = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setLabel = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearLabel = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasLabel = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bool skip_checksum = 7;\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.getSkipChecksum = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 7, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setSkipChecksum = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearSkipChecksum = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasSkipChecksum = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint32 u2f_counter = 8;\n * @return {number}\n */\n\n\nproto.LoadDevice.prototype.getU2fCounter = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.setU2fCounter = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\n\n\nproto.LoadDevice.prototype.clearU2fCounter = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.LoadDevice.prototype.hasU2fCounter = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ResetDevice.prototype.toObject = function (opt_includeInstance) {\n    return proto.ResetDevice.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ResetDevice} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ResetDevice.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      displayRandom: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,\n      strength: jspb.Message.getFieldWithDefault(msg, 2, 256),\n      passphraseProtection: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      pinProtection: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n      language: jspb.Message.getFieldWithDefault(msg, 5, \"english\"),\n      label: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      noBackup: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n      autoLockDelayMs: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      u2fCounter: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ResetDevice}\n */\n\n\nproto.ResetDevice.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ResetDevice();\n  return proto.ResetDevice.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ResetDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ResetDevice}\n */\n\n\nproto.ResetDevice.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBool();\n        msg.setDisplayRandom(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setStrength(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setPassphraseProtection(value);\n        break;\n\n      case 4:\n        var value = reader.readBool();\n        msg.setPinProtection(value);\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setLanguage(value);\n        break;\n\n      case 6:\n        var value = reader.readString();\n        msg.setLabel(value);\n        break;\n\n      case 7:\n        var value = reader.readBool();\n        msg.setNoBackup(value);\n        break;\n\n      case 8:\n        var value = reader.readUint32();\n        msg.setAutoLockDelayMs(value);\n        break;\n\n      case 9:\n        var value = reader.readUint32();\n        msg.setU2fCounter(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ResetDevice.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ResetDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ResetDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ResetDevice.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBool(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBool(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeString(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBool(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint32(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeUint32(9, f);\n  }\n};\n/**\n * optional bool display_random = 1;\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.getDisplayRandom = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 1, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setDisplayRandom = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearDisplayRandom = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasDisplayRandom = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 strength = 2;\n * @return {number}\n */\n\n\nproto.ResetDevice.prototype.getStrength = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 256);\n};\n/**\n * @param {number} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setStrength = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearStrength = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasStrength = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool passphrase_protection = 3;\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.getPassphraseProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setPassphraseProtection = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearPassphraseProtection = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasPassphraseProtection = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bool pin_protection = 4;\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.getPinProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 4, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setPinProtection = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearPinProtection = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasPinProtection = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string language = 5;\n * @return {string}\n */\n\n\nproto.ResetDevice.prototype.getLanguage = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"english\");\n};\n/**\n * @param {string} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setLanguage = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearLanguage = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasLanguage = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional string label = 6;\n * @return {string}\n */\n\n\nproto.ResetDevice.prototype.getLabel = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setLabel = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearLabel = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasLabel = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bool no_backup = 7;\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.getNoBackup = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 7, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setNoBackup = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearNoBackup = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasNoBackup = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint32 auto_lock_delay_ms = 8;\n * @return {number}\n */\n\n\nproto.ResetDevice.prototype.getAutoLockDelayMs = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setAutoLockDelayMs = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearAutoLockDelayMs = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasAutoLockDelayMs = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 u2f_counter = 9;\n * @return {number}\n */\n\n\nproto.ResetDevice.prototype.getU2fCounter = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.setU2fCounter = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\n\n\nproto.ResetDevice.prototype.clearU2fCounter = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ResetDevice.prototype.hasU2fCounter = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EntropyRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.EntropyRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EntropyRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EntropyRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EntropyRequest}\n */\n\n\nproto.EntropyRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EntropyRequest();\n  return proto.EntropyRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EntropyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EntropyRequest}\n */\n\n\nproto.EntropyRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EntropyRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EntropyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EntropyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EntropyRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EntropyAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.EntropyAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EntropyAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EntropyAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      entropy: msg.getEntropy_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EntropyAck}\n */\n\n\nproto.EntropyAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EntropyAck();\n  return proto.EntropyAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EntropyAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EntropyAck}\n */\n\n\nproto.EntropyAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setEntropy(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EntropyAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EntropyAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EntropyAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EntropyAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes entropy = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EntropyAck.prototype.getEntropy = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes entropy = 1;\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {string}\n */\n\n\nproto.EntropyAck.prototype.getEntropy_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getEntropy());\n};\n/**\n * optional bytes entropy = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {!Uint8Array}\n */\n\n\nproto.EntropyAck.prototype.getEntropy_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getEntropy());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EntropyAck} returns this\n */\n\n\nproto.EntropyAck.prototype.setEntropy = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EntropyAck} returns this\n */\n\n\nproto.EntropyAck.prototype.clearEntropy = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EntropyAck.prototype.hasEntropy = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RecoveryDevice.prototype.toObject = function (opt_includeInstance) {\n    return proto.RecoveryDevice.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RecoveryDevice} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.RecoveryDevice.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      wordCount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      passphraseProtection: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,\n      pinProtection: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      language: jspb.Message.getFieldWithDefault(msg, 4, \"english\"),\n      label: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n      enforceWordlist: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,\n      useCharacterCipher: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n      autoLockDelayMs: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      u2fCounter: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      dryRun: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RecoveryDevice}\n */\n\n\nproto.RecoveryDevice.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RecoveryDevice();\n  return proto.RecoveryDevice.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RecoveryDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RecoveryDevice}\n */\n\n\nproto.RecoveryDevice.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setWordCount(value);\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setPassphraseProtection(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setPinProtection(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setLanguage(value);\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setLabel(value);\n        break;\n\n      case 6:\n        var value = reader.readBool();\n        msg.setEnforceWordlist(value);\n        break;\n\n      case 7:\n        var value = reader.readBool();\n        msg.setUseCharacterCipher(value);\n        break;\n\n      case 8:\n        var value = reader.readUint32();\n        msg.setAutoLockDelayMs(value);\n        break;\n\n      case 9:\n        var value = reader.readUint32();\n        msg.setU2fCounter(value);\n        break;\n\n      case 10:\n        var value = reader.readBool();\n        msg.setDryRun(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RecoveryDevice.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RecoveryDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RecoveryDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.RecoveryDevice.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBool(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBool(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint32(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeUint32(9, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeBool(10, f);\n  }\n};\n/**\n * optional uint32 word_count = 1;\n * @return {number}\n */\n\n\nproto.RecoveryDevice.prototype.getWordCount = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setWordCount = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearWordCount = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasWordCount = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bool passphrase_protection = 2;\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.getPassphraseProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setPassphraseProtection = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearPassphraseProtection = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasPassphraseProtection = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool pin_protection = 3;\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.getPinProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setPinProtection = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearPinProtection = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasPinProtection = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string language = 4;\n * @return {string}\n */\n\n\nproto.RecoveryDevice.prototype.getLanguage = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"english\");\n};\n/**\n * @param {string} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setLanguage = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearLanguage = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasLanguage = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string label = 5;\n * @return {string}\n */\n\n\nproto.RecoveryDevice.prototype.getLabel = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setLabel = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearLabel = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasLabel = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bool enforce_wordlist = 6;\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.getEnforceWordlist = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 6, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setEnforceWordlist = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearEnforceWordlist = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasEnforceWordlist = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bool use_character_cipher = 7;\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.getUseCharacterCipher = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 7, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setUseCharacterCipher = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearUseCharacterCipher = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasUseCharacterCipher = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint32 auto_lock_delay_ms = 8;\n * @return {number}\n */\n\n\nproto.RecoveryDevice.prototype.getAutoLockDelayMs = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setAutoLockDelayMs = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearAutoLockDelayMs = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasAutoLockDelayMs = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 u2f_counter = 9;\n * @return {number}\n */\n\n\nproto.RecoveryDevice.prototype.getU2fCounter = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setU2fCounter = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearU2fCounter = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasU2fCounter = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional bool dry_run = 10;\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.getDryRun = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 10, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.setDryRun = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\n\n\nproto.RecoveryDevice.prototype.clearDryRun = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RecoveryDevice.prototype.hasDryRun = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.WordRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.WordRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.WordRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.WordRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.WordRequest}\n */\n\n\nproto.WordRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.WordRequest();\n  return proto.WordRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.WordRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.WordRequest}\n */\n\n\nproto.WordRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.WordRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.WordRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.WordRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.WordRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.WordAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.WordAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.WordAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.WordAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      word: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.WordAck}\n */\n\n\nproto.WordAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.WordAck();\n  return proto.WordAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.WordAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.WordAck}\n */\n\n\nproto.WordAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setWord(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.WordAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.WordAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.WordAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.WordAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * required string word = 1;\n * @return {string}\n */\n\n\nproto.WordAck.prototype.getWord = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.WordAck} returns this\n */\n\n\nproto.WordAck.prototype.setWord = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.WordAck} returns this\n */\n\n\nproto.WordAck.prototype.clearWord = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.WordAck.prototype.hasWord = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CharacterRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.CharacterRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CharacterRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CharacterRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      wordPos: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      characterPos: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CharacterRequest}\n */\n\n\nproto.CharacterRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CharacterRequest();\n  return proto.CharacterRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CharacterRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CharacterRequest}\n */\n\n\nproto.CharacterRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setWordPos(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setCharacterPos(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CharacterRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CharacterRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CharacterRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CharacterRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n};\n/**\n * required uint32 word_pos = 1;\n * @return {number}\n */\n\n\nproto.CharacterRequest.prototype.getWordPos = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CharacterRequest} returns this\n */\n\n\nproto.CharacterRequest.prototype.setWordPos = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterRequest} returns this\n */\n\n\nproto.CharacterRequest.prototype.clearWordPos = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CharacterRequest.prototype.hasWordPos = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required uint32 character_pos = 2;\n * @return {number}\n */\n\n\nproto.CharacterRequest.prototype.getCharacterPos = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.CharacterRequest} returns this\n */\n\n\nproto.CharacterRequest.prototype.setCharacterPos = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterRequest} returns this\n */\n\n\nproto.CharacterRequest.prototype.clearCharacterPos = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CharacterRequest.prototype.hasCharacterPos = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CharacterAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.CharacterAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CharacterAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CharacterAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      character: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      pb_delete: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,\n      done: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CharacterAck}\n */\n\n\nproto.CharacterAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CharacterAck();\n  return proto.CharacterAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CharacterAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CharacterAck}\n */\n\n\nproto.CharacterAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setCharacter(value);\n        break;\n\n      case 2:\n        var value = reader.readBool();\n        msg.setDelete(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setDone(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CharacterAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CharacterAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CharacterAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CharacterAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBool(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional string character = 1;\n * @return {string}\n */\n\n\nproto.CharacterAck.prototype.getCharacter = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CharacterAck} returns this\n */\n\n\nproto.CharacterAck.prototype.setCharacter = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterAck} returns this\n */\n\n\nproto.CharacterAck.prototype.clearCharacter = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CharacterAck.prototype.hasCharacter = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bool delete = 2;\n * @return {boolean}\n */\n\n\nproto.CharacterAck.prototype.getDelete = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 2, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CharacterAck} returns this\n */\n\n\nproto.CharacterAck.prototype.setDelete = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterAck} returns this\n */\n\n\nproto.CharacterAck.prototype.clearDelete = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CharacterAck.prototype.hasDelete = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool done = 3;\n * @return {boolean}\n */\n\n\nproto.CharacterAck.prototype.getDone = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CharacterAck} returns this\n */\n\n\nproto.CharacterAck.prototype.setDone = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterAck} returns this\n */\n\n\nproto.CharacterAck.prototype.clearDone = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CharacterAck.prototype.hasDone = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.SignMessage.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SignMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.SignMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SignMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SignMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      message: msg.getMessage_asB64(),\n      coinName: jspb.Message.getFieldWithDefault(msg, 3, \"Bitcoin\"),\n      scriptType: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignMessage}\n */\n\n\nproto.SignMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignMessage();\n  return proto.SignMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignMessage}\n */\n\n\nproto.SignMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      case 4:\n        var value = reader.readEnum();\n        msg.setScriptType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SignMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SignMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SignMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeEnum(4, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.SignMessage.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * required bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.SignMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * required bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.SignMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * required bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.SignMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string coin_name = 3;\n * @return {string}\n */\n\n\nproto.SignMessage.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignMessage.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional InputScriptType script_type = 4;\n * @return {!proto.InputScriptType}\n */\n\n\nproto.SignMessage.prototype.getScriptType = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 0);\n};\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.setScriptType = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignMessage} returns this\n */\n\n\nproto.SignMessage.prototype.clearScriptType = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignMessage.prototype.hasScriptType = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.VerifyMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.VerifyMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.VerifyMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.VerifyMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      signature: msg.getSignature_asB64(),\n      message: msg.getMessage_asB64(),\n      coinName: jspb.Message.getFieldWithDefault(msg, 4, \"Bitcoin\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.VerifyMessage}\n */\n\n\nproto.VerifyMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.VerifyMessage();\n  return proto.VerifyMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.VerifyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.VerifyMessage}\n */\n\n\nproto.VerifyMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.VerifyMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.VerifyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.VerifyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.VerifyMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.VerifyMessage.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.VerifyMessage.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.VerifyMessage.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.VerifyMessage.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.VerifyMessage.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.VerifyMessage.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.VerifyMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.VerifyMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.VerifyMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.VerifyMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string coin_name = 4;\n * @return {string}\n */\n\n\nproto.VerifyMessage.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\n\n\nproto.VerifyMessage.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.VerifyMessage.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.MessageSignature.prototype.toObject = function (opt_includeInstance) {\n    return proto.MessageSignature.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.MessageSignature} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.MessageSignature.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MessageSignature}\n */\n\n\nproto.MessageSignature.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MessageSignature();\n  return proto.MessageSignature.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MessageSignature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MessageSignature}\n */\n\n\nproto.MessageSignature.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.MessageSignature.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.MessageSignature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MessageSignature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.MessageSignature.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.MessageSignature.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.MessageSignature} returns this\n */\n\n\nproto.MessageSignature.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.MessageSignature} returns this\n */\n\n\nproto.MessageSignature.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.MessageSignature.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.MessageSignature.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.MessageSignature.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.MessageSignature.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.MessageSignature} returns this\n */\n\n\nproto.MessageSignature.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.MessageSignature} returns this\n */\n\n\nproto.MessageSignature.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.MessageSignature.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.EncryptMessage.repeatedFields_ = [4];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EncryptMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.EncryptMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EncryptMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EncryptMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pubkey: msg.getPubkey_asB64(),\n      message: msg.getMessage_asB64(),\n      displayOnly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n      coinName: jspb.Message.getFieldWithDefault(msg, 5, \"Bitcoin\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EncryptMessage}\n */\n\n\nproto.EncryptMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EncryptMessage();\n  return proto.EncryptMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EncryptMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EncryptMessage}\n */\n\n\nproto.EncryptMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setPubkey(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setDisplayOnly(value);\n        break;\n\n      case 4:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 5:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EncryptMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EncryptMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EncryptMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * optional bytes pubkey = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EncryptMessage.prototype.getPubkey = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes pubkey = 1;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\n\n\nproto.EncryptMessage.prototype.getPubkey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPubkey());\n};\n/**\n * optional bytes pubkey = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptMessage.prototype.getPubkey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPubkey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.setPubkey = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.clearPubkey = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptMessage.prototype.hasPubkey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EncryptMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.EncryptMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * optional bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool display_only = 3;\n * @return {boolean}\n */\n\n\nproto.EncryptMessage.prototype.getDisplayOnly = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.setDisplayOnly = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.clearDisplayOnly = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptMessage.prototype.hasDisplayOnly = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * repeated uint32 address_n = 4;\n * @return {!Array<number>}\n */\n\n\nproto.EncryptMessage.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 4);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional string coin_name = 5;\n * @return {string}\n */\n\n\nproto.EncryptMessage.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\n\n\nproto.EncryptMessage.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptMessage.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EncryptedMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.EncryptedMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EncryptedMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EncryptedMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      nonce: msg.getNonce_asB64(),\n      message: msg.getMessage_asB64(),\n      hmac: msg.getHmac_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EncryptedMessage}\n */\n\n\nproto.EncryptedMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EncryptedMessage();\n  return proto.EncryptedMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EncryptedMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EncryptedMessage}\n */\n\n\nproto.EncryptedMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setNonce(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setHmac(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptedMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EncryptedMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EncryptedMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EncryptedMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional bytes nonce = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EncryptedMessage.prototype.getNonce = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes nonce = 1;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\n\n\nproto.EncryptedMessage.prototype.getNonce_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getNonce());\n};\n/**\n * optional bytes nonce = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptedMessage.prototype.getNonce_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getNonce());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptedMessage} returns this\n */\n\n\nproto.EncryptedMessage.prototype.setNonce = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptedMessage} returns this\n */\n\n\nproto.EncryptedMessage.prototype.clearNonce = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptedMessage.prototype.hasNonce = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EncryptedMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.EncryptedMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * optional bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptedMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptedMessage} returns this\n */\n\n\nproto.EncryptedMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptedMessage} returns this\n */\n\n\nproto.EncryptedMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptedMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes hmac = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EncryptedMessage.prototype.getHmac = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes hmac = 3;\n * This is a type-conversion wrapper around `getHmac()`\n * @return {string}\n */\n\n\nproto.EncryptedMessage.prototype.getHmac_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getHmac());\n};\n/**\n * optional bytes hmac = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHmac()`\n * @return {!Uint8Array}\n */\n\n\nproto.EncryptedMessage.prototype.getHmac_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getHmac());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptedMessage} returns this\n */\n\n\nproto.EncryptedMessage.prototype.setHmac = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptedMessage} returns this\n */\n\n\nproto.EncryptedMessage.prototype.clearHmac = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EncryptedMessage.prototype.hasHmac = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.DecryptMessage.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DecryptMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.DecryptMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DecryptMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DecryptMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      nonce: msg.getNonce_asB64(),\n      message: msg.getMessage_asB64(),\n      hmac: msg.getHmac_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DecryptMessage}\n */\n\n\nproto.DecryptMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DecryptMessage();\n  return proto.DecryptMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DecryptMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DecryptMessage}\n */\n\n\nproto.DecryptMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setNonce(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      case 4:\n        var value = reader.readBytes();\n        msg.setHmac(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DecryptMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DecryptMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DecryptMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DecryptMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBytes(4, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.DecryptMessage.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional bytes nonce = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DecryptMessage.prototype.getNonce = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes nonce = 2;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\n\n\nproto.DecryptMessage.prototype.getNonce_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getNonce());\n};\n/**\n * optional bytes nonce = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\n\n\nproto.DecryptMessage.prototype.getNonce_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getNonce());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.setNonce = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.clearNonce = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DecryptMessage.prototype.hasNonce = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DecryptMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.DecryptMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.DecryptMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DecryptMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bytes hmac = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DecryptMessage.prototype.getHmac = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * optional bytes hmac = 4;\n * This is a type-conversion wrapper around `getHmac()`\n * @return {string}\n */\n\n\nproto.DecryptMessage.prototype.getHmac_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getHmac());\n};\n/**\n * optional bytes hmac = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHmac()`\n * @return {!Uint8Array}\n */\n\n\nproto.DecryptMessage.prototype.getHmac_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getHmac());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.setHmac = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptMessage} returns this\n */\n\n\nproto.DecryptMessage.prototype.clearHmac = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DecryptMessage.prototype.hasHmac = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DecryptedMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.DecryptedMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DecryptedMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DecryptedMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      message: msg.getMessage_asB64(),\n      address: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DecryptedMessage}\n */\n\n\nproto.DecryptedMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DecryptedMessage();\n  return proto.DecryptedMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DecryptedMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DecryptedMessage}\n */\n\n\nproto.DecryptedMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DecryptedMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DecryptedMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DecryptedMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DecryptedMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional bytes message = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DecryptedMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes message = 1;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.DecryptedMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * optional bytes message = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.DecryptedMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptedMessage} returns this\n */\n\n\nproto.DecryptedMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptedMessage} returns this\n */\n\n\nproto.DecryptedMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DecryptedMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string address = 2;\n * @return {string}\n */\n\n\nproto.DecryptedMessage.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DecryptedMessage} returns this\n */\n\n\nproto.DecryptedMessage.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptedMessage} returns this\n */\n\n\nproto.DecryptedMessage.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DecryptedMessage.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.CipherKeyValue.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CipherKeyValue.prototype.toObject = function (opt_includeInstance) {\n    return proto.CipherKeyValue.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CipherKeyValue} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CipherKeyValue.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      key: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      value: msg.getValue_asB64(),\n      encrypt: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n      askOnEncrypt: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,\n      askOnDecrypt: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,\n      iv: msg.getIv_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CipherKeyValue}\n */\n\n\nproto.CipherKeyValue.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CipherKeyValue();\n  return proto.CipherKeyValue.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CipherKeyValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CipherKeyValue}\n */\n\n\nproto.CipherKeyValue.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setKey(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setValue(value);\n        break;\n\n      case 4:\n        var value = reader.readBool();\n        msg.setEncrypt(value);\n        break;\n\n      case 5:\n        var value = reader.readBool();\n        msg.setAskOnEncrypt(value);\n        break;\n\n      case 6:\n        var value = reader.readBool();\n        msg.setAskOnDecrypt(value);\n        break;\n\n      case 7:\n        var value = reader.readBytes();\n        msg.setIv(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CipherKeyValue.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CipherKeyValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CipherKeyValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CipherKeyValue.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBool(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeBool(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBool(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBytes(7, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.CipherKeyValue.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional string key = 2;\n * @return {string}\n */\n\n\nproto.CipherKeyValue.prototype.getKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setKey = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearKey = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.hasKey = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes value = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.CipherKeyValue.prototype.getValue = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes value = 3;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\n\n\nproto.CipherKeyValue.prototype.getValue_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getValue());\n};\n/**\n * optional bytes value = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.CipherKeyValue.prototype.getValue_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getValue());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setValue = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearValue = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bool encrypt = 4;\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.getEncrypt = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 4, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setEncrypt = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearEncrypt = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.hasEncrypt = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional bool ask_on_encrypt = 5;\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.getAskOnEncrypt = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 5, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setAskOnEncrypt = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearAskOnEncrypt = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.hasAskOnEncrypt = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bool ask_on_decrypt = 6;\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.getAskOnDecrypt = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 6, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setAskOnDecrypt = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearAskOnDecrypt = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.hasAskOnDecrypt = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bytes iv = 7;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.CipherKeyValue.prototype.getIv = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"\");\n};\n/**\n * optional bytes iv = 7;\n * This is a type-conversion wrapper around `getIv()`\n * @return {string}\n */\n\n\nproto.CipherKeyValue.prototype.getIv_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getIv());\n};\n/**\n * optional bytes iv = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getIv()`\n * @return {!Uint8Array}\n */\n\n\nproto.CipherKeyValue.prototype.getIv_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getIv());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.setIv = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\n\n\nproto.CipherKeyValue.prototype.clearIv = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipherKeyValue.prototype.hasIv = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CipheredKeyValue.prototype.toObject = function (opt_includeInstance) {\n    return proto.CipheredKeyValue.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CipheredKeyValue} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CipheredKeyValue.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      value: msg.getValue_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CipheredKeyValue}\n */\n\n\nproto.CipheredKeyValue.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CipheredKeyValue();\n  return proto.CipheredKeyValue.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CipheredKeyValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CipheredKeyValue}\n */\n\n\nproto.CipheredKeyValue.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CipheredKeyValue.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CipheredKeyValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CipheredKeyValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CipheredKeyValue.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.CipheredKeyValue.prototype.getValue = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\n\n\nproto.CipheredKeyValue.prototype.getValue_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getValue());\n};\n/**\n * optional bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.CipheredKeyValue.prototype.getValue_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getValue());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CipheredKeyValue} returns this\n */\n\n\nproto.CipheredKeyValue.prototype.setValue = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipheredKeyValue} returns this\n */\n\n\nproto.CipheredKeyValue.prototype.clearValue = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.CipheredKeyValue.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SignTx.prototype.toObject = function (opt_includeInstance) {\n    return proto.SignTx.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SignTx} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SignTx.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      outputsCount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      inputsCount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      coinName: jspb.Message.getFieldWithDefault(msg, 3, \"Bitcoin\"),\n      version: jspb.Message.getFieldWithDefault(msg, 4, 1),\n      lockTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      expiry: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n      overwintered: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n      versionGroupId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      branchId: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignTx}\n */\n\n\nproto.SignTx.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignTx();\n  return proto.SignTx.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignTx}\n */\n\n\nproto.SignTx.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setOutputsCount(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setInputsCount(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setCoinName(value);\n        break;\n\n      case 4:\n        var value = reader.readUint32();\n        msg.setVersion(value);\n        break;\n\n      case 5:\n        var value = reader.readUint32();\n        msg.setLockTime(value);\n        break;\n\n      case 6:\n        var value = reader.readUint32();\n        msg.setExpiry(value);\n        break;\n\n      case 7:\n        var value = reader.readBool();\n        msg.setOverwintered(value);\n        break;\n\n      case 8:\n        var value = reader.readUint32();\n        msg.setVersionGroupId(value);\n        break;\n\n      case 10:\n        var value = reader.readUint32();\n        msg.setBranchId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SignTx.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SignTx.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeUint32(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeUint32(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeUint32(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBool(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint32(8, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeUint32(10, f);\n  }\n};\n/**\n * required uint32 outputs_count = 1;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getOutputsCount = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setOutputsCount = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearOutputsCount = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasOutputsCount = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required uint32 inputs_count = 2;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getInputsCount = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setInputsCount = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearInputsCount = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasInputsCount = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string coin_name = 3;\n * @return {string}\n */\n\n\nproto.SignTx.prototype.getCoinName = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"Bitcoin\");\n};\n/**\n * @param {string} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setCoinName = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearCoinName = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasCoinName = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional uint32 version = 4;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getVersion = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, 1);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setVersion = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearVersion = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasVersion = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 lock_time = 5;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getLockTime = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setLockTime = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearLockTime = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasLockTime = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional uint32 expiry = 6;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getExpiry = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setExpiry = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearExpiry = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasExpiry = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bool overwintered = 7;\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.getOverwintered = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 7, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setOverwintered = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearOverwintered = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasOverwintered = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint32 version_group_id = 8;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getVersionGroupId = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setVersionGroupId = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearVersionGroupId = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasVersionGroupId = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional uint32 branch_id = 10;\n * @return {number}\n */\n\n\nproto.SignTx.prototype.getBranchId = function () {\n  return jspb.Message.getFieldWithDefault(this, 10, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.setBranchId = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\n\n\nproto.SignTx.prototype.clearBranchId = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignTx.prototype.hasBranchId = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      requestType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      details: (f = msg.getDetails()) && types_pb.TxRequestDetailsType.toObject(includeInstance, f),\n      serialized: (f = msg.getSerialized()) && types_pb.TxRequestSerializedType.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxRequest}\n */\n\n\nproto.TxRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxRequest();\n  return proto.TxRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxRequest}\n */\n\n\nproto.TxRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readEnum();\n        msg.setRequestType(value);\n        break;\n\n      case 2:\n        var value = new types_pb.TxRequestDetailsType();\n        reader.readMessage(value, types_pb.TxRequestDetailsType.deserializeBinaryFromReader);\n        msg.setDetails(value);\n        break;\n\n      case 3:\n        var value = new types_pb.TxRequestSerializedType();\n        reader.readMessage(value, types_pb.TxRequestSerializedType.deserializeBinaryFromReader);\n        msg.setSerialized(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getDetails();\n\n  if (f != null) {\n    writer.writeMessage(2, f, types_pb.TxRequestDetailsType.serializeBinaryToWriter);\n  }\n\n  f = message.getSerialized();\n\n  if (f != null) {\n    writer.writeMessage(3, f, types_pb.TxRequestSerializedType.serializeBinaryToWriter);\n  }\n};\n/**\n * optional RequestType request_type = 1;\n * @return {!proto.RequestType}\n */\n\n\nproto.TxRequest.prototype.getRequestType = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {!proto.RequestType} value\n * @return {!proto.TxRequest} returns this\n */\n\n\nproto.TxRequest.prototype.setRequestType = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequest} returns this\n */\n\n\nproto.TxRequest.prototype.clearRequestType = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequest.prototype.hasRequestType = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional TxRequestDetailsType details = 2;\n * @return {?proto.TxRequestDetailsType}\n */\n\n\nproto.TxRequest.prototype.getDetails = function () {\n  return jspb.Message.getWrapperField(this, types_pb.TxRequestDetailsType, 2);\n};\n/**\n * @param {?proto.TxRequestDetailsType|undefined} value\n * @return {!proto.TxRequest} returns this\n*/\n\n\nproto.TxRequest.prototype.setDetails = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxRequest} returns this\n */\n\n\nproto.TxRequest.prototype.clearDetails = function () {\n  return this.setDetails(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequest.prototype.hasDetails = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional TxRequestSerializedType serialized = 3;\n * @return {?proto.TxRequestSerializedType}\n */\n\n\nproto.TxRequest.prototype.getSerialized = function () {\n  return jspb.Message.getWrapperField(this, types_pb.TxRequestSerializedType, 3);\n};\n/**\n * @param {?proto.TxRequestSerializedType|undefined} value\n * @return {!proto.TxRequest} returns this\n*/\n\n\nproto.TxRequest.prototype.setSerialized = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxRequest} returns this\n */\n\n\nproto.TxRequest.prototype.clearSerialized = function () {\n  return this.setSerialized(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxRequest.prototype.hasSerialized = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.TxAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.TxAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.TxAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.TxAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      tx: (f = msg.getTx()) && types_pb.TransactionType.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxAck}\n */\n\n\nproto.TxAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxAck();\n  return proto.TxAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxAck}\n */\n\n\nproto.TxAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new types_pb.TransactionType();\n        reader.readMessage(value, types_pb.TransactionType.deserializeBinaryFromReader);\n        msg.setTx(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.TxAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.TxAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.TxAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTx();\n\n  if (f != null) {\n    writer.writeMessage(1, f, types_pb.TransactionType.serializeBinaryToWriter);\n  }\n};\n/**\n * optional TransactionType tx = 1;\n * @return {?proto.TransactionType}\n */\n\n\nproto.TxAck.prototype.getTx = function () {\n  return jspb.Message.getWrapperField(this, types_pb.TransactionType, 1);\n};\n/**\n * @param {?proto.TransactionType|undefined} value\n * @return {!proto.TxAck} returns this\n*/\n\n\nproto.TxAck.prototype.setTx = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxAck} returns this\n */\n\n\nproto.TxAck.prototype.clearTx = function () {\n  return this.setTx(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.TxAck.prototype.hasTx = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.RawTxAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.RawTxAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.RawTxAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.RawTxAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      tx: (f = msg.getTx()) && types_pb.RawTransactionType.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RawTxAck}\n */\n\n\nproto.RawTxAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RawTxAck();\n  return proto.RawTxAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RawTxAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RawTxAck}\n */\n\n\nproto.RawTxAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new types_pb.RawTransactionType();\n        reader.readMessage(value, types_pb.RawTransactionType.deserializeBinaryFromReader);\n        msg.setTx(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.RawTxAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.RawTxAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RawTxAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.RawTxAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTx();\n\n  if (f != null) {\n    writer.writeMessage(1, f, types_pb.RawTransactionType.serializeBinaryToWriter);\n  }\n};\n/**\n * optional RawTransactionType tx = 1;\n * @return {?proto.RawTransactionType}\n */\n\n\nproto.RawTxAck.prototype.getTx = function () {\n  return jspb.Message.getWrapperField(this, types_pb.RawTransactionType, 1);\n};\n/**\n * @param {?proto.RawTransactionType|undefined} value\n * @return {!proto.RawTxAck} returns this\n*/\n\n\nproto.RawTxAck.prototype.setTx = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.RawTxAck} returns this\n */\n\n\nproto.RawTxAck.prototype.clearTx = function () {\n  return this.setTx(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.RawTxAck.prototype.hasTx = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.EthereumSignTx.repeatedFields_ = [1, 9];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumSignTx.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumSignTx.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumSignTx} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumSignTx.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      nonce: msg.getNonce_asB64(),\n      gasPrice: msg.getGasPrice_asB64(),\n      gasLimit: msg.getGasLimit_asB64(),\n      to: msg.getTo_asB64(),\n      value: msg.getValue_asB64(),\n      dataInitialChunk: msg.getDataInitialChunk_asB64(),\n      dataLength: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n      toAddressNList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,\n      addressType: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n      exchangeType: (f = msg.getExchangeType()) && types_pb.ExchangeType.toObject(includeInstance, f),\n      chainId: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n      maxFeePerGas: msg.getMaxFeePerGas_asB64(),\n      maxPriorityFeePerGas: msg.getMaxPriorityFeePerGas_asB64(),\n      tokenValue: msg.getTokenValue_asB64(),\n      tokenTo: msg.getTokenTo_asB64(),\n      tokenShortcut: (f = jspb.Message.getField(msg, 102)) == null ? undefined : f,\n      txType: (f = jspb.Message.getField(msg, 103)) == null ? undefined : f,\n      type: (f = jspb.Message.getField(msg, 104)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumSignTx}\n */\n\n\nproto.EthereumSignTx.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumSignTx();\n  return proto.EthereumSignTx.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumSignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumSignTx}\n */\n\n\nproto.EthereumSignTx.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setNonce(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setGasPrice(value);\n        break;\n\n      case 4:\n        var value = reader.readBytes();\n        msg.setGasLimit(value);\n        break;\n\n      case 5:\n        var value = reader.readBytes();\n        msg.setTo(value);\n        break;\n\n      case 6:\n        var value = reader.readBytes();\n        msg.setValue(value);\n        break;\n\n      case 7:\n        var value = reader.readBytes();\n        msg.setDataInitialChunk(value);\n        break;\n\n      case 8:\n        var value = reader.readUint32();\n        msg.setDataLength(value);\n        break;\n\n      case 9:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addToAddressN(values[i]);\n        }\n\n        break;\n\n      case 10:\n        var value = reader.readEnum();\n        msg.setAddressType(value);\n        break;\n\n      case 11:\n        var value = new types_pb.ExchangeType();\n        reader.readMessage(value, types_pb.ExchangeType.deserializeBinaryFromReader);\n        msg.setExchangeType(value);\n        break;\n\n      case 12:\n        var value = reader.readUint32();\n        msg.setChainId(value);\n        break;\n\n      case 13:\n        var value = reader.readBytes();\n        msg.setMaxFeePerGas(value);\n        break;\n\n      case 14:\n        var value = reader.readBytes();\n        msg.setMaxPriorityFeePerGas(value);\n        break;\n\n      case 100:\n        var value = reader.readBytes();\n        msg.setTokenValue(value);\n        break;\n\n      case 101:\n        var value = reader.readBytes();\n        msg.setTokenTo(value);\n        break;\n\n      case 102:\n        var value = reader.readString();\n        msg.setTokenShortcut(value);\n        break;\n\n      case 103:\n        var value = reader.readUint32();\n        msg.setTxType(value);\n        break;\n\n      case 104:\n        var value = reader.readUint32();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumSignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumSignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumSignTx.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBytes(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeBytes(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBytes(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeBytes(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeUint32(8, f);\n  }\n\n  f = message.getToAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(9, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeEnum(10, f);\n  }\n\n  f = message.getExchangeType();\n\n  if (f != null) {\n    writer.writeMessage(11, f, types_pb.ExchangeType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 12);\n\n  if (f != null) {\n    writer.writeUint32(12, f);\n  }\n\n  f = jspb.Message.getField(message, 13);\n\n  if (f != null) {\n    writer.writeBytes(13, f);\n  }\n\n  f = jspb.Message.getField(message, 14);\n\n  if (f != null) {\n    writer.writeBytes(14, f);\n  }\n\n  f = jspb.Message.getField(message, 100);\n\n  if (f != null) {\n    writer.writeBytes(100, f);\n  }\n\n  f = jspb.Message.getField(message, 101);\n\n  if (f != null) {\n    writer.writeBytes(101, f);\n  }\n\n  f = jspb.Message.getField(message, 102);\n\n  if (f != null) {\n    writer.writeString(102, f);\n  }\n\n  f = jspb.Message.getField(message, 103);\n\n  if (f != null) {\n    writer.writeUint32(103, f);\n  }\n\n  f = jspb.Message.getField(message, 104);\n\n  if (f != null) {\n    writer.writeUint32(104, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.EthereumSignTx.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * optional bytes nonce = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getNonce = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes nonce = 2;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getNonce_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getNonce());\n};\n/**\n * optional bytes nonce = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getNonce_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getNonce());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setNonce = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearNonce = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasNonce = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes gas_price = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getGasPrice = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes gas_price = 3;\n * This is a type-conversion wrapper around `getGasPrice()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getGasPrice_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getGasPrice());\n};\n/**\n * optional bytes gas_price = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGasPrice()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getGasPrice_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getGasPrice());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setGasPrice = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearGasPrice = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasGasPrice = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bytes gas_limit = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getGasLimit = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * optional bytes gas_limit = 4;\n * This is a type-conversion wrapper around `getGasLimit()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getGasLimit_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getGasLimit());\n};\n/**\n * optional bytes gas_limit = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGasLimit()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getGasLimit_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getGasLimit());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setGasLimit = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearGasLimit = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasGasLimit = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional bytes to = 5;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getTo = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * optional bytes to = 5;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getTo_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getTo());\n};\n/**\n * optional bytes to = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getTo_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getTo());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setTo = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearTo = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasTo = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bytes value = 6;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getValue = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * optional bytes value = 6;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getValue_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getValue());\n};\n/**\n * optional bytes value = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getValue_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getValue());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setValue = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearValue = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasValue = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional bytes data_initial_chunk = 7;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getDataInitialChunk = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"\");\n};\n/**\n * optional bytes data_initial_chunk = 7;\n * This is a type-conversion wrapper around `getDataInitialChunk()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getDataInitialChunk_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getDataInitialChunk());\n};\n/**\n * optional bytes data_initial_chunk = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDataInitialChunk()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getDataInitialChunk_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getDataInitialChunk());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setDataInitialChunk = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearDataInitialChunk = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasDataInitialChunk = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional uint32 data_length = 8;\n * @return {number}\n */\n\n\nproto.EthereumSignTx.prototype.getDataLength = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setDataLength = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearDataLength = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasDataLength = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * repeated uint32 to_address_n = 9;\n * @return {!Array<number>}\n */\n\n\nproto.EthereumSignTx.prototype.getToAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 9);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setToAddressNList = function (value) {\n  return jspb.Message.setField(this, 9, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.addToAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearToAddressNList = function () {\n  return this.setToAddressNList([]);\n};\n/**\n * optional OutputAddressType address_type = 10;\n * @return {!proto.OutputAddressType}\n */\n\n\nproto.EthereumSignTx.prototype.getAddressType = function () {\n  return jspb.Message.getFieldWithDefault(this, 10, 0);\n};\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setAddressType = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearAddressType = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasAddressType = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n/**\n * optional ExchangeType exchange_type = 11;\n * @return {?proto.ExchangeType}\n */\n\n\nproto.EthereumSignTx.prototype.getExchangeType = function () {\n  return jspb.Message.getWrapperField(this, types_pb.ExchangeType, 11);\n};\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.EthereumSignTx} returns this\n*/\n\n\nproto.EthereumSignTx.prototype.setExchangeType = function (value) {\n  return jspb.Message.setWrapperField(this, 11, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearExchangeType = function () {\n  return this.setExchangeType(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasExchangeType = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * optional uint32 chain_id = 12;\n * @return {number}\n */\n\n\nproto.EthereumSignTx.prototype.getChainId = function () {\n  return jspb.Message.getFieldWithDefault(this, 12, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setChainId = function (value) {\n  return jspb.Message.setField(this, 12, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearChainId = function () {\n  return jspb.Message.setField(this, 12, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasChainId = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * optional bytes max_fee_per_gas = 13;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getMaxFeePerGas = function () {\n  return jspb.Message.getFieldWithDefault(this, 13, \"\");\n};\n/**\n * optional bytes max_fee_per_gas = 13;\n * This is a type-conversion wrapper around `getMaxFeePerGas()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getMaxFeePerGas_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMaxFeePerGas());\n};\n/**\n * optional bytes max_fee_per_gas = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMaxFeePerGas()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getMaxFeePerGas_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMaxFeePerGas());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setMaxFeePerGas = function (value) {\n  return jspb.Message.setField(this, 13, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearMaxFeePerGas = function () {\n  return jspb.Message.setField(this, 13, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasMaxFeePerGas = function () {\n  return jspb.Message.getField(this, 13) != null;\n};\n/**\n * optional bytes max_priority_fee_per_gas = 14;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getMaxPriorityFeePerGas = function () {\n  return jspb.Message.getFieldWithDefault(this, 14, \"\");\n};\n/**\n * optional bytes max_priority_fee_per_gas = 14;\n * This is a type-conversion wrapper around `getMaxPriorityFeePerGas()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getMaxPriorityFeePerGas_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMaxPriorityFeePerGas());\n};\n/**\n * optional bytes max_priority_fee_per_gas = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMaxPriorityFeePerGas()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getMaxPriorityFeePerGas_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMaxPriorityFeePerGas());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setMaxPriorityFeePerGas = function (value) {\n  return jspb.Message.setField(this, 14, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearMaxPriorityFeePerGas = function () {\n  return jspb.Message.setField(this, 14, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasMaxPriorityFeePerGas = function () {\n  return jspb.Message.getField(this, 14) != null;\n};\n/**\n * optional bytes token_value = 100;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenValue = function () {\n  return jspb.Message.getFieldWithDefault(this, 100, \"\");\n};\n/**\n * optional bytes token_value = 100;\n * This is a type-conversion wrapper around `getTokenValue()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenValue_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getTokenValue());\n};\n/**\n * optional bytes token_value = 100;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenValue_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getTokenValue());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setTokenValue = function (value) {\n  return jspb.Message.setField(this, 100, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearTokenValue = function () {\n  return jspb.Message.setField(this, 100, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasTokenValue = function () {\n  return jspb.Message.getField(this, 100) != null;\n};\n/**\n * optional bytes token_to = 101;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenTo = function () {\n  return jspb.Message.getFieldWithDefault(this, 101, \"\");\n};\n/**\n * optional bytes token_to = 101;\n * This is a type-conversion wrapper around `getTokenTo()`\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenTo_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getTokenTo());\n};\n/**\n * optional bytes token_to = 101;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenTo()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenTo_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getTokenTo());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setTokenTo = function (value) {\n  return jspb.Message.setField(this, 101, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearTokenTo = function () {\n  return jspb.Message.setField(this, 101, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasTokenTo = function () {\n  return jspb.Message.getField(this, 101) != null;\n};\n/**\n * optional string token_shortcut = 102;\n * @return {string}\n */\n\n\nproto.EthereumSignTx.prototype.getTokenShortcut = function () {\n  return jspb.Message.getFieldWithDefault(this, 102, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setTokenShortcut = function (value) {\n  return jspb.Message.setField(this, 102, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearTokenShortcut = function () {\n  return jspb.Message.setField(this, 102, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasTokenShortcut = function () {\n  return jspb.Message.getField(this, 102) != null;\n};\n/**\n * optional uint32 tx_type = 103;\n * @return {number}\n */\n\n\nproto.EthereumSignTx.prototype.getTxType = function () {\n  return jspb.Message.getFieldWithDefault(this, 103, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setTxType = function (value) {\n  return jspb.Message.setField(this, 103, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearTxType = function () {\n  return jspb.Message.setField(this, 103, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasTxType = function () {\n  return jspb.Message.getField(this, 103) != null;\n};\n/**\n * optional uint32 type = 104;\n * @return {number}\n */\n\n\nproto.EthereumSignTx.prototype.getType = function () {\n  return jspb.Message.getFieldWithDefault(this, 104, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.setType = function (value) {\n  return jspb.Message.setField(this, 104, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\n\n\nproto.EthereumSignTx.prototype.clearType = function () {\n  return jspb.Message.setField(this, 104, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignTx.prototype.hasType = function () {\n  return jspb.Message.getField(this, 104) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumTxRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumTxRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumTxRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumTxRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dataLength: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      signatureV: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      signatureR: msg.getSignatureR_asB64(),\n      signatureS: msg.getSignatureS_asB64(),\n      hash: msg.getHash_asB64(),\n      signatureDer: msg.getSignatureDer_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumTxRequest}\n */\n\n\nproto.EthereumTxRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumTxRequest();\n  return proto.EthereumTxRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumTxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumTxRequest}\n */\n\n\nproto.EthereumTxRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setDataLength(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setSignatureV(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setSignatureR(value);\n        break;\n\n      case 4:\n        var value = reader.readBytes();\n        msg.setSignatureS(value);\n        break;\n\n      case 5:\n        var value = reader.readBytes();\n        msg.setHash(value);\n        break;\n\n      case 6:\n        var value = reader.readBytes();\n        msg.setSignatureDer(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumTxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumTxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumTxRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeBytes(4, f);\n  }\n\n  f = jspb.Message.getField(message, 5);\n\n  if (f != null) {\n    writer.writeBytes(5, f);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBytes(6, f);\n  }\n};\n/**\n * optional uint32 data_length = 1;\n * @return {number}\n */\n\n\nproto.EthereumTxRequest.prototype.getDataLength = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.setDataLength = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.clearDataLength = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxRequest.prototype.hasDataLength = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 signature_v = 2;\n * @return {number}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureV = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.setSignatureV = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.clearSignatureV = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxRequest.prototype.hasSignatureV = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes signature_r = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureR = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes signature_r = 3;\n * This is a type-conversion wrapper around `getSignatureR()`\n * @return {string}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureR_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignatureR());\n};\n/**\n * optional bytes signature_r = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureR()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureR_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignatureR());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.setSignatureR = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.clearSignatureR = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxRequest.prototype.hasSignatureR = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bytes signature_s = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureS = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * optional bytes signature_s = 4;\n * This is a type-conversion wrapper around `getSignatureS()`\n * @return {string}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureS_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignatureS());\n};\n/**\n * optional bytes signature_s = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureS()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureS_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignatureS());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.setSignatureS = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.clearSignatureS = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxRequest.prototype.hasSignatureS = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional bytes hash = 5;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumTxRequest.prototype.getHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n/**\n * optional bytes hash = 5;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\n\n\nproto.EthereumTxRequest.prototype.getHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getHash());\n};\n/**\n * optional bytes hash = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxRequest.prototype.getHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.setHash = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.clearHash = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxRequest.prototype.hasHash = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bytes signature_der = 6;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureDer = function () {\n  return jspb.Message.getFieldWithDefault(this, 6, \"\");\n};\n/**\n * optional bytes signature_der = 6;\n * This is a type-conversion wrapper around `getSignatureDer()`\n * @return {string}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureDer_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignatureDer());\n};\n/**\n * optional bytes signature_der = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureDer()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxRequest.prototype.getSignatureDer_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignatureDer());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.setSignatureDer = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\n\n\nproto.EthereumTxRequest.prototype.clearSignatureDer = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxRequest.prototype.hasSignatureDer = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumTxAck.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumTxAck.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumTxAck} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumTxAck.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dataChunk: msg.getDataChunk_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumTxAck}\n */\n\n\nproto.EthereumTxAck.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumTxAck();\n  return proto.EthereumTxAck.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumTxAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumTxAck}\n */\n\n\nproto.EthereumTxAck.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setDataChunk(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxAck.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumTxAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumTxAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumTxAck.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes data_chunk = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumTxAck.prototype.getDataChunk = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes data_chunk = 1;\n * This is a type-conversion wrapper around `getDataChunk()`\n * @return {string}\n */\n\n\nproto.EthereumTxAck.prototype.getDataChunk_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getDataChunk());\n};\n/**\n * optional bytes data_chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDataChunk()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumTxAck.prototype.getDataChunk_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getDataChunk());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxAck} returns this\n */\n\n\nproto.EthereumTxAck.prototype.setDataChunk = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxAck} returns this\n */\n\n\nproto.EthereumTxAck.prototype.clearDataChunk = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumTxAck.prototype.hasDataChunk = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.EthereumSignMessage.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumSignMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumSignMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumSignMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumSignMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      message: msg.getMessage_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumSignMessage}\n */\n\n\nproto.EthereumSignMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumSignMessage();\n  return proto.EthereumSignMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumSignMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumSignMessage}\n */\n\n\nproto.EthereumSignMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values = reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addAddressN(values[i]);\n        }\n\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumSignMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumSignMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumSignMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\n\n\nproto.EthereumSignMessage.prototype.getAddressNList = function () {\n  return jspb.Message.getRepeatedField(this, 1);\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumSignMessage} returns this\n */\n\n\nproto.EthereumSignMessage.prototype.setAddressNList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumSignMessage} returns this\n */\n\n\nproto.EthereumSignMessage.prototype.addAddressN = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumSignMessage} returns this\n */\n\n\nproto.EthereumSignMessage.prototype.clearAddressNList = function () {\n  return this.setAddressNList([]);\n};\n/**\n * required bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumSignMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * required bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.EthereumSignMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * required bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumSignMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignMessage} returns this\n */\n\n\nproto.EthereumSignMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignMessage} returns this\n */\n\n\nproto.EthereumSignMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumSignMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumVerifyMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumVerifyMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumVerifyMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumVerifyMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: msg.getAddress_asB64(),\n      signature: msg.getSignature_asB64(),\n      message: msg.getMessage_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumVerifyMessage}\n */\n\n\nproto.EthereumVerifyMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumVerifyMessage();\n  return proto.EthereumVerifyMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumVerifyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumVerifyMessage}\n */\n\n\nproto.EthereumVerifyMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumVerifyMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumVerifyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumVerifyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumVerifyMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getAddress_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getAddress());\n};\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getAddress_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getAddress());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumVerifyMessage} returns this\n */\n\n\nproto.EthereumVerifyMessage.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumVerifyMessage} returns this\n */\n\n\nproto.EthereumVerifyMessage.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumVerifyMessage.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumVerifyMessage} returns this\n */\n\n\nproto.EthereumVerifyMessage.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumVerifyMessage} returns this\n */\n\n\nproto.EthereumVerifyMessage.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumVerifyMessage.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getMessage = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getMessage_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getMessage());\n};\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumVerifyMessage.prototype.getMessage_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getMessage());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumVerifyMessage} returns this\n */\n\n\nproto.EthereumVerifyMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumVerifyMessage} returns this\n */\n\n\nproto.EthereumVerifyMessage.prototype.clearMessage = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumVerifyMessage.prototype.hasMessage = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EthereumMessageSignature.prototype.toObject = function (opt_includeInstance) {\n    return proto.EthereumMessageSignature.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EthereumMessageSignature} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EthereumMessageSignature.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: msg.getAddress_asB64(),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumMessageSignature}\n */\n\n\nproto.EthereumMessageSignature.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumMessageSignature();\n  return proto.EthereumMessageSignature.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumMessageSignature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumMessageSignature}\n */\n\n\nproto.EthereumMessageSignature.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumMessageSignature.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumMessageSignature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumMessageSignature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EthereumMessageSignature.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumMessageSignature.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\n\n\nproto.EthereumMessageSignature.prototype.getAddress_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getAddress());\n};\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumMessageSignature.prototype.getAddress_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getAddress());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumMessageSignature} returns this\n */\n\n\nproto.EthereumMessageSignature.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumMessageSignature} returns this\n */\n\n\nproto.EthereumMessageSignature.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumMessageSignature.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.EthereumMessageSignature.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.EthereumMessageSignature.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.EthereumMessageSignature.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumMessageSignature} returns this\n */\n\n\nproto.EthereumMessageSignature.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumMessageSignature} returns this\n */\n\n\nproto.EthereumMessageSignature.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.EthereumMessageSignature.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SignIdentity.prototype.toObject = function (opt_includeInstance) {\n    return proto.SignIdentity.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SignIdentity} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SignIdentity.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      identity: (f = msg.getIdentity()) && types_pb.IdentityType.toObject(includeInstance, f),\n      challengeHidden: msg.getChallengeHidden_asB64(),\n      challengeVisual: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      ecdsaCurveName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignIdentity}\n */\n\n\nproto.SignIdentity.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignIdentity();\n  return proto.SignIdentity.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignIdentity} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignIdentity}\n */\n\n\nproto.SignIdentity.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new types_pb.IdentityType();\n        reader.readMessage(value, types_pb.IdentityType.deserializeBinaryFromReader);\n        msg.setIdentity(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setChallengeHidden(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setChallengeVisual(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setEcdsaCurveName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SignIdentity.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SignIdentity.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignIdentity} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SignIdentity.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getIdentity();\n\n  if (f != null) {\n    writer.writeMessage(1, f, types_pb.IdentityType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional IdentityType identity = 1;\n * @return {?proto.IdentityType}\n */\n\n\nproto.SignIdentity.prototype.getIdentity = function () {\n  return jspb.Message.getWrapperField(this, types_pb.IdentityType, 1);\n};\n/**\n * @param {?proto.IdentityType|undefined} value\n * @return {!proto.SignIdentity} returns this\n*/\n\n\nproto.SignIdentity.prototype.setIdentity = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.clearIdentity = function () {\n  return this.setIdentity(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignIdentity.prototype.hasIdentity = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes challenge_hidden = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.SignIdentity.prototype.getChallengeHidden = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes challenge_hidden = 2;\n * This is a type-conversion wrapper around `getChallengeHidden()`\n * @return {string}\n */\n\n\nproto.SignIdentity.prototype.getChallengeHidden_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getChallengeHidden());\n};\n/**\n * optional bytes challenge_hidden = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallengeHidden()`\n * @return {!Uint8Array}\n */\n\n\nproto.SignIdentity.prototype.getChallengeHidden_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getChallengeHidden());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.setChallengeHidden = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.clearChallengeHidden = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignIdentity.prototype.hasChallengeHidden = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string challenge_visual = 3;\n * @return {string}\n */\n\n\nproto.SignIdentity.prototype.getChallengeVisual = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.setChallengeVisual = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.clearChallengeVisual = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignIdentity.prototype.hasChallengeVisual = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string ecdsa_curve_name = 4;\n * @return {string}\n */\n\n\nproto.SignIdentity.prototype.getEcdsaCurveName = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.setEcdsaCurveName = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\n\n\nproto.SignIdentity.prototype.clearEcdsaCurveName = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignIdentity.prototype.hasEcdsaCurveName = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SignedIdentity.prototype.toObject = function (opt_includeInstance) {\n    return proto.SignedIdentity.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SignedIdentity} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SignedIdentity.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      publicKey: msg.getPublicKey_asB64(),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignedIdentity}\n */\n\n\nproto.SignedIdentity.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignedIdentity();\n  return proto.SignedIdentity.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignedIdentity} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignedIdentity}\n */\n\n\nproto.SignedIdentity.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setPublicKey(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SignedIdentity.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SignedIdentity.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignedIdentity} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SignedIdentity.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.SignedIdentity.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.SignedIdentity} returns this\n */\n\n\nproto.SignedIdentity.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignedIdentity} returns this\n */\n\n\nproto.SignedIdentity.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignedIdentity.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes public_key = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.SignedIdentity.prototype.getPublicKey = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes public_key = 2;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\n\n\nproto.SignedIdentity.prototype.getPublicKey_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPublicKey());\n};\n/**\n * optional bytes public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.SignedIdentity.prototype.getPublicKey_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPublicKey());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignedIdentity} returns this\n */\n\n\nproto.SignedIdentity.prototype.setPublicKey = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignedIdentity} returns this\n */\n\n\nproto.SignedIdentity.prototype.clearPublicKey = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignedIdentity.prototype.hasPublicKey = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes signature = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.SignedIdentity.prototype.getSignature = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.SignedIdentity.prototype.getSignature_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getSignature());\n};\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.SignedIdentity.prototype.getSignature_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getSignature());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignedIdentity} returns this\n */\n\n\nproto.SignedIdentity.prototype.setSignature = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignedIdentity} returns this\n */\n\n\nproto.SignedIdentity.prototype.clearSignature = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SignedIdentity.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ApplyPolicies.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ApplyPolicies.prototype.toObject = function (opt_includeInstance) {\n    return proto.ApplyPolicies.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ApplyPolicies} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ApplyPolicies.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      policyList: jspb.Message.toObjectList(msg.getPolicyList(), types_pb.PolicyType.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ApplyPolicies}\n */\n\n\nproto.ApplyPolicies.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ApplyPolicies();\n  return proto.ApplyPolicies.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ApplyPolicies} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ApplyPolicies}\n */\n\n\nproto.ApplyPolicies.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new types_pb.PolicyType();\n        reader.readMessage(value, types_pb.PolicyType.deserializeBinaryFromReader);\n        msg.addPolicy(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ApplyPolicies.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ApplyPolicies.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ApplyPolicies} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ApplyPolicies.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPolicyList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, types_pb.PolicyType.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated PolicyType policy = 1;\n * @return {!Array<!proto.PolicyType>}\n */\n\n\nproto.ApplyPolicies.prototype.getPolicyList = function () {\n  return jspb.Message.getRepeatedWrapperField(this, types_pb.PolicyType, 1);\n};\n/**\n * @param {!Array<!proto.PolicyType>} value\n * @return {!proto.ApplyPolicies} returns this\n*/\n\n\nproto.ApplyPolicies.prototype.setPolicyList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.PolicyType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.PolicyType}\n */\n\n\nproto.ApplyPolicies.prototype.addPolicy = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PolicyType, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ApplyPolicies} returns this\n */\n\n\nproto.ApplyPolicies.prototype.clearPolicyList = function () {\n  return this.setPolicyList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.FlashHash.prototype.toObject = function (opt_includeInstance) {\n    return proto.FlashHash.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.FlashHash} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.FlashHash.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      length: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      challenge: msg.getChallenge_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FlashHash}\n */\n\n\nproto.FlashHash.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FlashHash();\n  return proto.FlashHash.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FlashHash} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FlashHash}\n */\n\n\nproto.FlashHash.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setLength(value);\n        break;\n\n      case 3:\n        var value = reader.readBytes();\n        msg.setChallenge(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.FlashHash.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.FlashHash.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FlashHash} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.FlashHash.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint32 address = 1;\n * @return {number}\n */\n\n\nproto.FlashHash.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.FlashHash} returns this\n */\n\n\nproto.FlashHash.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHash} returns this\n */\n\n\nproto.FlashHash.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashHash.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 length = 2;\n * @return {number}\n */\n\n\nproto.FlashHash.prototype.getLength = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.FlashHash} returns this\n */\n\n\nproto.FlashHash.prototype.setLength = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHash} returns this\n */\n\n\nproto.FlashHash.prototype.clearLength = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashHash.prototype.hasLength = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes challenge = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.FlashHash.prototype.getChallenge = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * optional bytes challenge = 3;\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {string}\n */\n\n\nproto.FlashHash.prototype.getChallenge_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getChallenge());\n};\n/**\n * optional bytes challenge = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {!Uint8Array}\n */\n\n\nproto.FlashHash.prototype.getChallenge_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getChallenge());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FlashHash} returns this\n */\n\n\nproto.FlashHash.prototype.setChallenge = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHash} returns this\n */\n\n\nproto.FlashHash.prototype.clearChallenge = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashHash.prototype.hasChallenge = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.FlashWrite.prototype.toObject = function (opt_includeInstance) {\n    return proto.FlashWrite.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.FlashWrite} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.FlashWrite.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      data: msg.getData_asB64(),\n      erase: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FlashWrite}\n */\n\n\nproto.FlashWrite.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FlashWrite();\n  return proto.FlashWrite.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FlashWrite} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FlashWrite}\n */\n\n\nproto.FlashWrite.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setData(value);\n        break;\n\n      case 3:\n        var value = reader.readBool();\n        msg.setErase(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.FlashWrite.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.FlashWrite.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FlashWrite} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.FlashWrite.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional uint32 address = 1;\n * @return {number}\n */\n\n\nproto.FlashWrite.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.FlashWrite} returns this\n */\n\n\nproto.FlashWrite.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashWrite} returns this\n */\n\n\nproto.FlashWrite.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashWrite.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.FlashWrite.prototype.getData = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.FlashWrite.prototype.getData_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getData());\n};\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.FlashWrite.prototype.getData_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getData());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FlashWrite} returns this\n */\n\n\nproto.FlashWrite.prototype.setData = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashWrite} returns this\n */\n\n\nproto.FlashWrite.prototype.clearData = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashWrite.prototype.hasData = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool erase = 3;\n * @return {boolean}\n */\n\n\nproto.FlashWrite.prototype.getErase = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.FlashWrite} returns this\n */\n\n\nproto.FlashWrite.prototype.setErase = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashWrite} returns this\n */\n\n\nproto.FlashWrite.prototype.clearErase = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashWrite.prototype.hasErase = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.FlashHashResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.FlashHashResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.FlashHashResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.FlashHashResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FlashHashResponse}\n */\n\n\nproto.FlashHashResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FlashHashResponse();\n  return proto.FlashHashResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FlashHashResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FlashHashResponse}\n */\n\n\nproto.FlashHashResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.FlashHashResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.FlashHashResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FlashHashResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.FlashHashResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes data = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.FlashHashResponse.prototype.getData = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.FlashHashResponse.prototype.getData_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getData());\n};\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.FlashHashResponse.prototype.getData_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getData());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FlashHashResponse} returns this\n */\n\n\nproto.FlashHashResponse.prototype.setData = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHashResponse} returns this\n */\n\n\nproto.FlashHashResponse.prototype.clearData = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FlashHashResponse.prototype.hasData = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkFlashDump.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkFlashDump.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkFlashDump} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkFlashDump.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      length: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkFlashDump}\n */\n\n\nproto.DebugLinkFlashDump.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkFlashDump();\n  return proto.DebugLinkFlashDump.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkFlashDump} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkFlashDump}\n */\n\n\nproto.DebugLinkFlashDump.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = reader.readUint32();\n        msg.setLength(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkFlashDump.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkFlashDump.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkFlashDump} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkFlashDump.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeUint32(2, f);\n  }\n};\n/**\n * optional uint32 address = 1;\n * @return {number}\n */\n\n\nproto.DebugLinkFlashDump.prototype.getAddress = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.DebugLinkFlashDump} returns this\n */\n\n\nproto.DebugLinkFlashDump.prototype.setAddress = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkFlashDump} returns this\n */\n\n\nproto.DebugLinkFlashDump.prototype.clearAddress = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkFlashDump.prototype.hasAddress = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint32 length = 2;\n * @return {number}\n */\n\n\nproto.DebugLinkFlashDump.prototype.getLength = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.DebugLinkFlashDump} returns this\n */\n\n\nproto.DebugLinkFlashDump.prototype.setLength = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkFlashDump} returns this\n */\n\n\nproto.DebugLinkFlashDump.prototype.clearLength = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkFlashDump.prototype.hasLength = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkFlashDumpResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkFlashDumpResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkFlashDumpResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkFlashDumpResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkFlashDumpResponse}\n */\n\n\nproto.DebugLinkFlashDumpResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkFlashDumpResponse();\n  return proto.DebugLinkFlashDumpResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkFlashDumpResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkFlashDumpResponse}\n */\n\n\nproto.DebugLinkFlashDumpResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkFlashDumpResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkFlashDumpResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkFlashDumpResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes data = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.getData = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.getData_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getData());\n};\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.getData_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getData());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkFlashDumpResponse} returns this\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.setData = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkFlashDumpResponse} returns this\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.clearData = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkFlashDumpResponse.prototype.hasData = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SoftReset.prototype.toObject = function (opt_includeInstance) {\n    return proto.SoftReset.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SoftReset} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SoftReset.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SoftReset}\n */\n\n\nproto.SoftReset.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SoftReset();\n  return proto.SoftReset.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SoftReset} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SoftReset}\n */\n\n\nproto.SoftReset.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SoftReset.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SoftReset.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SoftReset} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SoftReset.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.FirmwareErase.prototype.toObject = function (opt_includeInstance) {\n    return proto.FirmwareErase.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.FirmwareErase} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.FirmwareErase.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FirmwareErase}\n */\n\n\nproto.FirmwareErase.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FirmwareErase();\n  return proto.FirmwareErase.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FirmwareErase} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FirmwareErase}\n */\n\n\nproto.FirmwareErase.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.FirmwareErase.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.FirmwareErase.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FirmwareErase} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.FirmwareErase.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.FirmwareUpload.prototype.toObject = function (opt_includeInstance) {\n    return proto.FirmwareUpload.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.FirmwareUpload} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.FirmwareUpload.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      payloadHash: msg.getPayloadHash_asB64(),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FirmwareUpload}\n */\n\n\nproto.FirmwareUpload.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FirmwareUpload();\n  return proto.FirmwareUpload.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FirmwareUpload} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FirmwareUpload}\n */\n\n\nproto.FirmwareUpload.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setPayloadHash(value);\n        break;\n\n      case 2:\n        var value = reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.FirmwareUpload.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.FirmwareUpload.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FirmwareUpload} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.FirmwareUpload.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * required bytes payload_hash = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.FirmwareUpload.prototype.getPayloadHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * required bytes payload_hash = 1;\n * This is a type-conversion wrapper around `getPayloadHash()`\n * @return {string}\n */\n\n\nproto.FirmwareUpload.prototype.getPayloadHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPayloadHash());\n};\n/**\n * required bytes payload_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayloadHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.FirmwareUpload.prototype.getPayloadHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPayloadHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FirmwareUpload} returns this\n */\n\n\nproto.FirmwareUpload.prototype.setPayloadHash = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FirmwareUpload} returns this\n */\n\n\nproto.FirmwareUpload.prototype.clearPayloadHash = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FirmwareUpload.prototype.hasPayloadHash = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * required bytes payload = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.FirmwareUpload.prototype.getPayload = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * required bytes payload = 2;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.FirmwareUpload.prototype.getPayload_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getPayload());\n};\n/**\n * required bytes payload = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.FirmwareUpload.prototype.getPayload_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getPayload());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FirmwareUpload} returns this\n */\n\n\nproto.FirmwareUpload.prototype.setPayload = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.FirmwareUpload} returns this\n */\n\n\nproto.FirmwareUpload.prototype.clearPayload = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.FirmwareUpload.prototype.hasPayload = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkDecision.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkDecision.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkDecision} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkDecision.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      yesNo: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkDecision}\n */\n\n\nproto.DebugLinkDecision.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkDecision();\n  return proto.DebugLinkDecision.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkDecision} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkDecision}\n */\n\n\nproto.DebugLinkDecision.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBool();\n        msg.setYesNo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkDecision.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkDecision.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkDecision} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkDecision.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBool(1, f);\n  }\n};\n/**\n * required bool yes_no = 1;\n * @return {boolean}\n */\n\n\nproto.DebugLinkDecision.prototype.getYesNo = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 1, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.DebugLinkDecision} returns this\n */\n\n\nproto.DebugLinkDecision.prototype.setYesNo = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkDecision} returns this\n */\n\n\nproto.DebugLinkDecision.prototype.clearYesNo = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkDecision.prototype.hasYesNo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkGetState.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkGetState.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkGetState} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkGetState.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkGetState}\n */\n\n\nproto.DebugLinkGetState.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkGetState();\n  return proto.DebugLinkGetState.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkGetState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkGetState}\n */\n\n\nproto.DebugLinkGetState.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkGetState.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkGetState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkGetState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkGetState.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkState.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkState.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkState} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkState.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      layout: msg.getLayout_asB64(),\n      pin: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      matrix: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n      mnemonic: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n      node: (f = msg.getNode()) && types_pb.HDNodeType.toObject(includeInstance, f),\n      passphraseProtection: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,\n      resetWord: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n      resetEntropy: msg.getResetEntropy_asB64(),\n      recoveryFakeWord: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n      recoveryWordPos: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n      recoveryCipher: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,\n      recoveryAutoCompletedWord: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n      firmwareHash: msg.getFirmwareHash_asB64(),\n      storageHash: msg.getStorageHash_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkState}\n */\n\n\nproto.DebugLinkState.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkState();\n  return proto.DebugLinkState.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkState}\n */\n\n\nproto.DebugLinkState.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBytes();\n        msg.setLayout(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setPin(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setMatrix(value);\n        break;\n\n      case 4:\n        var value = reader.readString();\n        msg.setMnemonic(value);\n        break;\n\n      case 5:\n        var value = new types_pb.HDNodeType();\n        reader.readMessage(value, types_pb.HDNodeType.deserializeBinaryFromReader);\n        msg.setNode(value);\n        break;\n\n      case 6:\n        var value = reader.readBool();\n        msg.setPassphraseProtection(value);\n        break;\n\n      case 7:\n        var value = reader.readString();\n        msg.setResetWord(value);\n        break;\n\n      case 8:\n        var value = reader.readBytes();\n        msg.setResetEntropy(value);\n        break;\n\n      case 9:\n        var value = reader.readString();\n        msg.setRecoveryFakeWord(value);\n        break;\n\n      case 10:\n        var value = reader.readUint32();\n        msg.setRecoveryWordPos(value);\n        break;\n\n      case 11:\n        var value = reader.readString();\n        msg.setRecoveryCipher(value);\n        break;\n\n      case 12:\n        var value = reader.readString();\n        msg.setRecoveryAutoCompletedWord(value);\n        break;\n\n      case 13:\n        var value = reader.readBytes();\n        msg.setFirmwareHash(value);\n        break;\n\n      case 14:\n        var value = reader.readBytes();\n        msg.setStorageHash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkState.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkState.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n\n  f = jspb.Message.getField(message, 4);\n\n  if (f != null) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getNode();\n\n  if (f != null) {\n    writer.writeMessage(5, f, types_pb.HDNodeType.serializeBinaryToWriter);\n  }\n\n  f = jspb.Message.getField(message, 6);\n\n  if (f != null) {\n    writer.writeBool(6, f);\n  }\n\n  f = jspb.Message.getField(message, 7);\n\n  if (f != null) {\n    writer.writeString(7, f);\n  }\n\n  f = jspb.Message.getField(message, 8);\n\n  if (f != null) {\n    writer.writeBytes(8, f);\n  }\n\n  f = jspb.Message.getField(message, 9);\n\n  if (f != null) {\n    writer.writeString(9, f);\n  }\n\n  f = jspb.Message.getField(message, 10);\n\n  if (f != null) {\n    writer.writeUint32(10, f);\n  }\n\n  f = jspb.Message.getField(message, 11);\n\n  if (f != null) {\n    writer.writeString(11, f);\n  }\n\n  f = jspb.Message.getField(message, 12);\n\n  if (f != null) {\n    writer.writeString(12, f);\n  }\n\n  f = jspb.Message.getField(message, 13);\n\n  if (f != null) {\n    writer.writeBytes(13, f);\n  }\n\n  f = jspb.Message.getField(message, 14);\n\n  if (f != null) {\n    writer.writeBytes(14, f);\n  }\n};\n/**\n * optional bytes layout = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DebugLinkState.prototype.getLayout = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n/**\n * optional bytes layout = 1;\n * This is a type-conversion wrapper around `getLayout()`\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getLayout_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getLayout());\n};\n/**\n * optional bytes layout = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLayout()`\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkState.prototype.getLayout_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getLayout());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setLayout = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearLayout = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasLayout = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string pin = 2;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getPin = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setPin = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearPin = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasPin = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string matrix = 3;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getMatrix = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setMatrix = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearMatrix = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasMatrix = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional string mnemonic = 4;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getMnemonic = function () {\n  return jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setMnemonic = function (value) {\n  return jspb.Message.setField(this, 4, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearMnemonic = function () {\n  return jspb.Message.setField(this, 4, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasMnemonic = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional HDNodeType node = 5;\n * @return {?proto.HDNodeType}\n */\n\n\nproto.DebugLinkState.prototype.getNode = function () {\n  return jspb.Message.getWrapperField(this, types_pb.HDNodeType, 5);\n};\n/**\n * @param {?proto.HDNodeType|undefined} value\n * @return {!proto.DebugLinkState} returns this\n*/\n\n\nproto.DebugLinkState.prototype.setNode = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearNode = function () {\n  return this.setNode(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasNode = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bool passphrase_protection = 6;\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.getPassphraseProtection = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 6, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setPassphraseProtection = function (value) {\n  return jspb.Message.setField(this, 6, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearPassphraseProtection = function () {\n  return jspb.Message.setField(this, 6, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasPassphraseProtection = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional string reset_word = 7;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getResetWord = function () {\n  return jspb.Message.getFieldWithDefault(this, 7, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setResetWord = function (value) {\n  return jspb.Message.setField(this, 7, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearResetWord = function () {\n  return jspb.Message.setField(this, 7, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasResetWord = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional bytes reset_entropy = 8;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DebugLinkState.prototype.getResetEntropy = function () {\n  return jspb.Message.getFieldWithDefault(this, 8, \"\");\n};\n/**\n * optional bytes reset_entropy = 8;\n * This is a type-conversion wrapper around `getResetEntropy()`\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getResetEntropy_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getResetEntropy());\n};\n/**\n * optional bytes reset_entropy = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResetEntropy()`\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkState.prototype.getResetEntropy_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getResetEntropy());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setResetEntropy = function (value) {\n  return jspb.Message.setField(this, 8, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearResetEntropy = function () {\n  return jspb.Message.setField(this, 8, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasResetEntropy = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional string recovery_fake_word = 9;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getRecoveryFakeWord = function () {\n  return jspb.Message.getFieldWithDefault(this, 9, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setRecoveryFakeWord = function (value) {\n  return jspb.Message.setField(this, 9, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearRecoveryFakeWord = function () {\n  return jspb.Message.setField(this, 9, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasRecoveryFakeWord = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint32 recovery_word_pos = 10;\n * @return {number}\n */\n\n\nproto.DebugLinkState.prototype.getRecoveryWordPos = function () {\n  return jspb.Message.getFieldWithDefault(this, 10, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setRecoveryWordPos = function (value) {\n  return jspb.Message.setField(this, 10, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearRecoveryWordPos = function () {\n  return jspb.Message.setField(this, 10, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasRecoveryWordPos = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n/**\n * optional string recovery_cipher = 11;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getRecoveryCipher = function () {\n  return jspb.Message.getFieldWithDefault(this, 11, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setRecoveryCipher = function (value) {\n  return jspb.Message.setField(this, 11, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearRecoveryCipher = function () {\n  return jspb.Message.setField(this, 11, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasRecoveryCipher = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * optional string recovery_auto_completed_word = 12;\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getRecoveryAutoCompletedWord = function () {\n  return jspb.Message.getFieldWithDefault(this, 12, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setRecoveryAutoCompletedWord = function (value) {\n  return jspb.Message.setField(this, 12, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearRecoveryAutoCompletedWord = function () {\n  return jspb.Message.setField(this, 12, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasRecoveryAutoCompletedWord = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * optional bytes firmware_hash = 13;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DebugLinkState.prototype.getFirmwareHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 13, \"\");\n};\n/**\n * optional bytes firmware_hash = 13;\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getFirmwareHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getFirmwareHash());\n};\n/**\n * optional bytes firmware_hash = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkState.prototype.getFirmwareHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getFirmwareHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setFirmwareHash = function (value) {\n  return jspb.Message.setField(this, 13, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearFirmwareHash = function () {\n  return jspb.Message.setField(this, 13, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasFirmwareHash = function () {\n  return jspb.Message.getField(this, 13) != null;\n};\n/**\n * optional bytes storage_hash = 14;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.DebugLinkState.prototype.getStorageHash = function () {\n  return jspb.Message.getFieldWithDefault(this, 14, \"\");\n};\n/**\n * optional bytes storage_hash = 14;\n * This is a type-conversion wrapper around `getStorageHash()`\n * @return {string}\n */\n\n\nproto.DebugLinkState.prototype.getStorageHash_asB64 = function () {\n  return jspb.Message.bytesAsB64(this.getStorageHash());\n};\n/**\n * optional bytes storage_hash = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStorageHash()`\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkState.prototype.getStorageHash_asU8 = function () {\n  return jspb.Message.bytesAsU8(this.getStorageHash());\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.setStorageHash = function (value) {\n  return jspb.Message.setField(this, 14, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\n\n\nproto.DebugLinkState.prototype.clearStorageHash = function () {\n  return jspb.Message.setField(this, 14, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkState.prototype.hasStorageHash = function () {\n  return jspb.Message.getField(this, 14) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkStop.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkStop.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkStop} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkStop.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkStop}\n */\n\n\nproto.DebugLinkStop.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkStop();\n  return proto.DebugLinkStop.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkStop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkStop}\n */\n\n\nproto.DebugLinkStop.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkStop.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkStop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkStop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkStop.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkLog.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkLog.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkLog} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkLog.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      level: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n      bucket: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n      text: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkLog}\n */\n\n\nproto.DebugLinkLog.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkLog();\n  return proto.DebugLinkLog.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkLog} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkLog}\n */\n\n\nproto.DebugLinkLog.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readUint32();\n        msg.setLevel(value);\n        break;\n\n      case 2:\n        var value = reader.readString();\n        msg.setBucket(value);\n        break;\n\n      case 3:\n        var value = reader.readString();\n        msg.setText(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkLog.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkLog.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkLog} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkLog.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeUint32(1, f);\n  }\n\n  f = jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n\n  f = jspb.Message.getField(message, 3);\n\n  if (f != null) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional uint32 level = 1;\n * @return {number}\n */\n\n\nproto.DebugLinkLog.prototype.getLevel = function () {\n  return jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n/**\n * @param {number} value\n * @return {!proto.DebugLinkLog} returns this\n */\n\n\nproto.DebugLinkLog.prototype.setLevel = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkLog} returns this\n */\n\n\nproto.DebugLinkLog.prototype.clearLevel = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkLog.prototype.hasLevel = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string bucket = 2;\n * @return {string}\n */\n\n\nproto.DebugLinkLog.prototype.getBucket = function () {\n  return jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkLog} returns this\n */\n\n\nproto.DebugLinkLog.prototype.setBucket = function (value) {\n  return jspb.Message.setField(this, 2, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkLog} returns this\n */\n\n\nproto.DebugLinkLog.prototype.clearBucket = function () {\n  return jspb.Message.setField(this, 2, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkLog.prototype.hasBucket = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional string text = 3;\n * @return {string}\n */\n\n\nproto.DebugLinkLog.prototype.getText = function () {\n  return jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n/**\n * @param {string} value\n * @return {!proto.DebugLinkLog} returns this\n */\n\n\nproto.DebugLinkLog.prototype.setText = function (value) {\n  return jspb.Message.setField(this, 3, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkLog} returns this\n */\n\n\nproto.DebugLinkLog.prototype.clearText = function () {\n  return jspb.Message.setField(this, 3, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.DebugLinkLog.prototype.hasText = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DebugLinkFillConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.DebugLinkFillConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DebugLinkFillConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.DebugLinkFillConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkFillConfig}\n */\n\n\nproto.DebugLinkFillConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkFillConfig();\n  return proto.DebugLinkFillConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkFillConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkFillConfig}\n */\n\n\nproto.DebugLinkFillConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DebugLinkFillConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkFillConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkFillConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.DebugLinkFillConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ChangeWipeCode.prototype.toObject = function (opt_includeInstance) {\n    return proto.ChangeWipeCode.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ChangeWipeCode} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ChangeWipeCode.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      remove: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ChangeWipeCode}\n */\n\n\nproto.ChangeWipeCode.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ChangeWipeCode();\n  return proto.ChangeWipeCode.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ChangeWipeCode} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ChangeWipeCode}\n */\n\n\nproto.ChangeWipeCode.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = reader.readBool();\n        msg.setRemove(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ChangeWipeCode.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ChangeWipeCode.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ChangeWipeCode} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ChangeWipeCode.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBool(1, f);\n  }\n};\n/**\n * optional bool remove = 1;\n * @return {boolean}\n */\n\n\nproto.ChangeWipeCode.prototype.getRemove = function () {\n  return jspb.Message.getBooleanFieldWithDefault(this, 1, false);\n};\n/**\n * @param {boolean} value\n * @return {!proto.ChangeWipeCode} returns this\n */\n\n\nproto.ChangeWipeCode.prototype.setRemove = function (value) {\n  return jspb.Message.setField(this, 1, value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.ChangeWipeCode} returns this\n */\n\n\nproto.ChangeWipeCode.prototype.clearRemove = function () {\n  return jspb.Message.setField(this, 1, undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ChangeWipeCode.prototype.hasRemove = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * @enum {number}\n */\n\n\nproto.MessageType = {\n  MESSAGETYPE_INITIALIZE: 0,\n  MESSAGETYPE_PING: 1,\n  MESSAGETYPE_SUCCESS: 2,\n  MESSAGETYPE_FAILURE: 3,\n  MESSAGETYPE_CHANGEPIN: 4,\n  MESSAGETYPE_WIPEDEVICE: 5,\n  MESSAGETYPE_FIRMWAREERASE: 6,\n  MESSAGETYPE_FIRMWAREUPLOAD: 7,\n  MESSAGETYPE_GETENTROPY: 9,\n  MESSAGETYPE_ENTROPY: 10,\n  MESSAGETYPE_GETPUBLICKEY: 11,\n  MESSAGETYPE_PUBLICKEY: 12,\n  MESSAGETYPE_LOADDEVICE: 13,\n  MESSAGETYPE_RESETDEVICE: 14,\n  MESSAGETYPE_SIGNTX: 15,\n  MESSAGETYPE_FEATURES: 17,\n  MESSAGETYPE_PINMATRIXREQUEST: 18,\n  MESSAGETYPE_PINMATRIXACK: 19,\n  MESSAGETYPE_CANCEL: 20,\n  MESSAGETYPE_TXREQUEST: 21,\n  MESSAGETYPE_TXACK: 22,\n  MESSAGETYPE_CIPHERKEYVALUE: 23,\n  MESSAGETYPE_CLEARSESSION: 24,\n  MESSAGETYPE_APPLYSETTINGS: 25,\n  MESSAGETYPE_BUTTONREQUEST: 26,\n  MESSAGETYPE_BUTTONACK: 27,\n  MESSAGETYPE_GETADDRESS: 29,\n  MESSAGETYPE_ADDRESS: 30,\n  MESSAGETYPE_ENTROPYREQUEST: 35,\n  MESSAGETYPE_ENTROPYACK: 36,\n  MESSAGETYPE_SIGNMESSAGE: 38,\n  MESSAGETYPE_VERIFYMESSAGE: 39,\n  MESSAGETYPE_MESSAGESIGNATURE: 40,\n  MESSAGETYPE_PASSPHRASEREQUEST: 41,\n  MESSAGETYPE_PASSPHRASEACK: 42,\n  MESSAGETYPE_RECOVERYDEVICE: 45,\n  MESSAGETYPE_WORDREQUEST: 46,\n  MESSAGETYPE_WORDACK: 47,\n  MESSAGETYPE_CIPHEREDKEYVALUE: 48,\n  MESSAGETYPE_ENCRYPTMESSAGE: 49,\n  MESSAGETYPE_ENCRYPTEDMESSAGE: 50,\n  MESSAGETYPE_DECRYPTMESSAGE: 51,\n  MESSAGETYPE_DECRYPTEDMESSAGE: 52,\n  MESSAGETYPE_SIGNIDENTITY: 53,\n  MESSAGETYPE_SIGNEDIDENTITY: 54,\n  MESSAGETYPE_GETFEATURES: 55,\n  MESSAGETYPE_ETHEREUMGETADDRESS: 56,\n  MESSAGETYPE_ETHEREUMADDRESS: 57,\n  MESSAGETYPE_ETHEREUMSIGNTX: 58,\n  MESSAGETYPE_ETHEREUMTXREQUEST: 59,\n  MESSAGETYPE_ETHEREUMTXACK: 60,\n  MESSAGETYPE_CHARACTERREQUEST: 80,\n  MESSAGETYPE_CHARACTERACK: 81,\n  MESSAGETYPE_RAWTXACK: 82,\n  MESSAGETYPE_APPLYPOLICIES: 83,\n  MESSAGETYPE_FLASHHASH: 84,\n  MESSAGETYPE_FLASHWRITE: 85,\n  MESSAGETYPE_FLASHHASHRESPONSE: 86,\n  MESSAGETYPE_DEBUGLINKFLASHDUMP: 87,\n  MESSAGETYPE_DEBUGLINKFLASHDUMPRESPONSE: 88,\n  MESSAGETYPE_SOFTRESET: 89,\n  MESSAGETYPE_DEBUGLINKDECISION: 100,\n  MESSAGETYPE_DEBUGLINKGETSTATE: 101,\n  MESSAGETYPE_DEBUGLINKSTATE: 102,\n  MESSAGETYPE_DEBUGLINKSTOP: 103,\n  MESSAGETYPE_DEBUGLINKLOG: 104,\n  MESSAGETYPE_DEBUGLINKFILLCONFIG: 105,\n  MESSAGETYPE_GETCOINTABLE: 106,\n  MESSAGETYPE_COINTABLE: 107,\n  MESSAGETYPE_ETHEREUMSIGNMESSAGE: 108,\n  MESSAGETYPE_ETHEREUMVERIFYMESSAGE: 109,\n  MESSAGETYPE_ETHEREUMMESSAGESIGNATURE: 110,\n  MESSAGETYPE_CHANGEWIPECODE: 111,\n  MESSAGETYPE_RIPPLEGETADDRESS: 400,\n  MESSAGETYPE_RIPPLEADDRESS: 401,\n  MESSAGETYPE_RIPPLESIGNTX: 402,\n  MESSAGETYPE_RIPPLESIGNEDTX: 403,\n  MESSAGETYPE_THORCHAINGETADDRESS: 500,\n  MESSAGETYPE_THORCHAINADDRESS: 501,\n  MESSAGETYPE_THORCHAINSIGNTX: 502,\n  MESSAGETYPE_THORCHAINMSGREQUEST: 503,\n  MESSAGETYPE_THORCHAINMSGACK: 504,\n  MESSAGETYPE_THORCHAINSIGNEDTX: 505,\n  MESSAGETYPE_EOSGETPUBLICKEY: 600,\n  MESSAGETYPE_EOSPUBLICKEY: 601,\n  MESSAGETYPE_EOSSIGNTX: 602,\n  MESSAGETYPE_EOSTXACTIONREQUEST: 603,\n  MESSAGETYPE_EOSTXACTIONACK: 604,\n  MESSAGETYPE_EOSSIGNEDTX: 605,\n  MESSAGETYPE_NANOGETADDRESS: 700,\n  MESSAGETYPE_NANOADDRESS: 701,\n  MESSAGETYPE_NANOSIGNTX: 702,\n  MESSAGETYPE_NANOSIGNEDTX: 703,\n  MESSAGETYPE_BINANCEGETADDRESS: 800,\n  MESSAGETYPE_BINANCEADDRESS: 801,\n  MESSAGETYPE_BINANCEGETPUBLICKEY: 802,\n  MESSAGETYPE_BINANCEPUBLICKEY: 803,\n  MESSAGETYPE_BINANCESIGNTX: 804,\n  MESSAGETYPE_BINANCETXREQUEST: 805,\n  MESSAGETYPE_BINANCETRANSFERMSG: 806,\n  MESSAGETYPE_BINANCEORDERMSG: 807,\n  MESSAGETYPE_BINANCECANCELMSG: 808,\n  MESSAGETYPE_BINANCESIGNEDTX: 809,\n  MESSAGETYPE_COSMOSGETADDRESS: 900,\n  MESSAGETYPE_COSMOSADDRESS: 901,\n  MESSAGETYPE_COSMOSSIGNTX: 902,\n  MESSAGETYPE_COSMOSMSGREQUEST: 903,\n  MESSAGETYPE_COSMOSMSGACK: 904,\n  MESSAGETYPE_COSMOSSIGNEDTX: 905,\n  MESSAGETYPE_TENDERMINTGETADDRESS: 1000,\n  MESSAGETYPE_TENDERMINTADDRESS: 1001,\n  MESSAGETYPE_TENDERMINTSIGNTX: 1002,\n  MESSAGETYPE_TENDERMINTMSGREQUEST: 1003,\n  MESSAGETYPE_TENDERMINTMSGACK: 1004,\n  MESSAGETYPE_TENDERMINTMSGSEND: 1005,\n  MESSAGETYPE_TENDERMINTSIGNEDTX: 1006\n};\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/@keepkey/device-protocol/lib/messages_pb.js"],"names":["jspb","require","goog","global","call","types_pb","object","extend","proto","exportSymbol","Initialize","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GetFeatures","Features","repeatedFields_","GetCoinTable","CoinTable","ClearSession","ApplySettings","ChangePin","Ping","Success","Failure","ButtonRequest","ButtonAck","PinMatrixRequest","PinMatrixAck","Cancel","PassphraseRequest","PassphraseAck","GetEntropy","Entropy","GetPublicKey","PublicKey","GetAddress","EthereumGetAddress","Address","EthereumAddress","WipeDevice","LoadDevice","ResetDevice","EntropyRequest","EntropyAck","RecoveryDevice","WordRequest","WordAck","CharacterRequest","CharacterAck","SignMessage","VerifyMessage","MessageSignature","EncryptMessage","EncryptedMessage","DecryptMessage","DecryptedMessage","CipherKeyValue","CipheredKeyValue","SignTx","TxRequest","TxAck","RawTxAck","EthereumSignTx","EthereumTxRequest","EthereumTxAck","EthereumSignMessage","EthereumVerifyMessage","EthereumMessageSignature","SignIdentity","SignedIdentity","ApplyPolicies","FlashHash","FlashWrite","FlashHashResponse","DebugLinkFlashDump","DebugLinkFlashDumpResponse","SoftReset","FirmwareErase","FirmwareUpload","DebugLinkDecision","DebugLinkGetState","DebugLinkState","DebugLinkStop","DebugLinkLog","DebugLinkFillConfig","ChangeWipeCode","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","vendor","getField","majorVersion","minorVersion","patchVersion","bootloaderMode","getBooleanField","deviceId","pinProtection","passphraseProtection","language","label","coinsList","toObjectList","getCoinsList","CoinType","initialized","revision","getRevision_asB64","bootloaderHash","getBootloaderHash_asB64","imported","pinCached","passphraseCached","policiesList","getPoliciesList","PolicyType","model","firmwareVariant","firmwareHash","getFirmwareHash_asB64","noBackup","wipeCodeProtection","value","readString","setVendor","readUint32","setMajorVersion","setMinorVersion","setPatchVersion","readBool","setBootloaderMode","setDeviceId","setPinProtection","setPassphraseProtection","setLanguage","setLabel","readMessage","addCoins","setInitialized","readBytes","setRevision","setBootloaderHash","setImported","setPinCached","setPassphraseCached","addPolicies","setModel","setFirmwareVariant","setFirmwareHash","setNoBackup","setWipeCodeProtection","writeString","writeUint32","writeBool","length","writeRepeatedMessage","writeBytes","getVendor","getFieldWithDefault","setField","clearVendor","hasVendor","getMajorVersion","clearMajorVersion","hasMajorVersion","getMinorVersion","clearMinorVersion","hasMinorVersion","getPatchVersion","clearPatchVersion","hasPatchVersion","getBootloaderMode","getBooleanFieldWithDefault","clearBootloaderMode","hasBootloaderMode","getDeviceId","clearDeviceId","hasDeviceId","getPinProtection","clearPinProtection","hasPinProtection","getPassphraseProtection","clearPassphraseProtection","hasPassphraseProtection","getLanguage","clearLanguage","hasLanguage","getLabel","clearLabel","hasLabel","getRepeatedWrapperField","setCoinsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearCoinsList","getInitialized","clearInitialized","hasInitialized","getRevision","bytesAsB64","getRevision_asU8","bytesAsU8","clearRevision","hasRevision","getBootloaderHash","getBootloaderHash_asU8","clearBootloaderHash","hasBootloaderHash","getImported","clearImported","hasImported","getPinCached","clearPinCached","hasPinCached","getPassphraseCached","clearPassphraseCached","hasPassphraseCached","setPoliciesList","clearPoliciesList","getModel","clearModel","hasModel","getFirmwareVariant","clearFirmwareVariant","hasFirmwareVariant","getFirmwareHash","getFirmwareHash_asU8","clearFirmwareHash","hasFirmwareHash","getNoBackup","clearNoBackup","hasNoBackup","getWipeCodeProtection","clearWipeCodeProtection","hasWipeCodeProtection","start","end","setStart","setEnd","getStart","clearStart","hasStart","getEnd","clearEnd","hasEnd","tableList","getTableList","numCoins","chunkSize","addTable","setNumCoins","setChunkSize","setTableList","clearTableList","getNumCoins","clearNumCoins","hasNumCoins","getChunkSize","clearChunkSize","hasChunkSize","usePassphrase","autoLockDelayMs","u2fCounter","setUsePassphrase","setAutoLockDelayMs","setU2fCounter","getUsePassphrase","clearUsePassphrase","hasUsePassphrase","getAutoLockDelayMs","clearAutoLockDelayMs","hasAutoLockDelayMs","getU2fCounter","clearU2fCounter","hasU2fCounter","remove","setRemove","getRemove","clearRemove","hasRemove","buttonProtection","setMessage","setButtonProtection","getMessage","clearMessage","hasMessage","getButtonProtection","clearButtonProtection","hasButtonProtection","code","readEnum","setCode","writeEnum","getCode","clearCode","hasCode","data","setData","getData","clearData","hasData","type","setType","getType","clearType","hasType","pin","setPin","getPin","clearPin","hasPin","passphrase","setPassphrase","getPassphrase","clearPassphrase","hasPassphrase","size","setSize","getSize","clearSize","hasSize","entropy","getEntropy_asB64","setEntropy","getEntropy","getEntropy_asU8","clearEntropy","hasEntropy","addressNList","getRepeatedField","ecdsaCurveName","showDisplay","coinName","scriptType","values","isDelimited","readPackedUint32","i","addAddressN","setEcdsaCurveName","setShowDisplay","setCoinName","setScriptType","getAddressNList","writeRepeatedUint32","setAddressNList","addToRepeatedField","clearAddressNList","getEcdsaCurveName","clearEcdsaCurveName","hasEcdsaCurveName","getShowDisplay","clearShowDisplay","hasShowDisplay","getCoinName","clearCoinName","hasCoinName","getScriptType","clearScriptType","hasScriptType","node","getNode","HDNodeType","xpub","setNode","setXpub","writeMessage","getWrapperField","setWrapperField","clearNode","hasNode","getXpub","clearXpub","hasXpub","multisig","getMultisig","MultisigRedeemScriptType","setMultisig","clearMultisig","hasMultisig","address","setAddress","getAddress","clearAddress","hasAddress","getAddress_asB64","addressStr","setAddressStr","getAddress_asU8","getAddressStr","clearAddressStr","hasAddressStr","mnemonic","skipChecksum","setMnemonic","setSkipChecksum","getMnemonic","clearMnemonic","hasMnemonic","getSkipChecksum","clearSkipChecksum","hasSkipChecksum","displayRandom","strength","setDisplayRandom","setStrength","getDisplayRandom","clearDisplayRandom","hasDisplayRandom","getStrength","clearStrength","hasStrength","wordCount","enforceWordlist","useCharacterCipher","dryRun","setWordCount","setEnforceWordlist","setUseCharacterCipher","setDryRun","getWordCount","clearWordCount","hasWordCount","getEnforceWordlist","clearEnforceWordlist","hasEnforceWordlist","getUseCharacterCipher","clearUseCharacterCipher","hasUseCharacterCipher","getDryRun","clearDryRun","hasDryRun","word","setWord","getWord","clearWord","hasWord","wordPos","characterPos","setWordPos","setCharacterPos","getWordPos","clearWordPos","hasWordPos","getCharacterPos","clearCharacterPos","hasCharacterPos","character","pb_delete","done","setCharacter","setDelete","setDone","getCharacter","clearCharacter","hasCharacter","getDelete","clearDelete","hasDelete","getDone","clearDone","hasDone","getMessage_asB64","getMessage_asU8","signature","getSignature_asB64","setSignature","getSignature","getSignature_asU8","clearSignature","hasSignature","pubkey","getPubkey_asB64","displayOnly","setPubkey","setDisplayOnly","getPubkey","getPubkey_asU8","clearPubkey","hasPubkey","getDisplayOnly","clearDisplayOnly","hasDisplayOnly","nonce","getNonce_asB64","hmac","getHmac_asB64","setNonce","setHmac","getNonce","getNonce_asU8","clearNonce","hasNonce","getHmac","getHmac_asU8","clearHmac","hasHmac","key","getValue_asB64","encrypt","askOnEncrypt","askOnDecrypt","iv","getIv_asB64","setKey","setValue","setEncrypt","setAskOnEncrypt","setAskOnDecrypt","setIv","getKey","clearKey","hasKey","getValue","getValue_asU8","clearValue","hasValue","getEncrypt","clearEncrypt","hasEncrypt","getAskOnEncrypt","clearAskOnEncrypt","hasAskOnEncrypt","getAskOnDecrypt","clearAskOnDecrypt","hasAskOnDecrypt","getIv","getIv_asU8","clearIv","hasIv","outputsCount","inputsCount","version","lockTime","expiry","overwintered","versionGroupId","branchId","setOutputsCount","setInputsCount","setVersion","setLockTime","setExpiry","setOverwintered","setVersionGroupId","setBranchId","getOutputsCount","clearOutputsCount","hasOutputsCount","getInputsCount","clearInputsCount","hasInputsCount","getVersion","clearVersion","hasVersion","getLockTime","clearLockTime","hasLockTime","getExpiry","clearExpiry","hasExpiry","getOverwintered","clearOverwintered","hasOverwintered","getVersionGroupId","clearVersionGroupId","hasVersionGroupId","getBranchId","clearBranchId","hasBranchId","requestType","details","getDetails","TxRequestDetailsType","serialized","getSerialized","TxRequestSerializedType","setRequestType","setDetails","setSerialized","getRequestType","clearRequestType","hasRequestType","clearDetails","hasDetails","clearSerialized","hasSerialized","tx","getTx","TransactionType","setTx","clearTx","hasTx","RawTransactionType","gasPrice","getGasPrice_asB64","gasLimit","getGasLimit_asB64","to","getTo_asB64","dataInitialChunk","getDataInitialChunk_asB64","dataLength","toAddressNList","addressType","exchangeType","getExchangeType","ExchangeType","chainId","maxFeePerGas","getMaxFeePerGas_asB64","maxPriorityFeePerGas","getMaxPriorityFeePerGas_asB64","tokenValue","getTokenValue_asB64","tokenTo","getTokenTo_asB64","tokenShortcut","txType","setGasPrice","setGasLimit","setTo","setDataInitialChunk","setDataLength","addToAddressN","setAddressType","setExchangeType","setChainId","setMaxFeePerGas","setMaxPriorityFeePerGas","setTokenValue","setTokenTo","setTokenShortcut","setTxType","getToAddressNList","getGasPrice","getGasPrice_asU8","clearGasPrice","hasGasPrice","getGasLimit","getGasLimit_asU8","clearGasLimit","hasGasLimit","getTo","getTo_asU8","clearTo","hasTo","getDataInitialChunk","getDataInitialChunk_asU8","clearDataInitialChunk","hasDataInitialChunk","getDataLength","clearDataLength","hasDataLength","setToAddressNList","clearToAddressNList","getAddressType","clearAddressType","hasAddressType","clearExchangeType","hasExchangeType","getChainId","clearChainId","hasChainId","getMaxFeePerGas","getMaxFeePerGas_asU8","clearMaxFeePerGas","hasMaxFeePerGas","getMaxPriorityFeePerGas","getMaxPriorityFeePerGas_asU8","clearMaxPriorityFeePerGas","hasMaxPriorityFeePerGas","getTokenValue","getTokenValue_asU8","clearTokenValue","hasTokenValue","getTokenTo","getTokenTo_asU8","clearTokenTo","hasTokenTo","getTokenShortcut","clearTokenShortcut","hasTokenShortcut","getTxType","clearTxType","hasTxType","signatureV","signatureR","getSignatureR_asB64","signatureS","getSignatureS_asB64","hash","getHash_asB64","signatureDer","getSignatureDer_asB64","setSignatureV","setSignatureR","setSignatureS","setHash","setSignatureDer","getSignatureV","clearSignatureV","hasSignatureV","getSignatureR","getSignatureR_asU8","clearSignatureR","hasSignatureR","getSignatureS","getSignatureS_asU8","clearSignatureS","hasSignatureS","getHash","getHash_asU8","clearHash","hasHash","getSignatureDer","getSignatureDer_asU8","clearSignatureDer","hasSignatureDer","dataChunk","getDataChunk_asB64","setDataChunk","getDataChunk","getDataChunk_asU8","clearDataChunk","hasDataChunk","identity","getIdentity","IdentityType","challengeHidden","getChallengeHidden_asB64","challengeVisual","setIdentity","setChallengeHidden","setChallengeVisual","clearIdentity","hasIdentity","getChallengeHidden","getChallengeHidden_asU8","clearChallengeHidden","hasChallengeHidden","getChallengeVisual","clearChallengeVisual","hasChallengeVisual","publicKey","getPublicKey_asB64","setPublicKey","getPublicKey","getPublicKey_asU8","clearPublicKey","hasPublicKey","policyList","getPolicyList","addPolicy","setPolicyList","clearPolicyList","challenge","getChallenge_asB64","setLength","setChallenge","getLength","clearLength","hasLength","getChallenge","getChallenge_asU8","clearChallenge","hasChallenge","getData_asB64","erase","setErase","getData_asU8","getErase","clearErase","hasErase","payloadHash","getPayloadHash_asB64","payload","getPayload_asB64","setPayloadHash","setPayload","getPayloadHash","getPayloadHash_asU8","clearPayloadHash","hasPayloadHash","getPayload","getPayload_asU8","clearPayload","hasPayload","yesNo","setYesNo","getYesNo","clearYesNo","hasYesNo","layout","getLayout_asB64","matrix","resetWord","resetEntropy","getResetEntropy_asB64","recoveryFakeWord","recoveryWordPos","recoveryCipher","recoveryAutoCompletedWord","storageHash","getStorageHash_asB64","setLayout","setMatrix","setResetWord","setResetEntropy","setRecoveryFakeWord","setRecoveryWordPos","setRecoveryCipher","setRecoveryAutoCompletedWord","setStorageHash","getLayout","getLayout_asU8","clearLayout","hasLayout","getMatrix","clearMatrix","hasMatrix","getResetWord","clearResetWord","hasResetWord","getResetEntropy","getResetEntropy_asU8","clearResetEntropy","hasResetEntropy","getRecoveryFakeWord","clearRecoveryFakeWord","hasRecoveryFakeWord","getRecoveryWordPos","clearRecoveryWordPos","hasRecoveryWordPos","getRecoveryCipher","clearRecoveryCipher","hasRecoveryCipher","getRecoveryAutoCompletedWord","clearRecoveryAutoCompletedWord","hasRecoveryAutoCompletedWord","getStorageHash","getStorageHash_asU8","clearStorageHash","hasStorageHash","level","bucket","text","setLevel","setBucket","setText","getLevel","clearLevel","hasLevel","getBucket","clearBucket","hasBucket","getText","clearText","hasText","MessageType","MESSAGETYPE_INITIALIZE","MESSAGETYPE_PING","MESSAGETYPE_SUCCESS","MESSAGETYPE_FAILURE","MESSAGETYPE_CHANGEPIN","MESSAGETYPE_WIPEDEVICE","MESSAGETYPE_FIRMWAREERASE","MESSAGETYPE_FIRMWAREUPLOAD","MESSAGETYPE_GETENTROPY","MESSAGETYPE_ENTROPY","MESSAGETYPE_GETPUBLICKEY","MESSAGETYPE_PUBLICKEY","MESSAGETYPE_LOADDEVICE","MESSAGETYPE_RESETDEVICE","MESSAGETYPE_SIGNTX","MESSAGETYPE_FEATURES","MESSAGETYPE_PINMATRIXREQUEST","MESSAGETYPE_PINMATRIXACK","MESSAGETYPE_CANCEL","MESSAGETYPE_TXREQUEST","MESSAGETYPE_TXACK","MESSAGETYPE_CIPHERKEYVALUE","MESSAGETYPE_CLEARSESSION","MESSAGETYPE_APPLYSETTINGS","MESSAGETYPE_BUTTONREQUEST","MESSAGETYPE_BUTTONACK","MESSAGETYPE_GETADDRESS","MESSAGETYPE_ADDRESS","MESSAGETYPE_ENTROPYREQUEST","MESSAGETYPE_ENTROPYACK","MESSAGETYPE_SIGNMESSAGE","MESSAGETYPE_VERIFYMESSAGE","MESSAGETYPE_MESSAGESIGNATURE","MESSAGETYPE_PASSPHRASEREQUEST","MESSAGETYPE_PASSPHRASEACK","MESSAGETYPE_RECOVERYDEVICE","MESSAGETYPE_WORDREQUEST","MESSAGETYPE_WORDACK","MESSAGETYPE_CIPHEREDKEYVALUE","MESSAGETYPE_ENCRYPTMESSAGE","MESSAGETYPE_ENCRYPTEDMESSAGE","MESSAGETYPE_DECRYPTMESSAGE","MESSAGETYPE_DECRYPTEDMESSAGE","MESSAGETYPE_SIGNIDENTITY","MESSAGETYPE_SIGNEDIDENTITY","MESSAGETYPE_GETFEATURES","MESSAGETYPE_ETHEREUMGETADDRESS","MESSAGETYPE_ETHEREUMADDRESS","MESSAGETYPE_ETHEREUMSIGNTX","MESSAGETYPE_ETHEREUMTXREQUEST","MESSAGETYPE_ETHEREUMTXACK","MESSAGETYPE_CHARACTERREQUEST","MESSAGETYPE_CHARACTERACK","MESSAGETYPE_RAWTXACK","MESSAGETYPE_APPLYPOLICIES","MESSAGETYPE_FLASHHASH","MESSAGETYPE_FLASHWRITE","MESSAGETYPE_FLASHHASHRESPONSE","MESSAGETYPE_DEBUGLINKFLASHDUMP","MESSAGETYPE_DEBUGLINKFLASHDUMPRESPONSE","MESSAGETYPE_SOFTRESET","MESSAGETYPE_DEBUGLINKDECISION","MESSAGETYPE_DEBUGLINKGETSTATE","MESSAGETYPE_DEBUGLINKSTATE","MESSAGETYPE_DEBUGLINKSTOP","MESSAGETYPE_DEBUGLINKLOG","MESSAGETYPE_DEBUGLINKFILLCONFIG","MESSAGETYPE_GETCOINTABLE","MESSAGETYPE_COINTABLE","MESSAGETYPE_ETHEREUMSIGNMESSAGE","MESSAGETYPE_ETHEREUMVERIFYMESSAGE","MESSAGETYPE_ETHEREUMMESSAGESIGNATURE","MESSAGETYPE_CHANGEWIPECODE","MESSAGETYPE_RIPPLEGETADDRESS","MESSAGETYPE_RIPPLEADDRESS","MESSAGETYPE_RIPPLESIGNTX","MESSAGETYPE_RIPPLESIGNEDTX","MESSAGETYPE_THORCHAINGETADDRESS","MESSAGETYPE_THORCHAINADDRESS","MESSAGETYPE_THORCHAINSIGNTX","MESSAGETYPE_THORCHAINMSGREQUEST","MESSAGETYPE_THORCHAINMSGACK","MESSAGETYPE_THORCHAINSIGNEDTX","MESSAGETYPE_EOSGETPUBLICKEY","MESSAGETYPE_EOSPUBLICKEY","MESSAGETYPE_EOSSIGNTX","MESSAGETYPE_EOSTXACTIONREQUEST","MESSAGETYPE_EOSTXACTIONACK","MESSAGETYPE_EOSSIGNEDTX","MESSAGETYPE_NANOGETADDRESS","MESSAGETYPE_NANOADDRESS","MESSAGETYPE_NANOSIGNTX","MESSAGETYPE_NANOSIGNEDTX","MESSAGETYPE_BINANCEGETADDRESS","MESSAGETYPE_BINANCEADDRESS","MESSAGETYPE_BINANCEGETPUBLICKEY","MESSAGETYPE_BINANCEPUBLICKEY","MESSAGETYPE_BINANCESIGNTX","MESSAGETYPE_BINANCETXREQUEST","MESSAGETYPE_BINANCETRANSFERMSG","MESSAGETYPE_BINANCEORDERMSG","MESSAGETYPE_BINANCECANCELMSG","MESSAGETYPE_BINANCESIGNEDTX","MESSAGETYPE_COSMOSGETADDRESS","MESSAGETYPE_COSMOSADDRESS","MESSAGETYPE_COSMOSSIGNTX","MESSAGETYPE_COSMOSMSGREQUEST","MESSAGETYPE_COSMOSMSGACK","MESSAGETYPE_COSMOSSIGNEDTX","MESSAGETYPE_TENDERMINTGETADDRESS","MESSAGETYPE_TENDERMINTADDRESS","MESSAGETYPE_TENDERMINTSIGNTX","MESSAGETYPE_TENDERMINTMSGREQUEST","MESSAGETYPE_TENDERMINTMSGACK","MESSAGETYPE_TENDERMINTMSGSEND","MESSAGETYPE_TENDERMINTSIGNEDTX","exports"],"mappings":"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","sourcesContent":["// source: messages.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function(){ return this }).call(null);\n\nvar types_pb = require('./types_pb.js');\ngoog.object.extend(proto, types_pb);\ngoog.exportSymbol('proto.Address', null, global);\ngoog.exportSymbol('proto.ApplyPolicies', null, global);\ngoog.exportSymbol('proto.ApplySettings', null, global);\ngoog.exportSymbol('proto.ButtonAck', null, global);\ngoog.exportSymbol('proto.ButtonRequest', null, global);\ngoog.exportSymbol('proto.Cancel', null, global);\ngoog.exportSymbol('proto.ChangePin', null, global);\ngoog.exportSymbol('proto.ChangeWipeCode', null, global);\ngoog.exportSymbol('proto.CharacterAck', null, global);\ngoog.exportSymbol('proto.CharacterRequest', null, global);\ngoog.exportSymbol('proto.CipherKeyValue', null, global);\ngoog.exportSymbol('proto.CipheredKeyValue', null, global);\ngoog.exportSymbol('proto.ClearSession', null, global);\ngoog.exportSymbol('proto.CoinTable', null, global);\ngoog.exportSymbol('proto.DebugLinkDecision', null, global);\ngoog.exportSymbol('proto.DebugLinkFillConfig', null, global);\ngoog.exportSymbol('proto.DebugLinkFlashDump', null, global);\ngoog.exportSymbol('proto.DebugLinkFlashDumpResponse', null, global);\ngoog.exportSymbol('proto.DebugLinkGetState', null, global);\ngoog.exportSymbol('proto.DebugLinkLog', null, global);\ngoog.exportSymbol('proto.DebugLinkState', null, global);\ngoog.exportSymbol('proto.DebugLinkStop', null, global);\ngoog.exportSymbol('proto.DecryptMessage', null, global);\ngoog.exportSymbol('proto.DecryptedMessage', null, global);\ngoog.exportSymbol('proto.EncryptMessage', null, global);\ngoog.exportSymbol('proto.EncryptedMessage', null, global);\ngoog.exportSymbol('proto.Entropy', null, global);\ngoog.exportSymbol('proto.EntropyAck', null, global);\ngoog.exportSymbol('proto.EntropyRequest', null, global);\ngoog.exportSymbol('proto.EthereumAddress', null, global);\ngoog.exportSymbol('proto.EthereumGetAddress', null, global);\ngoog.exportSymbol('proto.EthereumMessageSignature', null, global);\ngoog.exportSymbol('proto.EthereumSignMessage', null, global);\ngoog.exportSymbol('proto.EthereumSignTx', null, global);\ngoog.exportSymbol('proto.EthereumTxAck', null, global);\ngoog.exportSymbol('proto.EthereumTxRequest', null, global);\ngoog.exportSymbol('proto.EthereumVerifyMessage', null, global);\ngoog.exportSymbol('proto.Failure', null, global);\ngoog.exportSymbol('proto.Features', null, global);\ngoog.exportSymbol('proto.FirmwareErase', null, global);\ngoog.exportSymbol('proto.FirmwareUpload', null, global);\ngoog.exportSymbol('proto.FlashHash', null, global);\ngoog.exportSymbol('proto.FlashHashResponse', null, global);\ngoog.exportSymbol('proto.FlashWrite', null, global);\ngoog.exportSymbol('proto.GetAddress', null, global);\ngoog.exportSymbol('proto.GetCoinTable', null, global);\ngoog.exportSymbol('proto.GetEntropy', null, global);\ngoog.exportSymbol('proto.GetFeatures', null, global);\ngoog.exportSymbol('proto.GetPublicKey', null, global);\ngoog.exportSymbol('proto.Initialize', null, global);\ngoog.exportSymbol('proto.LoadDevice', null, global);\ngoog.exportSymbol('proto.MessageSignature', null, global);\ngoog.exportSymbol('proto.MessageType', null, global);\ngoog.exportSymbol('proto.PassphraseAck', null, global);\ngoog.exportSymbol('proto.PassphraseRequest', null, global);\ngoog.exportSymbol('proto.PinMatrixAck', null, global);\ngoog.exportSymbol('proto.PinMatrixRequest', null, global);\ngoog.exportSymbol('proto.Ping', null, global);\ngoog.exportSymbol('proto.PublicKey', null, global);\ngoog.exportSymbol('proto.RawTxAck', null, global);\ngoog.exportSymbol('proto.RecoveryDevice', null, global);\ngoog.exportSymbol('proto.ResetDevice', null, global);\ngoog.exportSymbol('proto.SignIdentity', null, global);\ngoog.exportSymbol('proto.SignMessage', null, global);\ngoog.exportSymbol('proto.SignTx', null, global);\ngoog.exportSymbol('proto.SignedIdentity', null, global);\ngoog.exportSymbol('proto.SoftReset', null, global);\ngoog.exportSymbol('proto.Success', null, global);\ngoog.exportSymbol('proto.TxAck', null, global);\ngoog.exportSymbol('proto.TxRequest', null, global);\ngoog.exportSymbol('proto.VerifyMessage', null, global);\ngoog.exportSymbol('proto.WipeDevice', null, global);\ngoog.exportSymbol('proto.WordAck', null, global);\ngoog.exportSymbol('proto.WordRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Initialize = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Initialize, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Initialize.displayName = 'proto.Initialize';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.GetFeatures = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.GetFeatures, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetFeatures.displayName = 'proto.GetFeatures';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Features = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Features.repeatedFields_, null);\n};\ngoog.inherits(proto.Features, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Features.displayName = 'proto.Features';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.GetCoinTable = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.GetCoinTable, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetCoinTable.displayName = 'proto.GetCoinTable';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CoinTable = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoinTable.repeatedFields_, null);\n};\ngoog.inherits(proto.CoinTable, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CoinTable.displayName = 'proto.CoinTable';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ClearSession = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ClearSession, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ClearSession.displayName = 'proto.ClearSession';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ApplySettings = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ApplySettings, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ApplySettings.displayName = 'proto.ApplySettings';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ChangePin = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ChangePin, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ChangePin.displayName = 'proto.ChangePin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Ping = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Ping, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Ping.displayName = 'proto.Ping';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Success = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Success, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Success.displayName = 'proto.Success';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Failure = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Failure, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Failure.displayName = 'proto.Failure';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ButtonRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ButtonRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ButtonRequest.displayName = 'proto.ButtonRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ButtonAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ButtonAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ButtonAck.displayName = 'proto.ButtonAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PinMatrixRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PinMatrixRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PinMatrixRequest.displayName = 'proto.PinMatrixRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PinMatrixAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PinMatrixAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PinMatrixAck.displayName = 'proto.PinMatrixAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Cancel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Cancel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Cancel.displayName = 'proto.Cancel';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PassphraseRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PassphraseRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PassphraseRequest.displayName = 'proto.PassphraseRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PassphraseAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PassphraseAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PassphraseAck.displayName = 'proto.PassphraseAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.GetEntropy = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.GetEntropy, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetEntropy.displayName = 'proto.GetEntropy';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Entropy = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Entropy, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Entropy.displayName = 'proto.Entropy';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.GetPublicKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.GetPublicKey.repeatedFields_, null);\n};\ngoog.inherits(proto.GetPublicKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetPublicKey.displayName = 'proto.GetPublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PublicKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PublicKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PublicKey.displayName = 'proto.PublicKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.GetAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.GetAddress.repeatedFields_, null);\n};\ngoog.inherits(proto.GetAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.GetAddress.displayName = 'proto.GetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumGetAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthereumGetAddress.repeatedFields_, null);\n};\ngoog.inherits(proto.EthereumGetAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumGetAddress.displayName = 'proto.EthereumGetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Address = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Address, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Address.displayName = 'proto.Address';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EthereumAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumAddress.displayName = 'proto.EthereumAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.WipeDevice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.WipeDevice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.WipeDevice.displayName = 'proto.WipeDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.LoadDevice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.LoadDevice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoadDevice.displayName = 'proto.LoadDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ResetDevice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ResetDevice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ResetDevice.displayName = 'proto.ResetDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EntropyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EntropyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EntropyRequest.displayName = 'proto.EntropyRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EntropyAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EntropyAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EntropyAck.displayName = 'proto.EntropyAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RecoveryDevice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.RecoveryDevice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.RecoveryDevice.displayName = 'proto.RecoveryDevice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.WordRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.WordRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.WordRequest.displayName = 'proto.WordRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.WordAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.WordAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.WordAck.displayName = 'proto.WordAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CharacterRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CharacterRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CharacterRequest.displayName = 'proto.CharacterRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CharacterAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CharacterAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CharacterAck.displayName = 'proto.CharacterAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SignMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.SignMessage.repeatedFields_, null);\n};\ngoog.inherits(proto.SignMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignMessage.displayName = 'proto.SignMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.VerifyMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.VerifyMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.VerifyMessage.displayName = 'proto.VerifyMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.MessageSignature = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.MessageSignature, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.MessageSignature.displayName = 'proto.MessageSignature';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EncryptMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EncryptMessage.repeatedFields_, null);\n};\ngoog.inherits(proto.EncryptMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EncryptMessage.displayName = 'proto.EncryptMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EncryptedMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EncryptedMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EncryptedMessage.displayName = 'proto.EncryptedMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DecryptMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.DecryptMessage.repeatedFields_, null);\n};\ngoog.inherits(proto.DecryptMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DecryptMessage.displayName = 'proto.DecryptMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DecryptedMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DecryptedMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DecryptedMessage.displayName = 'proto.DecryptedMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CipherKeyValue = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.CipherKeyValue.repeatedFields_, null);\n};\ngoog.inherits(proto.CipherKeyValue, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CipherKeyValue.displayName = 'proto.CipherKeyValue';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CipheredKeyValue = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CipheredKeyValue, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CipheredKeyValue.displayName = 'proto.CipheredKeyValue';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SignTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SignTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignTx.displayName = 'proto.SignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TxRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxRequest.displayName = 'proto.TxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TxAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TxAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TxAck.displayName = 'proto.TxAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.RawTxAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.RawTxAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.RawTxAck.displayName = 'proto.RawTxAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumSignTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthereumSignTx.repeatedFields_, null);\n};\ngoog.inherits(proto.EthereumSignTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumSignTx.displayName = 'proto.EthereumSignTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumTxRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EthereumTxRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumTxRequest.displayName = 'proto.EthereumTxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumTxAck = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EthereumTxAck, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumTxAck.displayName = 'proto.EthereumTxAck';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumSignMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EthereumSignMessage.repeatedFields_, null);\n};\ngoog.inherits(proto.EthereumSignMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumSignMessage.displayName = 'proto.EthereumSignMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumVerifyMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EthereumVerifyMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumVerifyMessage.displayName = 'proto.EthereumVerifyMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EthereumMessageSignature = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EthereumMessageSignature, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EthereumMessageSignature.displayName = 'proto.EthereumMessageSignature';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SignIdentity = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SignIdentity, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignIdentity.displayName = 'proto.SignIdentity';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SignedIdentity = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SignedIdentity, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SignedIdentity.displayName = 'proto.SignedIdentity';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ApplyPolicies = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ApplyPolicies.repeatedFields_, null);\n};\ngoog.inherits(proto.ApplyPolicies, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ApplyPolicies.displayName = 'proto.ApplyPolicies';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FlashHash = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.FlashHash, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FlashHash.displayName = 'proto.FlashHash';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FlashWrite = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.FlashWrite, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FlashWrite.displayName = 'proto.FlashWrite';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FlashHashResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.FlashHashResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FlashHashResponse.displayName = 'proto.FlashHashResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkFlashDump = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkFlashDump, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkFlashDump.displayName = 'proto.DebugLinkFlashDump';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkFlashDumpResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkFlashDumpResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkFlashDumpResponse.displayName = 'proto.DebugLinkFlashDumpResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SoftReset = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SoftReset, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SoftReset.displayName = 'proto.SoftReset';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FirmwareErase = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.FirmwareErase, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FirmwareErase.displayName = 'proto.FirmwareErase';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FirmwareUpload = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.FirmwareUpload, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FirmwareUpload.displayName = 'proto.FirmwareUpload';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkDecision = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkDecision, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkDecision.displayName = 'proto.DebugLinkDecision';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkGetState = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkGetState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkGetState.displayName = 'proto.DebugLinkGetState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkState = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkState.displayName = 'proto.DebugLinkState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkStop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkStop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkStop.displayName = 'proto.DebugLinkStop';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkLog = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkLog, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkLog.displayName = 'proto.DebugLinkLog';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DebugLinkFillConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DebugLinkFillConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DebugLinkFillConfig.displayName = 'proto.DebugLinkFillConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ChangeWipeCode = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ChangeWipeCode, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ChangeWipeCode.displayName = 'proto.ChangeWipeCode';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Initialize.prototype.toObject = function(opt_includeInstance) {\n  return proto.Initialize.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Initialize} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Initialize.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Initialize}\n */\nproto.Initialize.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Initialize;\n  return proto.Initialize.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Initialize} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Initialize}\n */\nproto.Initialize.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Initialize.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Initialize.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Initialize} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Initialize.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.GetFeatures.prototype.toObject = function(opt_includeInstance) {\n  return proto.GetFeatures.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.GetFeatures} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetFeatures.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetFeatures}\n */\nproto.GetFeatures.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetFeatures;\n  return proto.GetFeatures.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetFeatures} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetFeatures}\n */\nproto.GetFeatures.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.GetFeatures.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.GetFeatures.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetFeatures} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetFeatures.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Features.repeatedFields_ = [11,18];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Features.prototype.toObject = function(opt_includeInstance) {\n  return proto.Features.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Features} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Features.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    vendor: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    majorVersion: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    minorVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    patchVersion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    bootloaderMode: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,\n    deviceId: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    pinProtection: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n    passphraseProtection: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,\n    language: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    label: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n    coinsList: jspb.Message.toObjectList(msg.getCoinsList(),\n    types_pb.CoinType.toObject, includeInstance),\n    initialized: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,\n    revision: msg.getRevision_asB64(),\n    bootloaderHash: msg.getBootloaderHash_asB64(),\n    imported: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,\n    pinCached: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,\n    passphraseCached: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,\n    policiesList: jspb.Message.toObjectList(msg.getPoliciesList(),\n    types_pb.PolicyType.toObject, includeInstance),\n    model: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,\n    firmwareVariant: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,\n    firmwareHash: msg.getFirmwareHash_asB64(),\n    noBackup: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,\n    wipeCodeProtection: (f = jspb.Message.getBooleanField(msg, 25)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Features}\n */\nproto.Features.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Features;\n  return proto.Features.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Features} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Features}\n */\nproto.Features.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVendor(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMajorVersion(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMinorVersion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPatchVersion(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBootloaderMode(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeviceId(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPinProtection(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseProtection(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLanguage(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 11:\n      var value = new types_pb.CoinType;\n      reader.readMessage(value,types_pb.CoinType.deserializeBinaryFromReader);\n      msg.addCoins(value);\n      break;\n    case 12:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInitialized(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRevision(value);\n      break;\n    case 14:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBootloaderHash(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setImported(value);\n      break;\n    case 16:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPinCached(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseCached(value);\n      break;\n    case 18:\n      var value = new types_pb.PolicyType;\n      reader.readMessage(value,types_pb.PolicyType.deserializeBinaryFromReader);\n      msg.addPolicies(value);\n      break;\n    case 21:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setModel(value);\n      break;\n    case 22:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirmwareVariant(value);\n      break;\n    case 23:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirmwareHash(value);\n      break;\n    case 24:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoBackup(value);\n      break;\n    case 25:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setWipeCodeProtection(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Features.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Features.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Features} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Features.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getCoinsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      types_pb.CoinType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeBool(\n      12,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeBytes(\n      14,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));\n  if (f != null) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));\n  if (f != null) {\n    writer.writeBool(\n      16,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));\n  if (f != null) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = message.getPoliciesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      18,\n      f,\n      types_pb.PolicyType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 21));\n  if (f != null) {\n    writer.writeString(\n      21,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 22));\n  if (f != null) {\n    writer.writeString(\n      22,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 23));\n  if (f != null) {\n    writer.writeBytes(\n      23,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));\n  if (f != null) {\n    writer.writeBool(\n      24,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));\n  if (f != null) {\n    writer.writeBool(\n      25,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string vendor = 1;\n * @return {string}\n */\nproto.Features.prototype.getVendor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setVendor = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearVendor = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasVendor = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 major_version = 2;\n * @return {number}\n */\nproto.Features.prototype.getMajorVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setMajorVersion = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearMajorVersion = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasMajorVersion = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 minor_version = 3;\n * @return {number}\n */\nproto.Features.prototype.getMinorVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setMinorVersion = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearMinorVersion = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasMinorVersion = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint32 patch_version = 4;\n * @return {number}\n */\nproto.Features.prototype.getPatchVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setPatchVersion = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearPatchVersion = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasPatchVersion = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bool bootloader_mode = 5;\n * @return {boolean}\n */\nproto.Features.prototype.getBootloaderMode = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setBootloaderMode = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearBootloaderMode = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasBootloaderMode = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string device_id = 6;\n * @return {string}\n */\nproto.Features.prototype.getDeviceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setDeviceId = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearDeviceId = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasDeviceId = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bool pin_protection = 7;\n * @return {boolean}\n */\nproto.Features.prototype.getPinProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setPinProtection = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearPinProtection = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasPinProtection = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional bool passphrase_protection = 8;\n * @return {boolean}\n */\nproto.Features.prototype.getPassphraseProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setPassphraseProtection = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearPassphraseProtection = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasPassphraseProtection = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional string language = 9;\n * @return {string}\n */\nproto.Features.prototype.getLanguage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setLanguage = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearLanguage = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasLanguage = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional string label = 10;\n * @return {string}\n */\nproto.Features.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setLabel = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearLabel = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasLabel = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * repeated CoinType coins = 11;\n * @return {!Array<!proto.CoinType>}\n */\nproto.Features.prototype.getCoinsList = function() {\n  return /** @type{!Array<!proto.CoinType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, types_pb.CoinType, 11));\n};\n\n\n/**\n * @param {!Array<!proto.CoinType>} value\n * @return {!proto.Features} returns this\n*/\nproto.Features.prototype.setCoinsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.CoinType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.CoinType}\n */\nproto.Features.prototype.addCoins = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.CoinType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearCoinsList = function() {\n  return this.setCoinsList([]);\n};\n\n\n/**\n * optional bool initialized = 12;\n * @return {boolean}\n */\nproto.Features.prototype.getInitialized = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setInitialized = function(value) {\n  return jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearInitialized = function() {\n  return jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasInitialized = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional bytes revision = 13;\n * @return {!(string|Uint8Array)}\n */\nproto.Features.prototype.getRevision = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes revision = 13;\n * This is a type-conversion wrapper around `getRevision()`\n * @return {string}\n */\nproto.Features.prototype.getRevision_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRevision()));\n};\n\n\n/**\n * optional bytes revision = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRevision()`\n * @return {!Uint8Array}\n */\nproto.Features.prototype.getRevision_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRevision()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setRevision = function(value) {\n  return jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearRevision = function() {\n  return jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasRevision = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional bytes bootloader_hash = 14;\n * @return {!(string|Uint8Array)}\n */\nproto.Features.prototype.getBootloaderHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * optional bytes bootloader_hash = 14;\n * This is a type-conversion wrapper around `getBootloaderHash()`\n * @return {string}\n */\nproto.Features.prototype.getBootloaderHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBootloaderHash()));\n};\n\n\n/**\n * optional bytes bootloader_hash = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBootloaderHash()`\n * @return {!Uint8Array}\n */\nproto.Features.prototype.getBootloaderHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBootloaderHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setBootloaderHash = function(value) {\n  return jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearBootloaderHash = function() {\n  return jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasBootloaderHash = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional bool imported = 15;\n * @return {boolean}\n */\nproto.Features.prototype.getImported = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setImported = function(value) {\n  return jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearImported = function() {\n  return jspb.Message.setField(this, 15, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasImported = function() {\n  return jspb.Message.getField(this, 15) != null;\n};\n\n\n/**\n * optional bool pin_cached = 16;\n * @return {boolean}\n */\nproto.Features.prototype.getPinCached = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setPinCached = function(value) {\n  return jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearPinCached = function() {\n  return jspb.Message.setField(this, 16, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasPinCached = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n/**\n * optional bool passphrase_cached = 17;\n * @return {boolean}\n */\nproto.Features.prototype.getPassphraseCached = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setPassphraseCached = function(value) {\n  return jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearPassphraseCached = function() {\n  return jspb.Message.setField(this, 17, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasPassphraseCached = function() {\n  return jspb.Message.getField(this, 17) != null;\n};\n\n\n/**\n * repeated PolicyType policies = 18;\n * @return {!Array<!proto.PolicyType>}\n */\nproto.Features.prototype.getPoliciesList = function() {\n  return /** @type{!Array<!proto.PolicyType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, types_pb.PolicyType, 18));\n};\n\n\n/**\n * @param {!Array<!proto.PolicyType>} value\n * @return {!proto.Features} returns this\n*/\nproto.Features.prototype.setPoliciesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 18, value);\n};\n\n\n/**\n * @param {!proto.PolicyType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.PolicyType}\n */\nproto.Features.prototype.addPolicies = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.PolicyType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearPoliciesList = function() {\n  return this.setPoliciesList([]);\n};\n\n\n/**\n * optional string model = 21;\n * @return {string}\n */\nproto.Features.prototype.getModel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setModel = function(value) {\n  return jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearModel = function() {\n  return jspb.Message.setField(this, 21, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasModel = function() {\n  return jspb.Message.getField(this, 21) != null;\n};\n\n\n/**\n * optional string firmware_variant = 22;\n * @return {string}\n */\nproto.Features.prototype.getFirmwareVariant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setFirmwareVariant = function(value) {\n  return jspb.Message.setField(this, 22, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearFirmwareVariant = function() {\n  return jspb.Message.setField(this, 22, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasFirmwareVariant = function() {\n  return jspb.Message.getField(this, 22) != null;\n};\n\n\n/**\n * optional bytes firmware_hash = 23;\n * @return {!(string|Uint8Array)}\n */\nproto.Features.prototype.getFirmwareHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 23, \"\"));\n};\n\n\n/**\n * optional bytes firmware_hash = 23;\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {string}\n */\nproto.Features.prototype.getFirmwareHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirmwareHash()));\n};\n\n\n/**\n * optional bytes firmware_hash = 23;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {!Uint8Array}\n */\nproto.Features.prototype.getFirmwareHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirmwareHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setFirmwareHash = function(value) {\n  return jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearFirmwareHash = function() {\n  return jspb.Message.setField(this, 23, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasFirmwareHash = function() {\n  return jspb.Message.getField(this, 23) != null;\n};\n\n\n/**\n * optional bool no_backup = 24;\n * @return {boolean}\n */\nproto.Features.prototype.getNoBackup = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setNoBackup = function(value) {\n  return jspb.Message.setField(this, 24, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearNoBackup = function() {\n  return jspb.Message.setField(this, 24, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasNoBackup = function() {\n  return jspb.Message.getField(this, 24) != null;\n};\n\n\n/**\n * optional bool wipe_code_protection = 25;\n * @return {boolean}\n */\nproto.Features.prototype.getWipeCodeProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.setWipeCodeProtection = function(value) {\n  return jspb.Message.setField(this, 25, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Features} returns this\n */\nproto.Features.prototype.clearWipeCodeProtection = function() {\n  return jspb.Message.setField(this, 25, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Features.prototype.hasWipeCodeProtection = function() {\n  return jspb.Message.getField(this, 25) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.GetCoinTable.prototype.toObject = function(opt_includeInstance) {\n  return proto.GetCoinTable.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.GetCoinTable} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetCoinTable.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    start: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    end: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetCoinTable}\n */\nproto.GetCoinTable.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetCoinTable;\n  return proto.GetCoinTable.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetCoinTable} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetCoinTable}\n */\nproto.GetCoinTable.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setStart(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setEnd(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.GetCoinTable.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.GetCoinTable.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetCoinTable} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetCoinTable.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 start = 1;\n * @return {number}\n */\nproto.GetCoinTable.prototype.getStart = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.GetCoinTable} returns this\n */\nproto.GetCoinTable.prototype.setStart = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetCoinTable} returns this\n */\nproto.GetCoinTable.prototype.clearStart = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetCoinTable.prototype.hasStart = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 end = 2;\n * @return {number}\n */\nproto.GetCoinTable.prototype.getEnd = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.GetCoinTable} returns this\n */\nproto.GetCoinTable.prototype.setEnd = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetCoinTable} returns this\n */\nproto.GetCoinTable.prototype.clearEnd = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetCoinTable.prototype.hasEnd = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.CoinTable.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CoinTable.prototype.toObject = function(opt_includeInstance) {\n  return proto.CoinTable.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CoinTable} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinTable.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    tableList: jspb.Message.toObjectList(msg.getTableList(),\n    types_pb.CoinType.toObject, includeInstance),\n    numCoins: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    chunkSize: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CoinTable}\n */\nproto.CoinTable.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CoinTable;\n  return proto.CoinTable.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CoinTable} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CoinTable}\n */\nproto.CoinTable.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new types_pb.CoinType;\n      reader.readMessage(value,types_pb.CoinType.deserializeBinaryFromReader);\n      msg.addTable(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumCoins(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChunkSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CoinTable.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CoinTable.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CoinTable} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CoinTable.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTableList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      types_pb.CoinType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated CoinType table = 1;\n * @return {!Array<!proto.CoinType>}\n */\nproto.CoinTable.prototype.getTableList = function() {\n  return /** @type{!Array<!proto.CoinType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, types_pb.CoinType, 1));\n};\n\n\n/**\n * @param {!Array<!proto.CoinType>} value\n * @return {!proto.CoinTable} returns this\n*/\nproto.CoinTable.prototype.setTableList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.CoinType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.CoinType}\n */\nproto.CoinTable.prototype.addTable = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoinType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CoinTable} returns this\n */\nproto.CoinTable.prototype.clearTableList = function() {\n  return this.setTableList([]);\n};\n\n\n/**\n * optional uint32 num_coins = 2;\n * @return {number}\n */\nproto.CoinTable.prototype.getNumCoins = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinTable} returns this\n */\nproto.CoinTable.prototype.setNumCoins = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinTable} returns this\n */\nproto.CoinTable.prototype.clearNumCoins = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinTable.prototype.hasNumCoins = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 chunk_size = 3;\n * @return {number}\n */\nproto.CoinTable.prototype.getChunkSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CoinTable} returns this\n */\nproto.CoinTable.prototype.setChunkSize = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CoinTable} returns this\n */\nproto.CoinTable.prototype.clearChunkSize = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CoinTable.prototype.hasChunkSize = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ClearSession.prototype.toObject = function(opt_includeInstance) {\n  return proto.ClearSession.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ClearSession} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClearSession.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClearSession}\n */\nproto.ClearSession.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClearSession;\n  return proto.ClearSession.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClearSession} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClearSession}\n */\nproto.ClearSession.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ClearSession.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ClearSession.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClearSession} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClearSession.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ApplySettings.prototype.toObject = function(opt_includeInstance) {\n  return proto.ApplySettings.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ApplySettings} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ApplySettings.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    language: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    label: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    usePassphrase: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    autoLockDelayMs: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    u2fCounter: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ApplySettings}\n */\nproto.ApplySettings.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ApplySettings;\n  return proto.ApplySettings.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ApplySettings} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ApplySettings}\n */\nproto.ApplySettings.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLanguage(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUsePassphrase(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAutoLockDelayMs(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setU2fCounter(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ApplySettings.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ApplySettings.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ApplySettings} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ApplySettings.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string language = 1;\n * @return {string}\n */\nproto.ApplySettings.prototype.getLanguage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.setLanguage = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.clearLanguage = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ApplySettings.prototype.hasLanguage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string label = 2;\n * @return {string}\n */\nproto.ApplySettings.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.setLabel = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.clearLabel = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ApplySettings.prototype.hasLabel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool use_passphrase = 3;\n * @return {boolean}\n */\nproto.ApplySettings.prototype.getUsePassphrase = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.setUsePassphrase = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.clearUsePassphrase = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ApplySettings.prototype.hasUsePassphrase = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint32 auto_lock_delay_ms = 4;\n * @return {number}\n */\nproto.ApplySettings.prototype.getAutoLockDelayMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.setAutoLockDelayMs = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.clearAutoLockDelayMs = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ApplySettings.prototype.hasAutoLockDelayMs = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint32 u2f_counter = 5;\n * @return {number}\n */\nproto.ApplySettings.prototype.getU2fCounter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.setU2fCounter = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ApplySettings} returns this\n */\nproto.ApplySettings.prototype.clearU2fCounter = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ApplySettings.prototype.hasU2fCounter = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ChangePin.prototype.toObject = function(opt_includeInstance) {\n  return proto.ChangePin.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ChangePin} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ChangePin.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    remove: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ChangePin}\n */\nproto.ChangePin.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ChangePin;\n  return proto.ChangePin.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ChangePin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ChangePin}\n */\nproto.ChangePin.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRemove(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ChangePin.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ChangePin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ChangePin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ChangePin.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool remove = 1;\n * @return {boolean}\n */\nproto.ChangePin.prototype.getRemove = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ChangePin} returns this\n */\nproto.ChangePin.prototype.setRemove = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ChangePin} returns this\n */\nproto.ChangePin.prototype.clearRemove = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ChangePin.prototype.hasRemove = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Ping.prototype.toObject = function(opt_includeInstance) {\n  return proto.Ping.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Ping} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Ping.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    buttonProtection: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,\n    pinProtection: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    passphraseProtection: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n    wipeCodeProtection: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Ping}\n */\nproto.Ping.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Ping;\n  return proto.Ping.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Ping} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Ping}\n */\nproto.Ping.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setButtonProtection(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPinProtection(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseProtection(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setWipeCodeProtection(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Ping.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Ping.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Ping} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Ping.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.Ping.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Ping.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool button_protection = 2;\n * @return {boolean}\n */\nproto.Ping.prototype.getButtonProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.setButtonProtection = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.clearButtonProtection = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Ping.prototype.hasButtonProtection = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool pin_protection = 3;\n * @return {boolean}\n */\nproto.Ping.prototype.getPinProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.setPinProtection = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.clearPinProtection = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Ping.prototype.hasPinProtection = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool passphrase_protection = 4;\n * @return {boolean}\n */\nproto.Ping.prototype.getPassphraseProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.setPassphraseProtection = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.clearPassphraseProtection = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Ping.prototype.hasPassphraseProtection = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bool wipe_code_protection = 5;\n * @return {boolean}\n */\nproto.Ping.prototype.getWipeCodeProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.setWipeCodeProtection = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Ping} returns this\n */\nproto.Ping.prototype.clearWipeCodeProtection = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Ping.prototype.hasWipeCodeProtection = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Success.prototype.toObject = function(opt_includeInstance) {\n  return proto.Success.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Success} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Success.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Success}\n */\nproto.Success.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Success;\n  return proto.Success.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Success} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Success}\n */\nproto.Success.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Success.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Success.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Success} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Success.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.Success.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Success} returns this\n */\nproto.Success.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Success} returns this\n */\nproto.Success.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Success.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Failure.prototype.toObject = function(opt_includeInstance) {\n  return proto.Failure.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Failure} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Failure.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Failure}\n */\nproto.Failure.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Failure;\n  return proto.Failure.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Failure} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Failure}\n */\nproto.Failure.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.FailureType} */ (reader.readEnum());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Failure.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Failure.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Failure} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Failure.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.FailureType} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional FailureType code = 1;\n * @return {!proto.FailureType}\n */\nproto.Failure.prototype.getCode = function() {\n  return /** @type {!proto.FailureType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/**\n * @param {!proto.FailureType} value\n * @return {!proto.Failure} returns this\n */\nproto.Failure.prototype.setCode = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Failure} returns this\n */\nproto.Failure.prototype.clearCode = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Failure.prototype.hasCode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.Failure.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Failure} returns this\n */\nproto.Failure.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Failure} returns this\n */\nproto.Failure.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Failure.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ButtonRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ButtonRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ButtonRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ButtonRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    data: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ButtonRequest}\n */\nproto.ButtonRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ButtonRequest;\n  return proto.ButtonRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ButtonRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ButtonRequest}\n */\nproto.ButtonRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.ButtonRequestType} */ (reader.readEnum());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ButtonRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ButtonRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ButtonRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ButtonRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.ButtonRequestType} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ButtonRequestType code = 1;\n * @return {!proto.ButtonRequestType}\n */\nproto.ButtonRequest.prototype.getCode = function() {\n  return /** @type {!proto.ButtonRequestType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/**\n * @param {!proto.ButtonRequestType} value\n * @return {!proto.ButtonRequest} returns this\n */\nproto.ButtonRequest.prototype.setCode = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ButtonRequest} returns this\n */\nproto.ButtonRequest.prototype.clearCode = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ButtonRequest.prototype.hasCode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string data = 2;\n * @return {string}\n */\nproto.ButtonRequest.prototype.getData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ButtonRequest} returns this\n */\nproto.ButtonRequest.prototype.setData = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ButtonRequest} returns this\n */\nproto.ButtonRequest.prototype.clearData = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ButtonRequest.prototype.hasData = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ButtonAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.ButtonAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ButtonAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ButtonAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ButtonAck}\n */\nproto.ButtonAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ButtonAck;\n  return proto.ButtonAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ButtonAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ButtonAck}\n */\nproto.ButtonAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ButtonAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ButtonAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ButtonAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ButtonAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PinMatrixRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.PinMatrixRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PinMatrixRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PinMatrixRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PinMatrixRequest}\n */\nproto.PinMatrixRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PinMatrixRequest;\n  return proto.PinMatrixRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PinMatrixRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PinMatrixRequest}\n */\nproto.PinMatrixRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.PinMatrixRequestType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PinMatrixRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PinMatrixRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PinMatrixRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PinMatrixRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.PinMatrixRequestType} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PinMatrixRequestType type = 1;\n * @return {!proto.PinMatrixRequestType}\n */\nproto.PinMatrixRequest.prototype.getType = function() {\n  return /** @type {!proto.PinMatrixRequestType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));\n};\n\n\n/**\n * @param {!proto.PinMatrixRequestType} value\n * @return {!proto.PinMatrixRequest} returns this\n */\nproto.PinMatrixRequest.prototype.setType = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PinMatrixRequest} returns this\n */\nproto.PinMatrixRequest.prototype.clearType = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PinMatrixRequest.prototype.hasType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PinMatrixAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.PinMatrixAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PinMatrixAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PinMatrixAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pin: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PinMatrixAck}\n */\nproto.PinMatrixAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PinMatrixAck;\n  return proto.PinMatrixAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PinMatrixAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PinMatrixAck}\n */\nproto.PinMatrixAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPin(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PinMatrixAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PinMatrixAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PinMatrixAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PinMatrixAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string pin = 1;\n * @return {string}\n */\nproto.PinMatrixAck.prototype.getPin = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PinMatrixAck} returns this\n */\nproto.PinMatrixAck.prototype.setPin = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PinMatrixAck} returns this\n */\nproto.PinMatrixAck.prototype.clearPin = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PinMatrixAck.prototype.hasPin = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Cancel.prototype.toObject = function(opt_includeInstance) {\n  return proto.Cancel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Cancel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cancel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cancel}\n */\nproto.Cancel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cancel;\n  return proto.Cancel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cancel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cancel}\n */\nproto.Cancel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Cancel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Cancel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cancel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cancel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PassphraseRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.PassphraseRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PassphraseRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PassphraseRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PassphraseRequest}\n */\nproto.PassphraseRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PassphraseRequest;\n  return proto.PassphraseRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PassphraseRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PassphraseRequest}\n */\nproto.PassphraseRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PassphraseRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PassphraseRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PassphraseRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PassphraseRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PassphraseAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.PassphraseAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PassphraseAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PassphraseAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    passphrase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PassphraseAck}\n */\nproto.PassphraseAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PassphraseAck;\n  return proto.PassphraseAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PassphraseAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PassphraseAck}\n */\nproto.PassphraseAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassphrase(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PassphraseAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PassphraseAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PassphraseAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PassphraseAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string passphrase = 1;\n * @return {string}\n */\nproto.PassphraseAck.prototype.getPassphrase = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PassphraseAck} returns this\n */\nproto.PassphraseAck.prototype.setPassphrase = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PassphraseAck} returns this\n */\nproto.PassphraseAck.prototype.clearPassphrase = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PassphraseAck.prototype.hasPassphrase = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.GetEntropy.prototype.toObject = function(opt_includeInstance) {\n  return proto.GetEntropy.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.GetEntropy} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetEntropy.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    size: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetEntropy}\n */\nproto.GetEntropy.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetEntropy;\n  return proto.GetEntropy.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetEntropy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetEntropy}\n */\nproto.GetEntropy.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.GetEntropy.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.GetEntropy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetEntropy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetEntropy.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required uint32 size = 1;\n * @return {number}\n */\nproto.GetEntropy.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.GetEntropy} returns this\n */\nproto.GetEntropy.prototype.setSize = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetEntropy} returns this\n */\nproto.GetEntropy.prototype.clearSize = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetEntropy.prototype.hasSize = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Entropy.prototype.toObject = function(opt_includeInstance) {\n  return proto.Entropy.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Entropy} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Entropy.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entropy: msg.getEntropy_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Entropy}\n */\nproto.Entropy.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Entropy;\n  return proto.Entropy.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Entropy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Entropy}\n */\nproto.Entropy.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setEntropy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Entropy.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Entropy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Entropy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Entropy.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required bytes entropy = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.Entropy.prototype.getEntropy = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * required bytes entropy = 1;\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {string}\n */\nproto.Entropy.prototype.getEntropy_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getEntropy()));\n};\n\n\n/**\n * required bytes entropy = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {!Uint8Array}\n */\nproto.Entropy.prototype.getEntropy_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getEntropy()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Entropy} returns this\n */\nproto.Entropy.prototype.setEntropy = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Entropy} returns this\n */\nproto.Entropy.prototype.clearEntropy = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Entropy.prototype.hasEntropy = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.GetPublicKey.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.GetPublicKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.GetPublicKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.GetPublicKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetPublicKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    ecdsaCurveName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    showDisplay: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    coinName: jspb.Message.getFieldWithDefault(msg, 4, \"Bitcoin\"),\n    scriptType: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetPublicKey}\n */\nproto.GetPublicKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetPublicKey;\n  return proto.GetPublicKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetPublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetPublicKey}\n */\nproto.GetPublicKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEcdsaCurveName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowDisplay(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    case 5:\n      var value = /** @type {!proto.InputScriptType} */ (reader.readEnum());\n      msg.setScriptType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.GetPublicKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.GetPublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetPublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetPublicKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {!proto.InputScriptType} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.GetPublicKey.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional string ecdsa_curve_name = 2;\n * @return {string}\n */\nproto.GetPublicKey.prototype.getEcdsaCurveName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.setEcdsaCurveName = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.clearEcdsaCurveName = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetPublicKey.prototype.hasEcdsaCurveName = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool show_display = 3;\n * @return {boolean}\n */\nproto.GetPublicKey.prototype.getShowDisplay = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.setShowDisplay = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.clearShowDisplay = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetPublicKey.prototype.hasShowDisplay = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string coin_name = 4;\n * @return {string}\n */\nproto.GetPublicKey.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetPublicKey.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional InputScriptType script_type = 5;\n * @return {!proto.InputScriptType}\n */\nproto.GetPublicKey.prototype.getScriptType = function() {\n  return /** @type {!proto.InputScriptType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.setScriptType = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetPublicKey} returns this\n */\nproto.GetPublicKey.prototype.clearScriptType = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetPublicKey.prototype.hasScriptType = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PublicKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.PublicKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PublicKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PublicKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    node: (f = msg.getNode()) && types_pb.HDNodeType.toObject(includeInstance, f),\n    xpub: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PublicKey}\n */\nproto.PublicKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PublicKey;\n  return proto.PublicKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PublicKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PublicKey}\n */\nproto.PublicKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new types_pb.HDNodeType;\n      reader.readMessage(value,types_pb.HDNodeType.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setXpub(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PublicKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PublicKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PublicKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PublicKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      types_pb.HDNodeType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required HDNodeType node = 1;\n * @return {!proto.HDNodeType}\n */\nproto.PublicKey.prototype.getNode = function() {\n  return /** @type{!proto.HDNodeType} */ (\n    jspb.Message.getWrapperField(this, types_pb.HDNodeType, 1, 1));\n};\n\n\n/**\n * @param {!proto.HDNodeType} value\n * @return {!proto.PublicKey} returns this\n*/\nproto.PublicKey.prototype.setNode = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PublicKey} returns this\n */\nproto.PublicKey.prototype.clearNode = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PublicKey.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string xpub = 2;\n * @return {string}\n */\nproto.PublicKey.prototype.getXpub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PublicKey} returns this\n */\nproto.PublicKey.prototype.setXpub = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.PublicKey} returns this\n */\nproto.PublicKey.prototype.clearXpub = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.PublicKey.prototype.hasXpub = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.GetAddress.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.GetAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.GetAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.GetAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    coinName: jspb.Message.getFieldWithDefault(msg, 2, \"Bitcoin\"),\n    showDisplay: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    multisig: (f = msg.getMultisig()) && types_pb.MultisigRedeemScriptType.toObject(includeInstance, f),\n    scriptType: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.GetAddress}\n */\nproto.GetAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.GetAddress;\n  return proto.GetAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.GetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.GetAddress}\n */\nproto.GetAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowDisplay(value);\n      break;\n    case 4:\n      var value = new types_pb.MultisigRedeemScriptType;\n      reader.readMessage(value,types_pb.MultisigRedeemScriptType.deserializeBinaryFromReader);\n      msg.setMultisig(value);\n      break;\n    case 5:\n      var value = /** @type {!proto.InputScriptType} */ (reader.readEnum());\n      msg.setScriptType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.GetAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.GetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.GetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.GetAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getMultisig();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      types_pb.MultisigRedeemScriptType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!proto.InputScriptType} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.GetAddress.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional string coin_name = 2;\n * @return {string}\n */\nproto.GetAddress.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetAddress.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool show_display = 3;\n * @return {boolean}\n */\nproto.GetAddress.prototype.getShowDisplay = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.setShowDisplay = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.clearShowDisplay = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetAddress.prototype.hasShowDisplay = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional MultisigRedeemScriptType multisig = 4;\n * @return {?proto.MultisigRedeemScriptType}\n */\nproto.GetAddress.prototype.getMultisig = function() {\n  return /** @type{?proto.MultisigRedeemScriptType} */ (\n    jspb.Message.getWrapperField(this, types_pb.MultisigRedeemScriptType, 4));\n};\n\n\n/**\n * @param {?proto.MultisigRedeemScriptType|undefined} value\n * @return {!proto.GetAddress} returns this\n*/\nproto.GetAddress.prototype.setMultisig = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.clearMultisig = function() {\n  return this.setMultisig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetAddress.prototype.hasMultisig = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional InputScriptType script_type = 5;\n * @return {!proto.InputScriptType}\n */\nproto.GetAddress.prototype.getScriptType = function() {\n  return /** @type {!proto.InputScriptType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.setScriptType = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.GetAddress} returns this\n */\nproto.GetAddress.prototype.clearScriptType = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.GetAddress.prototype.hasScriptType = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.EthereumGetAddress.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumGetAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumGetAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumGetAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumGetAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    showDisplay: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumGetAddress}\n */\nproto.EthereumGetAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumGetAddress;\n  return proto.EthereumGetAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumGetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumGetAddress}\n */\nproto.EthereumGetAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShowDisplay(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumGetAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumGetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumGetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumGetAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.EthereumGetAddress.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumGetAddress} returns this\n */\nproto.EthereumGetAddress.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumGetAddress} returns this\n */\nproto.EthereumGetAddress.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumGetAddress} returns this\n */\nproto.EthereumGetAddress.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional bool show_display = 2;\n * @return {boolean}\n */\nproto.EthereumGetAddress.prototype.getShowDisplay = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.EthereumGetAddress} returns this\n */\nproto.EthereumGetAddress.prototype.setShowDisplay = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumGetAddress} returns this\n */\nproto.EthereumGetAddress.prototype.clearShowDisplay = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumGetAddress.prototype.hasShowDisplay = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Address.prototype.toObject = function(opt_includeInstance) {\n  return proto.Address.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Address} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Address.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Address}\n */\nproto.Address.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Address;\n  return proto.Address.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Address} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Address}\n */\nproto.Address.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Address.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Address.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Address} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Address.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string address = 1;\n * @return {string}\n */\nproto.Address.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Address} returns this\n */\nproto.Address.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.Address} returns this\n */\nproto.Address.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Address.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    addressStr: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumAddress}\n */\nproto.EthereumAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumAddress;\n  return proto.EthereumAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumAddress}\n */\nproto.EthereumAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddressStr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumAddress.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * required bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.EthereumAddress.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * required bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.EthereumAddress.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumAddress} returns this\n */\nproto.EthereumAddress.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumAddress} returns this\n */\nproto.EthereumAddress.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumAddress.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string address_str = 2;\n * @return {string}\n */\nproto.EthereumAddress.prototype.getAddressStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.EthereumAddress} returns this\n */\nproto.EthereumAddress.prototype.setAddressStr = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumAddress} returns this\n */\nproto.EthereumAddress.prototype.clearAddressStr = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumAddress.prototype.hasAddressStr = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.WipeDevice.prototype.toObject = function(opt_includeInstance) {\n  return proto.WipeDevice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.WipeDevice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.WipeDevice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.WipeDevice}\n */\nproto.WipeDevice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.WipeDevice;\n  return proto.WipeDevice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.WipeDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.WipeDevice}\n */\nproto.WipeDevice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.WipeDevice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.WipeDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.WipeDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.WipeDevice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.LoadDevice.prototype.toObject = function(opt_includeInstance) {\n  return proto.LoadDevice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.LoadDevice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoadDevice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mnemonic: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    node: (f = msg.getNode()) && types_pb.HDNodeType.toObject(includeInstance, f),\n    pin: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    passphraseProtection: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n    language: jspb.Message.getFieldWithDefault(msg, 5, \"english\"),\n    label: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    skipChecksum: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n    u2fCounter: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoadDevice}\n */\nproto.LoadDevice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoadDevice;\n  return proto.LoadDevice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoadDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoadDevice}\n */\nproto.LoadDevice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMnemonic(value);\n      break;\n    case 2:\n      var value = new types_pb.HDNodeType;\n      reader.readMessage(value,types_pb.HDNodeType.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPin(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseProtection(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLanguage(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSkipChecksum(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setU2fCounter(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.LoadDevice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.LoadDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoadDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoadDevice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      types_pb.HDNodeType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string mnemonic = 1;\n * @return {string}\n */\nproto.LoadDevice.prototype.getMnemonic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setMnemonic = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearMnemonic = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasMnemonic = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional HDNodeType node = 2;\n * @return {?proto.HDNodeType}\n */\nproto.LoadDevice.prototype.getNode = function() {\n  return /** @type{?proto.HDNodeType} */ (\n    jspb.Message.getWrapperField(this, types_pb.HDNodeType, 2));\n};\n\n\n/**\n * @param {?proto.HDNodeType|undefined} value\n * @return {!proto.LoadDevice} returns this\n*/\nproto.LoadDevice.prototype.setNode = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearNode = function() {\n  return this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string pin = 3;\n * @return {string}\n */\nproto.LoadDevice.prototype.getPin = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setPin = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearPin = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasPin = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool passphrase_protection = 4;\n * @return {boolean}\n */\nproto.LoadDevice.prototype.getPassphraseProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setPassphraseProtection = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearPassphraseProtection = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasPassphraseProtection = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string language = 5;\n * @return {string}\n */\nproto.LoadDevice.prototype.getLanguage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"english\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setLanguage = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearLanguage = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasLanguage = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string label = 6;\n * @return {string}\n */\nproto.LoadDevice.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setLabel = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearLabel = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasLabel = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bool skip_checksum = 7;\n * @return {boolean}\n */\nproto.LoadDevice.prototype.getSkipChecksum = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setSkipChecksum = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearSkipChecksum = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasSkipChecksum = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint32 u2f_counter = 8;\n * @return {number}\n */\nproto.LoadDevice.prototype.getU2fCounter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.setU2fCounter = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.LoadDevice} returns this\n */\nproto.LoadDevice.prototype.clearU2fCounter = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.LoadDevice.prototype.hasU2fCounter = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ResetDevice.prototype.toObject = function(opt_includeInstance) {\n  return proto.ResetDevice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ResetDevice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ResetDevice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    displayRandom: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,\n    strength: jspb.Message.getFieldWithDefault(msg, 2, 256),\n    passphraseProtection: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    pinProtection: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n    language: jspb.Message.getFieldWithDefault(msg, 5, \"english\"),\n    label: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    noBackup: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n    autoLockDelayMs: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    u2fCounter: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ResetDevice}\n */\nproto.ResetDevice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ResetDevice;\n  return proto.ResetDevice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ResetDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ResetDevice}\n */\nproto.ResetDevice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDisplayRandom(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setStrength(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseProtection(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPinProtection(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLanguage(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoBackup(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAutoLockDelayMs(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setU2fCounter(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ResetDevice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ResetDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ResetDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ResetDevice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool display_random = 1;\n * @return {boolean}\n */\nproto.ResetDevice.prototype.getDisplayRandom = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setDisplayRandom = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearDisplayRandom = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasDisplayRandom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 strength = 2;\n * @return {number}\n */\nproto.ResetDevice.prototype.getStrength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 256));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setStrength = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearStrength = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasStrength = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool passphrase_protection = 3;\n * @return {boolean}\n */\nproto.ResetDevice.prototype.getPassphraseProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setPassphraseProtection = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearPassphraseProtection = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasPassphraseProtection = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool pin_protection = 4;\n * @return {boolean}\n */\nproto.ResetDevice.prototype.getPinProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setPinProtection = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearPinProtection = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasPinProtection = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string language = 5;\n * @return {string}\n */\nproto.ResetDevice.prototype.getLanguage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"english\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setLanguage = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearLanguage = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasLanguage = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string label = 6;\n * @return {string}\n */\nproto.ResetDevice.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setLabel = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearLabel = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasLabel = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bool no_backup = 7;\n * @return {boolean}\n */\nproto.ResetDevice.prototype.getNoBackup = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setNoBackup = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearNoBackup = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasNoBackup = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint32 auto_lock_delay_ms = 8;\n * @return {number}\n */\nproto.ResetDevice.prototype.getAutoLockDelayMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setAutoLockDelayMs = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearAutoLockDelayMs = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasAutoLockDelayMs = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 u2f_counter = 9;\n * @return {number}\n */\nproto.ResetDevice.prototype.getU2fCounter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.setU2fCounter = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ResetDevice} returns this\n */\nproto.ResetDevice.prototype.clearU2fCounter = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ResetDevice.prototype.hasU2fCounter = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EntropyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.EntropyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EntropyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EntropyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EntropyRequest}\n */\nproto.EntropyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EntropyRequest;\n  return proto.EntropyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EntropyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EntropyRequest}\n */\nproto.EntropyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EntropyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EntropyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EntropyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EntropyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EntropyAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.EntropyAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EntropyAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EntropyAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entropy: msg.getEntropy_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EntropyAck}\n */\nproto.EntropyAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EntropyAck;\n  return proto.EntropyAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EntropyAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EntropyAck}\n */\nproto.EntropyAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setEntropy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EntropyAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EntropyAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EntropyAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EntropyAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes entropy = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EntropyAck.prototype.getEntropy = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes entropy = 1;\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {string}\n */\nproto.EntropyAck.prototype.getEntropy_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getEntropy()));\n};\n\n\n/**\n * optional bytes entropy = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getEntropy()`\n * @return {!Uint8Array}\n */\nproto.EntropyAck.prototype.getEntropy_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getEntropy()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EntropyAck} returns this\n */\nproto.EntropyAck.prototype.setEntropy = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EntropyAck} returns this\n */\nproto.EntropyAck.prototype.clearEntropy = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EntropyAck.prototype.hasEntropy = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RecoveryDevice.prototype.toObject = function(opt_includeInstance) {\n  return proto.RecoveryDevice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RecoveryDevice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.RecoveryDevice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    wordCount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    passphraseProtection: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,\n    pinProtection: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    language: jspb.Message.getFieldWithDefault(msg, 4, \"english\"),\n    label: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,\n    enforceWordlist: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,\n    useCharacterCipher: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n    autoLockDelayMs: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    u2fCounter: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    dryRun: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RecoveryDevice}\n */\nproto.RecoveryDevice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RecoveryDevice;\n  return proto.RecoveryDevice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RecoveryDevice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RecoveryDevice}\n */\nproto.RecoveryDevice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setWordCount(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseProtection(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPinProtection(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLanguage(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnforceWordlist(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUseCharacterCipher(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAutoLockDelayMs(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setU2fCounter(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDryRun(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RecoveryDevice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RecoveryDevice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RecoveryDevice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.RecoveryDevice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 word_count = 1;\n * @return {number}\n */\nproto.RecoveryDevice.prototype.getWordCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setWordCount = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearWordCount = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasWordCount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool passphrase_protection = 2;\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.getPassphraseProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setPassphraseProtection = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearPassphraseProtection = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasPassphraseProtection = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool pin_protection = 3;\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.getPinProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setPinProtection = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearPinProtection = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasPinProtection = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string language = 4;\n * @return {string}\n */\nproto.RecoveryDevice.prototype.getLanguage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"english\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setLanguage = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearLanguage = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasLanguage = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string label = 5;\n * @return {string}\n */\nproto.RecoveryDevice.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setLabel = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearLabel = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasLabel = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bool enforce_wordlist = 6;\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.getEnforceWordlist = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setEnforceWordlist = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearEnforceWordlist = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasEnforceWordlist = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bool use_character_cipher = 7;\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.getUseCharacterCipher = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setUseCharacterCipher = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearUseCharacterCipher = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasUseCharacterCipher = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint32 auto_lock_delay_ms = 8;\n * @return {number}\n */\nproto.RecoveryDevice.prototype.getAutoLockDelayMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setAutoLockDelayMs = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearAutoLockDelayMs = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasAutoLockDelayMs = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 u2f_counter = 9;\n * @return {number}\n */\nproto.RecoveryDevice.prototype.getU2fCounter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setU2fCounter = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearU2fCounter = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasU2fCounter = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional bool dry_run = 10;\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.getDryRun = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.setDryRun = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.RecoveryDevice} returns this\n */\nproto.RecoveryDevice.prototype.clearDryRun = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RecoveryDevice.prototype.hasDryRun = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.WordRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.WordRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.WordRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.WordRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.WordRequest}\n */\nproto.WordRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.WordRequest;\n  return proto.WordRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.WordRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.WordRequest}\n */\nproto.WordRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.WordRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.WordRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.WordRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.WordRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.WordAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.WordAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.WordAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.WordAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    word: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.WordAck}\n */\nproto.WordAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.WordAck;\n  return proto.WordAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.WordAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.WordAck}\n */\nproto.WordAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWord(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.WordAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.WordAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.WordAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.WordAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required string word = 1;\n * @return {string}\n */\nproto.WordAck.prototype.getWord = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.WordAck} returns this\n */\nproto.WordAck.prototype.setWord = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.WordAck} returns this\n */\nproto.WordAck.prototype.clearWord = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.WordAck.prototype.hasWord = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CharacterRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.CharacterRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CharacterRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CharacterRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    wordPos: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    characterPos: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CharacterRequest}\n */\nproto.CharacterRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CharacterRequest;\n  return proto.CharacterRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CharacterRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CharacterRequest}\n */\nproto.CharacterRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setWordPos(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCharacterPos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CharacterRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CharacterRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CharacterRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CharacterRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required uint32 word_pos = 1;\n * @return {number}\n */\nproto.CharacterRequest.prototype.getWordPos = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CharacterRequest} returns this\n */\nproto.CharacterRequest.prototype.setWordPos = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterRequest} returns this\n */\nproto.CharacterRequest.prototype.clearWordPos = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CharacterRequest.prototype.hasWordPos = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required uint32 character_pos = 2;\n * @return {number}\n */\nproto.CharacterRequest.prototype.getCharacterPos = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.CharacterRequest} returns this\n */\nproto.CharacterRequest.prototype.setCharacterPos = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterRequest} returns this\n */\nproto.CharacterRequest.prototype.clearCharacterPos = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CharacterRequest.prototype.hasCharacterPos = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CharacterAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.CharacterAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CharacterAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CharacterAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    character: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    pb_delete: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,\n    done: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CharacterAck}\n */\nproto.CharacterAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CharacterAck;\n  return proto.CharacterAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CharacterAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CharacterAck}\n */\nproto.CharacterAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCharacter(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDelete(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDone(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CharacterAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CharacterAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CharacterAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CharacterAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string character = 1;\n * @return {string}\n */\nproto.CharacterAck.prototype.getCharacter = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CharacterAck} returns this\n */\nproto.CharacterAck.prototype.setCharacter = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterAck} returns this\n */\nproto.CharacterAck.prototype.clearCharacter = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CharacterAck.prototype.hasCharacter = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool delete = 2;\n * @return {boolean}\n */\nproto.CharacterAck.prototype.getDelete = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CharacterAck} returns this\n */\nproto.CharacterAck.prototype.setDelete = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterAck} returns this\n */\nproto.CharacterAck.prototype.clearDelete = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CharacterAck.prototype.hasDelete = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool done = 3;\n * @return {boolean}\n */\nproto.CharacterAck.prototype.getDone = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CharacterAck} returns this\n */\nproto.CharacterAck.prototype.setDone = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CharacterAck} returns this\n */\nproto.CharacterAck.prototype.clearDone = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CharacterAck.prototype.hasDone = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.SignMessage.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SignMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.SignMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SignMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    message: msg.getMessage_asB64(),\n    coinName: jspb.Message.getFieldWithDefault(msg, 3, \"Bitcoin\"),\n    scriptType: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignMessage}\n */\nproto.SignMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignMessage;\n  return proto.SignMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignMessage}\n */\nproto.SignMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.InputScriptType} */ (reader.readEnum());\n      msg.setScriptType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SignMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SignMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {!proto.InputScriptType} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.SignMessage.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * required bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.SignMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * required bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.SignMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * required bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.SignMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string coin_name = 3;\n * @return {string}\n */\nproto.SignMessage.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignMessage.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional InputScriptType script_type = 4;\n * @return {!proto.InputScriptType}\n */\nproto.SignMessage.prototype.getScriptType = function() {\n  return /** @type {!proto.InputScriptType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.InputScriptType} value\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.setScriptType = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignMessage} returns this\n */\nproto.SignMessage.prototype.clearScriptType = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignMessage.prototype.hasScriptType = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.VerifyMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.VerifyMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.VerifyMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.VerifyMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    signature: msg.getSignature_asB64(),\n    message: msg.getMessage_asB64(),\n    coinName: jspb.Message.getFieldWithDefault(msg, 4, \"Bitcoin\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.VerifyMessage}\n */\nproto.VerifyMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.VerifyMessage;\n  return proto.VerifyMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.VerifyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.VerifyMessage}\n */\nproto.VerifyMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.VerifyMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.VerifyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.VerifyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.VerifyMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.VerifyMessage.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.VerifyMessage.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.VerifyMessage.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.VerifyMessage.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.VerifyMessage.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.VerifyMessage.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.VerifyMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.VerifyMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.VerifyMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.VerifyMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string coin_name = 4;\n * @return {string}\n */\nproto.VerifyMessage.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.VerifyMessage} returns this\n */\nproto.VerifyMessage.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.VerifyMessage.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.MessageSignature.prototype.toObject = function(opt_includeInstance) {\n  return proto.MessageSignature.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.MessageSignature} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MessageSignature.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.MessageSignature}\n */\nproto.MessageSignature.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.MessageSignature;\n  return proto.MessageSignature.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.MessageSignature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.MessageSignature}\n */\nproto.MessageSignature.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.MessageSignature.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.MessageSignature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.MessageSignature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.MessageSignature.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.MessageSignature.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.MessageSignature} returns this\n */\nproto.MessageSignature.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.MessageSignature} returns this\n */\nproto.MessageSignature.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.MessageSignature.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.MessageSignature.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.MessageSignature.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.MessageSignature.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.MessageSignature} returns this\n */\nproto.MessageSignature.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.MessageSignature} returns this\n */\nproto.MessageSignature.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.MessageSignature.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.EncryptMessage.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EncryptMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.EncryptMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EncryptMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EncryptMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: msg.getPubkey_asB64(),\n    message: msg.getMessage_asB64(),\n    displayOnly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n    coinName: jspb.Message.getFieldWithDefault(msg, 5, \"Bitcoin\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EncryptMessage}\n */\nproto.EncryptMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EncryptMessage;\n  return proto.EncryptMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EncryptMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EncryptMessage}\n */\nproto.EncryptMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDisplayOnly(value);\n      break;\n    case 4:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EncryptMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EncryptMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EncryptMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EncryptMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pubkey = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EncryptMessage.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pubkey = 1;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nproto.EncryptMessage.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubkey = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nproto.EncryptMessage.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.setPubkey = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.clearPubkey = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptMessage.prototype.hasPubkey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.EncryptMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.EncryptMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.EncryptMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool display_only = 3;\n * @return {boolean}\n */\nproto.EncryptMessage.prototype.getDisplayOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.setDisplayOnly = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.clearDisplayOnly = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptMessage.prototype.hasDisplayOnly = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated uint32 address_n = 4;\n * @return {!Array<number>}\n */\nproto.EncryptMessage.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional string coin_name = 5;\n * @return {string}\n */\nproto.EncryptMessage.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptMessage} returns this\n */\nproto.EncryptMessage.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptMessage.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EncryptedMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.EncryptedMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EncryptedMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EncryptedMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: msg.getNonce_asB64(),\n    message: msg.getMessage_asB64(),\n    hmac: msg.getHmac_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EncryptedMessage}\n */\nproto.EncryptedMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EncryptedMessage;\n  return proto.EncryptedMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EncryptedMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EncryptedMessage}\n */\nproto.EncryptedMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHmac(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EncryptedMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EncryptedMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EncryptedMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EncryptedMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes nonce = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EncryptedMessage.prototype.getNonce = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes nonce = 1;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\nproto.EncryptedMessage.prototype.getNonce_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNonce()));\n};\n\n\n/**\n * optional bytes nonce = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\nproto.EncryptedMessage.prototype.getNonce_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNonce()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptedMessage} returns this\n */\nproto.EncryptedMessage.prototype.setNonce = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptedMessage} returns this\n */\nproto.EncryptedMessage.prototype.clearNonce = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptedMessage.prototype.hasNonce = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.EncryptedMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.EncryptedMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.EncryptedMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptedMessage} returns this\n */\nproto.EncryptedMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptedMessage} returns this\n */\nproto.EncryptedMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptedMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes hmac = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.EncryptedMessage.prototype.getHmac = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes hmac = 3;\n * This is a type-conversion wrapper around `getHmac()`\n * @return {string}\n */\nproto.EncryptedMessage.prototype.getHmac_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHmac()));\n};\n\n\n/**\n * optional bytes hmac = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHmac()`\n * @return {!Uint8Array}\n */\nproto.EncryptedMessage.prototype.getHmac_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHmac()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EncryptedMessage} returns this\n */\nproto.EncryptedMessage.prototype.setHmac = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EncryptedMessage} returns this\n */\nproto.EncryptedMessage.prototype.clearHmac = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EncryptedMessage.prototype.hasHmac = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.DecryptMessage.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DecryptMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.DecryptMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DecryptMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DecryptMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    nonce: msg.getNonce_asB64(),\n    message: msg.getMessage_asB64(),\n    hmac: msg.getHmac_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DecryptMessage}\n */\nproto.DecryptMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DecryptMessage;\n  return proto.DecryptMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DecryptMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DecryptMessage}\n */\nproto.DecryptMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNonce(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHmac(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DecryptMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DecryptMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DecryptMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DecryptMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.DecryptMessage.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional bytes nonce = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.DecryptMessage.prototype.getNonce = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes nonce = 2;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\nproto.DecryptMessage.prototype.getNonce_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNonce()));\n};\n\n\n/**\n * optional bytes nonce = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\nproto.DecryptMessage.prototype.getNonce_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNonce()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.setNonce = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.clearNonce = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DecryptMessage.prototype.hasNonce = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.DecryptMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.DecryptMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.DecryptMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DecryptMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes hmac = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.DecryptMessage.prototype.getHmac = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes hmac = 4;\n * This is a type-conversion wrapper around `getHmac()`\n * @return {string}\n */\nproto.DecryptMessage.prototype.getHmac_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHmac()));\n};\n\n\n/**\n * optional bytes hmac = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHmac()`\n * @return {!Uint8Array}\n */\nproto.DecryptMessage.prototype.getHmac_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHmac()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.setHmac = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptMessage} returns this\n */\nproto.DecryptMessage.prototype.clearHmac = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DecryptMessage.prototype.hasHmac = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DecryptedMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.DecryptedMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DecryptedMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DecryptedMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: msg.getMessage_asB64(),\n    address: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DecryptedMessage}\n */\nproto.DecryptedMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DecryptedMessage;\n  return proto.DecryptedMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DecryptedMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DecryptedMessage}\n */\nproto.DecryptedMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DecryptedMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DecryptedMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DecryptedMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DecryptedMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes message = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.DecryptedMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes message = 1;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.DecryptedMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.DecryptedMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DecryptedMessage} returns this\n */\nproto.DecryptedMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptedMessage} returns this\n */\nproto.DecryptedMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DecryptedMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.DecryptedMessage.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DecryptedMessage} returns this\n */\nproto.DecryptedMessage.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DecryptedMessage} returns this\n */\nproto.DecryptedMessage.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DecryptedMessage.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.CipherKeyValue.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CipherKeyValue.prototype.toObject = function(opt_includeInstance) {\n  return proto.CipherKeyValue.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CipherKeyValue} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CipherKeyValue.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    key: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    value: msg.getValue_asB64(),\n    encrypt: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,\n    askOnEncrypt: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,\n    askOnDecrypt: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,\n    iv: msg.getIv_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CipherKeyValue}\n */\nproto.CipherKeyValue.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CipherKeyValue;\n  return proto.CipherKeyValue.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CipherKeyValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CipherKeyValue}\n */\nproto.CipherKeyValue.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEncrypt(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAskOnEncrypt(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAskOnDecrypt(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setIv(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CipherKeyValue.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CipherKeyValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CipherKeyValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CipherKeyValue.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.CipherKeyValue.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional string key = 2;\n * @return {string}\n */\nproto.CipherKeyValue.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setKey = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearKey = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.hasKey = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes value = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.CipherKeyValue.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes value = 3;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.CipherKeyValue.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.CipherKeyValue.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setValue = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearValue = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool encrypt = 4;\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.getEncrypt = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setEncrypt = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearEncrypt = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.hasEncrypt = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bool ask_on_encrypt = 5;\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.getAskOnEncrypt = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setAskOnEncrypt = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearAskOnEncrypt = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.hasAskOnEncrypt = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bool ask_on_decrypt = 6;\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.getAskOnDecrypt = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setAskOnDecrypt = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearAskOnDecrypt = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.hasAskOnDecrypt = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bytes iv = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.CipherKeyValue.prototype.getIv = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes iv = 7;\n * This is a type-conversion wrapper around `getIv()`\n * @return {string}\n */\nproto.CipherKeyValue.prototype.getIv_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getIv()));\n};\n\n\n/**\n * optional bytes iv = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getIv()`\n * @return {!Uint8Array}\n */\nproto.CipherKeyValue.prototype.getIv_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getIv()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.setIv = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipherKeyValue} returns this\n */\nproto.CipherKeyValue.prototype.clearIv = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipherKeyValue.prototype.hasIv = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CipheredKeyValue.prototype.toObject = function(opt_includeInstance) {\n  return proto.CipheredKeyValue.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CipheredKeyValue} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CipheredKeyValue.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CipheredKeyValue}\n */\nproto.CipheredKeyValue.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CipheredKeyValue;\n  return proto.CipheredKeyValue.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CipheredKeyValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CipheredKeyValue}\n */\nproto.CipheredKeyValue.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CipheredKeyValue.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CipheredKeyValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CipheredKeyValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CipheredKeyValue.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.CipheredKeyValue.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.CipheredKeyValue.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.CipheredKeyValue.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.CipheredKeyValue} returns this\n */\nproto.CipheredKeyValue.prototype.setValue = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.CipheredKeyValue} returns this\n */\nproto.CipheredKeyValue.prototype.clearValue = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.CipheredKeyValue.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SignTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.SignTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SignTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    outputsCount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    inputsCount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    coinName: jspb.Message.getFieldWithDefault(msg, 3, \"Bitcoin\"),\n    version: jspb.Message.getFieldWithDefault(msg, 4, 1),\n    lockTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    expiry: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,\n    overwintered: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,\n    versionGroupId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    branchId: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignTx}\n */\nproto.SignTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignTx;\n  return proto.SignTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignTx}\n */\nproto.SignTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputsCount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setInputsCount(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCoinName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setVersion(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLockTime(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpiry(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setOverwintered(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setVersionGroupId(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBranchId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SignTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * required uint32 outputs_count = 1;\n * @return {number}\n */\nproto.SignTx.prototype.getOutputsCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setOutputsCount = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearOutputsCount = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasOutputsCount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required uint32 inputs_count = 2;\n * @return {number}\n */\nproto.SignTx.prototype.getInputsCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setInputsCount = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearInputsCount = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasInputsCount = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string coin_name = 3;\n * @return {string}\n */\nproto.SignTx.prototype.getCoinName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"Bitcoin\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setCoinName = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearCoinName = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasCoinName = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint32 version = 4;\n * @return {number}\n */\nproto.SignTx.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 1));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setVersion = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearVersion = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasVersion = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint32 lock_time = 5;\n * @return {number}\n */\nproto.SignTx.prototype.getLockTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setLockTime = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearLockTime = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasLockTime = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional uint32 expiry = 6;\n * @return {number}\n */\nproto.SignTx.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setExpiry = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearExpiry = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasExpiry = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bool overwintered = 7;\n * @return {boolean}\n */\nproto.SignTx.prototype.getOverwintered = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setOverwintered = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearOverwintered = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasOverwintered = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint32 version_group_id = 8;\n * @return {number}\n */\nproto.SignTx.prototype.getVersionGroupId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setVersionGroupId = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearVersionGroupId = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasVersionGroupId = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint32 branch_id = 10;\n * @return {number}\n */\nproto.SignTx.prototype.getBranchId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.setBranchId = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignTx} returns this\n */\nproto.SignTx.prototype.clearBranchId = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignTx.prototype.hasBranchId = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requestType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    details: (f = msg.getDetails()) && types_pb.TxRequestDetailsType.toObject(includeInstance, f),\n    serialized: (f = msg.getSerialized()) && types_pb.TxRequestSerializedType.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxRequest}\n */\nproto.TxRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxRequest;\n  return proto.TxRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxRequest}\n */\nproto.TxRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.RequestType} */ (reader.readEnum());\n      msg.setRequestType(value);\n      break;\n    case 2:\n      var value = new types_pb.TxRequestDetailsType;\n      reader.readMessage(value,types_pb.TxRequestDetailsType.deserializeBinaryFromReader);\n      msg.setDetails(value);\n      break;\n    case 3:\n      var value = new types_pb.TxRequestSerializedType;\n      reader.readMessage(value,types_pb.TxRequestSerializedType.deserializeBinaryFromReader);\n      msg.setSerialized(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.RequestType} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getDetails();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      types_pb.TxRequestDetailsType.serializeBinaryToWriter\n    );\n  }\n  f = message.getSerialized();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      types_pb.TxRequestSerializedType.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional RequestType request_type = 1;\n * @return {!proto.RequestType}\n */\nproto.TxRequest.prototype.getRequestType = function() {\n  return /** @type {!proto.RequestType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.RequestType} value\n * @return {!proto.TxRequest} returns this\n */\nproto.TxRequest.prototype.setRequestType = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.TxRequest} returns this\n */\nproto.TxRequest.prototype.clearRequestType = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequest.prototype.hasRequestType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional TxRequestDetailsType details = 2;\n * @return {?proto.TxRequestDetailsType}\n */\nproto.TxRequest.prototype.getDetails = function() {\n  return /** @type{?proto.TxRequestDetailsType} */ (\n    jspb.Message.getWrapperField(this, types_pb.TxRequestDetailsType, 2));\n};\n\n\n/**\n * @param {?proto.TxRequestDetailsType|undefined} value\n * @return {!proto.TxRequest} returns this\n*/\nproto.TxRequest.prototype.setDetails = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxRequest} returns this\n */\nproto.TxRequest.prototype.clearDetails = function() {\n  return this.setDetails(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequest.prototype.hasDetails = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional TxRequestSerializedType serialized = 3;\n * @return {?proto.TxRequestSerializedType}\n */\nproto.TxRequest.prototype.getSerialized = function() {\n  return /** @type{?proto.TxRequestSerializedType} */ (\n    jspb.Message.getWrapperField(this, types_pb.TxRequestSerializedType, 3));\n};\n\n\n/**\n * @param {?proto.TxRequestSerializedType|undefined} value\n * @return {!proto.TxRequest} returns this\n*/\nproto.TxRequest.prototype.setSerialized = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxRequest} returns this\n */\nproto.TxRequest.prototype.clearSerialized = function() {\n  return this.setSerialized(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxRequest.prototype.hasSerialized = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TxAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.TxAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TxAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    tx: (f = msg.getTx()) && types_pb.TransactionType.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TxAck}\n */\nproto.TxAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TxAck;\n  return proto.TxAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TxAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TxAck}\n */\nproto.TxAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new types_pb.TransactionType;\n      reader.readMessage(value,types_pb.TransactionType.deserializeBinaryFromReader);\n      msg.setTx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TxAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TxAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TxAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TxAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTx();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      types_pb.TransactionType.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional TransactionType tx = 1;\n * @return {?proto.TransactionType}\n */\nproto.TxAck.prototype.getTx = function() {\n  return /** @type{?proto.TransactionType} */ (\n    jspb.Message.getWrapperField(this, types_pb.TransactionType, 1));\n};\n\n\n/**\n * @param {?proto.TransactionType|undefined} value\n * @return {!proto.TxAck} returns this\n*/\nproto.TxAck.prototype.setTx = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.TxAck} returns this\n */\nproto.TxAck.prototype.clearTx = function() {\n  return this.setTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.TxAck.prototype.hasTx = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.RawTxAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.RawTxAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.RawTxAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.RawTxAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    tx: (f = msg.getTx()) && types_pb.RawTransactionType.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.RawTxAck}\n */\nproto.RawTxAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.RawTxAck;\n  return proto.RawTxAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.RawTxAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.RawTxAck}\n */\nproto.RawTxAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new types_pb.RawTransactionType;\n      reader.readMessage(value,types_pb.RawTransactionType.deserializeBinaryFromReader);\n      msg.setTx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.RawTxAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.RawTxAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.RawTxAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.RawTxAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTx();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      types_pb.RawTransactionType.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional RawTransactionType tx = 1;\n * @return {?proto.RawTransactionType}\n */\nproto.RawTxAck.prototype.getTx = function() {\n  return /** @type{?proto.RawTransactionType} */ (\n    jspb.Message.getWrapperField(this, types_pb.RawTransactionType, 1));\n};\n\n\n/**\n * @param {?proto.RawTransactionType|undefined} value\n * @return {!proto.RawTxAck} returns this\n*/\nproto.RawTxAck.prototype.setTx = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.RawTxAck} returns this\n */\nproto.RawTxAck.prototype.clearTx = function() {\n  return this.setTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.RawTxAck.prototype.hasTx = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.EthereumSignTx.repeatedFields_ = [1,9];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumSignTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumSignTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumSignTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumSignTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    nonce: msg.getNonce_asB64(),\n    gasPrice: msg.getGasPrice_asB64(),\n    gasLimit: msg.getGasLimit_asB64(),\n    to: msg.getTo_asB64(),\n    value: msg.getValue_asB64(),\n    dataInitialChunk: msg.getDataInitialChunk_asB64(),\n    dataLength: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,\n    toAddressNList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,\n    addressType: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n    exchangeType: (f = msg.getExchangeType()) && types_pb.ExchangeType.toObject(includeInstance, f),\n    chainId: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n    maxFeePerGas: msg.getMaxFeePerGas_asB64(),\n    maxPriorityFeePerGas: msg.getMaxPriorityFeePerGas_asB64(),\n    tokenValue: msg.getTokenValue_asB64(),\n    tokenTo: msg.getTokenTo_asB64(),\n    tokenShortcut: (f = jspb.Message.getField(msg, 102)) == null ? undefined : f,\n    txType: (f = jspb.Message.getField(msg, 103)) == null ? undefined : f,\n    type: (f = jspb.Message.getField(msg, 104)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumSignTx}\n */\nproto.EthereumSignTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumSignTx;\n  return proto.EthereumSignTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumSignTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumSignTx}\n */\nproto.EthereumSignTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNonce(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGasPrice(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGasLimit(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDataInitialChunk(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDataLength(value);\n      break;\n    case 9:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addToAddressN(values[i]);\n      }\n      break;\n    case 10:\n      var value = /** @type {!proto.OutputAddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 11:\n      var value = new types_pb.ExchangeType;\n      reader.readMessage(value,types_pb.ExchangeType.deserializeBinaryFromReader);\n      msg.setExchangeType(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChainId(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMaxFeePerGas(value);\n      break;\n    case 14:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMaxPriorityFeePerGas(value);\n      break;\n    case 100:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenValue(value);\n      break;\n    case 101:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenTo(value);\n      break;\n    case 102:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTokenShortcut(value);\n      break;\n    case 103:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTxType(value);\n      break;\n    case 104:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumSignTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumSignTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumSignTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getToAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      9,\n      f\n    );\n  }\n  f = /** @type {!proto.OutputAddressType} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getExchangeType();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      types_pb.ExchangeType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeUint32(\n      12,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeBytes(\n      14,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 100));\n  if (f != null) {\n    writer.writeBytes(\n      100,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 101));\n  if (f != null) {\n    writer.writeBytes(\n      101,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 102));\n  if (f != null) {\n    writer.writeString(\n      102,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 103));\n  if (f != null) {\n    writer.writeUint32(\n      103,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 104));\n  if (f != null) {\n    writer.writeUint32(\n      104,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.EthereumSignTx.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * optional bytes nonce = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getNonce = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes nonce = 2;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getNonce_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNonce()));\n};\n\n\n/**\n * optional bytes nonce = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getNonce_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNonce()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setNonce = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearNonce = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasNonce = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes gas_price = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getGasPrice = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes gas_price = 3;\n * This is a type-conversion wrapper around `getGasPrice()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getGasPrice_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGasPrice()));\n};\n\n\n/**\n * optional bytes gas_price = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGasPrice()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getGasPrice_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGasPrice()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setGasPrice = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearGasPrice = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasGasPrice = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes gas_limit = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getGasLimit = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes gas_limit = 4;\n * This is a type-conversion wrapper around `getGasLimit()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getGasLimit_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGasLimit()));\n};\n\n\n/**\n * optional bytes gas_limit = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGasLimit()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getGasLimit_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGasLimit()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setGasLimit = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearGasLimit = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasGasLimit = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bytes to = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getTo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes to = 5;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setTo = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearTo = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasTo = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes value = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes value = 6;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setValue = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearValue = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bytes data_initial_chunk = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getDataInitialChunk = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes data_initial_chunk = 7;\n * This is a type-conversion wrapper around `getDataInitialChunk()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getDataInitialChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDataInitialChunk()));\n};\n\n\n/**\n * optional bytes data_initial_chunk = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDataInitialChunk()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getDataInitialChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDataInitialChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setDataInitialChunk = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearDataInitialChunk = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasDataInitialChunk = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional uint32 data_length = 8;\n * @return {number}\n */\nproto.EthereumSignTx.prototype.getDataLength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setDataLength = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearDataLength = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasDataLength = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * repeated uint32 to_address_n = 9;\n * @return {!Array<number>}\n */\nproto.EthereumSignTx.prototype.getToAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setToAddressNList = function(value) {\n  return jspb.Message.setField(this, 9, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.addToAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearToAddressNList = function() {\n  return this.setToAddressNList([]);\n};\n\n\n/**\n * optional OutputAddressType address_type = 10;\n * @return {!proto.OutputAddressType}\n */\nproto.EthereumSignTx.prototype.getAddressType = function() {\n  return /** @type {!proto.OutputAddressType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!proto.OutputAddressType} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setAddressType = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearAddressType = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasAddressType = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional ExchangeType exchange_type = 11;\n * @return {?proto.ExchangeType}\n */\nproto.EthereumSignTx.prototype.getExchangeType = function() {\n  return /** @type{?proto.ExchangeType} */ (\n    jspb.Message.getWrapperField(this, types_pb.ExchangeType, 11));\n};\n\n\n/**\n * @param {?proto.ExchangeType|undefined} value\n * @return {!proto.EthereumSignTx} returns this\n*/\nproto.EthereumSignTx.prototype.setExchangeType = function(value) {\n  return jspb.Message.setWrapperField(this, 11, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearExchangeType = function() {\n  return this.setExchangeType(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasExchangeType = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional uint32 chain_id = 12;\n * @return {number}\n */\nproto.EthereumSignTx.prototype.getChainId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setChainId = function(value) {\n  return jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearChainId = function() {\n  return jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasChainId = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional bytes max_fee_per_gas = 13;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getMaxFeePerGas = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes max_fee_per_gas = 13;\n * This is a type-conversion wrapper around `getMaxFeePerGas()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getMaxFeePerGas_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMaxFeePerGas()));\n};\n\n\n/**\n * optional bytes max_fee_per_gas = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMaxFeePerGas()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getMaxFeePerGas_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMaxFeePerGas()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setMaxFeePerGas = function(value) {\n  return jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearMaxFeePerGas = function() {\n  return jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasMaxFeePerGas = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional bytes max_priority_fee_per_gas = 14;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getMaxPriorityFeePerGas = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * optional bytes max_priority_fee_per_gas = 14;\n * This is a type-conversion wrapper around `getMaxPriorityFeePerGas()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getMaxPriorityFeePerGas_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMaxPriorityFeePerGas()));\n};\n\n\n/**\n * optional bytes max_priority_fee_per_gas = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMaxPriorityFeePerGas()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getMaxPriorityFeePerGas_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMaxPriorityFeePerGas()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setMaxPriorityFeePerGas = function(value) {\n  return jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearMaxPriorityFeePerGas = function() {\n  return jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasMaxPriorityFeePerGas = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional bytes token_value = 100;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getTokenValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 100, \"\"));\n};\n\n\n/**\n * optional bytes token_value = 100;\n * This is a type-conversion wrapper around `getTokenValue()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getTokenValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenValue()));\n};\n\n\n/**\n * optional bytes token_value = 100;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenValue()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getTokenValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setTokenValue = function(value) {\n  return jspb.Message.setField(this, 100, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearTokenValue = function() {\n  return jspb.Message.setField(this, 100, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasTokenValue = function() {\n  return jspb.Message.getField(this, 100) != null;\n};\n\n\n/**\n * optional bytes token_to = 101;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignTx.prototype.getTokenTo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 101, \"\"));\n};\n\n\n/**\n * optional bytes token_to = 101;\n * This is a type-conversion wrapper around `getTokenTo()`\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getTokenTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenTo()));\n};\n\n\n/**\n * optional bytes token_to = 101;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenTo()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignTx.prototype.getTokenTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenTo()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setTokenTo = function(value) {\n  return jspb.Message.setField(this, 101, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearTokenTo = function() {\n  return jspb.Message.setField(this, 101, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasTokenTo = function() {\n  return jspb.Message.getField(this, 101) != null;\n};\n\n\n/**\n * optional string token_shortcut = 102;\n * @return {string}\n */\nproto.EthereumSignTx.prototype.getTokenShortcut = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 102, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setTokenShortcut = function(value) {\n  return jspb.Message.setField(this, 102, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearTokenShortcut = function() {\n  return jspb.Message.setField(this, 102, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasTokenShortcut = function() {\n  return jspb.Message.getField(this, 102) != null;\n};\n\n\n/**\n * optional uint32 tx_type = 103;\n * @return {number}\n */\nproto.EthereumSignTx.prototype.getTxType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 103, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setTxType = function(value) {\n  return jspb.Message.setField(this, 103, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearTxType = function() {\n  return jspb.Message.setField(this, 103, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasTxType = function() {\n  return jspb.Message.getField(this, 103) != null;\n};\n\n\n/**\n * optional uint32 type = 104;\n * @return {number}\n */\nproto.EthereumSignTx.prototype.getType = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 104, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.setType = function(value) {\n  return jspb.Message.setField(this, 104, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignTx} returns this\n */\nproto.EthereumSignTx.prototype.clearType = function() {\n  return jspb.Message.setField(this, 104, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignTx.prototype.hasType = function() {\n  return jspb.Message.getField(this, 104) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumTxRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumTxRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumTxRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumTxRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dataLength: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    signatureV: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    signatureR: msg.getSignatureR_asB64(),\n    signatureS: msg.getSignatureS_asB64(),\n    hash: msg.getHash_asB64(),\n    signatureDer: msg.getSignatureDer_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumTxRequest}\n */\nproto.EthereumTxRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumTxRequest;\n  return proto.EthereumTxRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumTxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumTxRequest}\n */\nproto.EthereumTxRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setDataLength(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setSignatureV(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignatureR(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignatureS(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignatureDer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumTxRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumTxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumTxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumTxRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 data_length = 1;\n * @return {number}\n */\nproto.EthereumTxRequest.prototype.getDataLength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.setDataLength = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.clearDataLength = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxRequest.prototype.hasDataLength = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 signature_v = 2;\n * @return {number}\n */\nproto.EthereumTxRequest.prototype.getSignatureV = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.setSignatureV = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.clearSignatureV = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxRequest.prototype.hasSignatureV = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes signature_r = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumTxRequest.prototype.getSignatureR = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes signature_r = 3;\n * This is a type-conversion wrapper around `getSignatureR()`\n * @return {string}\n */\nproto.EthereumTxRequest.prototype.getSignatureR_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignatureR()));\n};\n\n\n/**\n * optional bytes signature_r = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureR()`\n * @return {!Uint8Array}\n */\nproto.EthereumTxRequest.prototype.getSignatureR_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignatureR()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.setSignatureR = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.clearSignatureR = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxRequest.prototype.hasSignatureR = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes signature_s = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumTxRequest.prototype.getSignatureS = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes signature_s = 4;\n * This is a type-conversion wrapper around `getSignatureS()`\n * @return {string}\n */\nproto.EthereumTxRequest.prototype.getSignatureS_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignatureS()));\n};\n\n\n/**\n * optional bytes signature_s = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureS()`\n * @return {!Uint8Array}\n */\nproto.EthereumTxRequest.prototype.getSignatureS_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignatureS()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.setSignatureS = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.clearSignatureS = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxRequest.prototype.hasSignatureS = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bytes hash = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumTxRequest.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes hash = 5;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.EthereumTxRequest.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.EthereumTxRequest.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.setHash = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.clearHash = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxRequest.prototype.hasHash = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes signature_der = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumTxRequest.prototype.getSignatureDer = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes signature_der = 6;\n * This is a type-conversion wrapper around `getSignatureDer()`\n * @return {string}\n */\nproto.EthereumTxRequest.prototype.getSignatureDer_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignatureDer()));\n};\n\n\n/**\n * optional bytes signature_der = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureDer()`\n * @return {!Uint8Array}\n */\nproto.EthereumTxRequest.prototype.getSignatureDer_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignatureDer()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.setSignatureDer = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxRequest} returns this\n */\nproto.EthereumTxRequest.prototype.clearSignatureDer = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxRequest.prototype.hasSignatureDer = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumTxAck.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumTxAck.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumTxAck} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumTxAck.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dataChunk: msg.getDataChunk_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumTxAck}\n */\nproto.EthereumTxAck.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumTxAck;\n  return proto.EthereumTxAck.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumTxAck} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumTxAck}\n */\nproto.EthereumTxAck.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDataChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumTxAck.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumTxAck.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumTxAck} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumTxAck.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes data_chunk = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumTxAck.prototype.getDataChunk = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes data_chunk = 1;\n * This is a type-conversion wrapper around `getDataChunk()`\n * @return {string}\n */\nproto.EthereumTxAck.prototype.getDataChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDataChunk()));\n};\n\n\n/**\n * optional bytes data_chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDataChunk()`\n * @return {!Uint8Array}\n */\nproto.EthereumTxAck.prototype.getDataChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDataChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumTxAck} returns this\n */\nproto.EthereumTxAck.prototype.setDataChunk = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumTxAck} returns this\n */\nproto.EthereumTxAck.prototype.clearDataChunk = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumTxAck.prototype.hasDataChunk = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.EthereumSignMessage.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumSignMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumSignMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumSignMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumSignMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressNList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    message: msg.getMessage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumSignMessage}\n */\nproto.EthereumSignMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumSignMessage;\n  return proto.EthereumSignMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumSignMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumSignMessage}\n */\nproto.EthereumSignMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addAddressN(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumSignMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumSignMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumSignMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumSignMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressNList();\n  if (f.length > 0) {\n    writer.writeRepeatedUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint32 address_n = 1;\n * @return {!Array<number>}\n */\nproto.EthereumSignMessage.prototype.getAddressNList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.EthereumSignMessage} returns this\n */\nproto.EthereumSignMessage.prototype.setAddressNList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.EthereumSignMessage} returns this\n */\nproto.EthereumSignMessage.prototype.addAddressN = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EthereumSignMessage} returns this\n */\nproto.EthereumSignMessage.prototype.clearAddressNList = function() {\n  return this.setAddressNList([]);\n};\n\n\n/**\n * required bytes message = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumSignMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * required bytes message = 2;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.EthereumSignMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * required bytes message = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.EthereumSignMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumSignMessage} returns this\n */\nproto.EthereumSignMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumSignMessage} returns this\n */\nproto.EthereumSignMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumSignMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumVerifyMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumVerifyMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumVerifyMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumVerifyMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    signature: msg.getSignature_asB64(),\n    message: msg.getMessage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumVerifyMessage}\n */\nproto.EthereumVerifyMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumVerifyMessage;\n  return proto.EthereumVerifyMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumVerifyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumVerifyMessage}\n */\nproto.EthereumVerifyMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumVerifyMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumVerifyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumVerifyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumVerifyMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumVerifyMessage.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.EthereumVerifyMessage.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.EthereumVerifyMessage.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumVerifyMessage} returns this\n */\nproto.EthereumVerifyMessage.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumVerifyMessage} returns this\n */\nproto.EthereumVerifyMessage.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumVerifyMessage.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumVerifyMessage.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.EthereumVerifyMessage.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.EthereumVerifyMessage.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumVerifyMessage} returns this\n */\nproto.EthereumVerifyMessage.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumVerifyMessage} returns this\n */\nproto.EthereumVerifyMessage.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumVerifyMessage.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumVerifyMessage.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.EthereumVerifyMessage.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.EthereumVerifyMessage.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumVerifyMessage} returns this\n */\nproto.EthereumVerifyMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumVerifyMessage} returns this\n */\nproto.EthereumVerifyMessage.prototype.clearMessage = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumVerifyMessage.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EthereumMessageSignature.prototype.toObject = function(opt_includeInstance) {\n  return proto.EthereumMessageSignature.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EthereumMessageSignature} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumMessageSignature.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EthereumMessageSignature}\n */\nproto.EthereumMessageSignature.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EthereumMessageSignature;\n  return proto.EthereumMessageSignature.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EthereumMessageSignature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EthereumMessageSignature}\n */\nproto.EthereumMessageSignature.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EthereumMessageSignature.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EthereumMessageSignature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EthereumMessageSignature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EthereumMessageSignature.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumMessageSignature.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.EthereumMessageSignature.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.EthereumMessageSignature.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumMessageSignature} returns this\n */\nproto.EthereumMessageSignature.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumMessageSignature} returns this\n */\nproto.EthereumMessageSignature.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumMessageSignature.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.EthereumMessageSignature.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.EthereumMessageSignature.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.EthereumMessageSignature.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.EthereumMessageSignature} returns this\n */\nproto.EthereumMessageSignature.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.EthereumMessageSignature} returns this\n */\nproto.EthereumMessageSignature.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.EthereumMessageSignature.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SignIdentity.prototype.toObject = function(opt_includeInstance) {\n  return proto.SignIdentity.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SignIdentity} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignIdentity.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    identity: (f = msg.getIdentity()) && types_pb.IdentityType.toObject(includeInstance, f),\n    challengeHidden: msg.getChallengeHidden_asB64(),\n    challengeVisual: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    ecdsaCurveName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignIdentity}\n */\nproto.SignIdentity.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignIdentity;\n  return proto.SignIdentity.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignIdentity} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignIdentity}\n */\nproto.SignIdentity.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new types_pb.IdentityType;\n      reader.readMessage(value,types_pb.IdentityType.deserializeBinaryFromReader);\n      msg.setIdentity(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChallengeHidden(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChallengeVisual(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEcdsaCurveName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SignIdentity.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SignIdentity.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignIdentity} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignIdentity.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIdentity();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      types_pb.IdentityType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional IdentityType identity = 1;\n * @return {?proto.IdentityType}\n */\nproto.SignIdentity.prototype.getIdentity = function() {\n  return /** @type{?proto.IdentityType} */ (\n    jspb.Message.getWrapperField(this, types_pb.IdentityType, 1));\n};\n\n\n/**\n * @param {?proto.IdentityType|undefined} value\n * @return {!proto.SignIdentity} returns this\n*/\nproto.SignIdentity.prototype.setIdentity = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.clearIdentity = function() {\n  return this.setIdentity(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignIdentity.prototype.hasIdentity = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes challenge_hidden = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.SignIdentity.prototype.getChallengeHidden = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes challenge_hidden = 2;\n * This is a type-conversion wrapper around `getChallengeHidden()`\n * @return {string}\n */\nproto.SignIdentity.prototype.getChallengeHidden_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChallengeHidden()));\n};\n\n\n/**\n * optional bytes challenge_hidden = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallengeHidden()`\n * @return {!Uint8Array}\n */\nproto.SignIdentity.prototype.getChallengeHidden_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChallengeHidden()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.setChallengeHidden = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.clearChallengeHidden = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignIdentity.prototype.hasChallengeHidden = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string challenge_visual = 3;\n * @return {string}\n */\nproto.SignIdentity.prototype.getChallengeVisual = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.setChallengeVisual = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.clearChallengeVisual = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignIdentity.prototype.hasChallengeVisual = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string ecdsa_curve_name = 4;\n * @return {string}\n */\nproto.SignIdentity.prototype.getEcdsaCurveName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.setEcdsaCurveName = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignIdentity} returns this\n */\nproto.SignIdentity.prototype.clearEcdsaCurveName = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignIdentity.prototype.hasEcdsaCurveName = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SignedIdentity.prototype.toObject = function(opt_includeInstance) {\n  return proto.SignedIdentity.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SignedIdentity} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignedIdentity.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    publicKey: msg.getPublicKey_asB64(),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SignedIdentity}\n */\nproto.SignedIdentity.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SignedIdentity;\n  return proto.SignedIdentity.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SignedIdentity} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SignedIdentity}\n */\nproto.SignedIdentity.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SignedIdentity.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SignedIdentity.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SignedIdentity} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SignedIdentity.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.SignedIdentity.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SignedIdentity} returns this\n */\nproto.SignedIdentity.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignedIdentity} returns this\n */\nproto.SignedIdentity.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignedIdentity.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes public_key = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.SignedIdentity.prototype.getPublicKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 2;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.SignedIdentity.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.SignedIdentity.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignedIdentity} returns this\n */\nproto.SignedIdentity.prototype.setPublicKey = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignedIdentity} returns this\n */\nproto.SignedIdentity.prototype.clearPublicKey = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignedIdentity.prototype.hasPublicKey = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes signature = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.SignedIdentity.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.SignedIdentity.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.SignedIdentity.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.SignedIdentity} returns this\n */\nproto.SignedIdentity.prototype.setSignature = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.SignedIdentity} returns this\n */\nproto.SignedIdentity.prototype.clearSignature = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SignedIdentity.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ApplyPolicies.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ApplyPolicies.prototype.toObject = function(opt_includeInstance) {\n  return proto.ApplyPolicies.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ApplyPolicies} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ApplyPolicies.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    policyList: jspb.Message.toObjectList(msg.getPolicyList(),\n    types_pb.PolicyType.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ApplyPolicies}\n */\nproto.ApplyPolicies.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ApplyPolicies;\n  return proto.ApplyPolicies.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ApplyPolicies} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ApplyPolicies}\n */\nproto.ApplyPolicies.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new types_pb.PolicyType;\n      reader.readMessage(value,types_pb.PolicyType.deserializeBinaryFromReader);\n      msg.addPolicy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ApplyPolicies.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ApplyPolicies.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ApplyPolicies} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ApplyPolicies.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPolicyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      types_pb.PolicyType.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PolicyType policy = 1;\n * @return {!Array<!proto.PolicyType>}\n */\nproto.ApplyPolicies.prototype.getPolicyList = function() {\n  return /** @type{!Array<!proto.PolicyType>} */ (\n    jspb.Message.getRepeatedWrapperField(this, types_pb.PolicyType, 1));\n};\n\n\n/**\n * @param {!Array<!proto.PolicyType>} value\n * @return {!proto.ApplyPolicies} returns this\n*/\nproto.ApplyPolicies.prototype.setPolicyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.PolicyType=} opt_value\n * @param {number=} opt_index\n * @return {!proto.PolicyType}\n */\nproto.ApplyPolicies.prototype.addPolicy = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PolicyType, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ApplyPolicies} returns this\n */\nproto.ApplyPolicies.prototype.clearPolicyList = function() {\n  return this.setPolicyList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FlashHash.prototype.toObject = function(opt_includeInstance) {\n  return proto.FlashHash.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FlashHash} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FlashHash.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    length: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    challenge: msg.getChallenge_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FlashHash}\n */\nproto.FlashHash.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FlashHash;\n  return proto.FlashHash.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FlashHash} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FlashHash}\n */\nproto.FlashHash.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLength(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChallenge(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FlashHash.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FlashHash.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FlashHash} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FlashHash.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 address = 1;\n * @return {number}\n */\nproto.FlashHash.prototype.getAddress = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.FlashHash} returns this\n */\nproto.FlashHash.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHash} returns this\n */\nproto.FlashHash.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashHash.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 length = 2;\n * @return {number}\n */\nproto.FlashHash.prototype.getLength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.FlashHash} returns this\n */\nproto.FlashHash.prototype.setLength = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHash} returns this\n */\nproto.FlashHash.prototype.clearLength = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashHash.prototype.hasLength = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes challenge = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.FlashHash.prototype.getChallenge = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes challenge = 3;\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {string}\n */\nproto.FlashHash.prototype.getChallenge_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChallenge()));\n};\n\n\n/**\n * optional bytes challenge = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {!Uint8Array}\n */\nproto.FlashHash.prototype.getChallenge_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChallenge()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FlashHash} returns this\n */\nproto.FlashHash.prototype.setChallenge = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHash} returns this\n */\nproto.FlashHash.prototype.clearChallenge = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashHash.prototype.hasChallenge = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FlashWrite.prototype.toObject = function(opt_includeInstance) {\n  return proto.FlashWrite.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FlashWrite} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FlashWrite.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    data: msg.getData_asB64(),\n    erase: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FlashWrite}\n */\nproto.FlashWrite.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FlashWrite;\n  return proto.FlashWrite.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FlashWrite} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FlashWrite}\n */\nproto.FlashWrite.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setErase(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FlashWrite.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FlashWrite.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FlashWrite} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FlashWrite.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 address = 1;\n * @return {number}\n */\nproto.FlashWrite.prototype.getAddress = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.FlashWrite} returns this\n */\nproto.FlashWrite.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashWrite} returns this\n */\nproto.FlashWrite.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashWrite.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.FlashWrite.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.FlashWrite.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.FlashWrite.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FlashWrite} returns this\n */\nproto.FlashWrite.prototype.setData = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashWrite} returns this\n */\nproto.FlashWrite.prototype.clearData = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashWrite.prototype.hasData = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool erase = 3;\n * @return {boolean}\n */\nproto.FlashWrite.prototype.getErase = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.FlashWrite} returns this\n */\nproto.FlashWrite.prototype.setErase = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashWrite} returns this\n */\nproto.FlashWrite.prototype.clearErase = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashWrite.prototype.hasErase = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FlashHashResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.FlashHashResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FlashHashResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FlashHashResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    data: msg.getData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FlashHashResponse}\n */\nproto.FlashHashResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FlashHashResponse;\n  return proto.FlashHashResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FlashHashResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FlashHashResponse}\n */\nproto.FlashHashResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FlashHashResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FlashHashResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FlashHashResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FlashHashResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes data = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.FlashHashResponse.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.FlashHashResponse.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.FlashHashResponse.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FlashHashResponse} returns this\n */\nproto.FlashHashResponse.prototype.setData = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FlashHashResponse} returns this\n */\nproto.FlashHashResponse.prototype.clearData = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FlashHashResponse.prototype.hasData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkFlashDump.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkFlashDump.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkFlashDump} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkFlashDump.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    length: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkFlashDump}\n */\nproto.DebugLinkFlashDump.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkFlashDump;\n  return proto.DebugLinkFlashDump.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkFlashDump} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkFlashDump}\n */\nproto.DebugLinkFlashDump.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLength(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkFlashDump.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkFlashDump.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkFlashDump} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkFlashDump.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 address = 1;\n * @return {number}\n */\nproto.DebugLinkFlashDump.prototype.getAddress = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.DebugLinkFlashDump} returns this\n */\nproto.DebugLinkFlashDump.prototype.setAddress = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkFlashDump} returns this\n */\nproto.DebugLinkFlashDump.prototype.clearAddress = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkFlashDump.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 length = 2;\n * @return {number}\n */\nproto.DebugLinkFlashDump.prototype.getLength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.DebugLinkFlashDump} returns this\n */\nproto.DebugLinkFlashDump.prototype.setLength = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkFlashDump} returns this\n */\nproto.DebugLinkFlashDump.prototype.clearLength = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkFlashDump.prototype.hasLength = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkFlashDumpResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkFlashDumpResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkFlashDumpResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkFlashDumpResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    data: msg.getData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkFlashDumpResponse}\n */\nproto.DebugLinkFlashDumpResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkFlashDumpResponse;\n  return proto.DebugLinkFlashDumpResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkFlashDumpResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkFlashDumpResponse}\n */\nproto.DebugLinkFlashDumpResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkFlashDumpResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkFlashDumpResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkFlashDumpResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkFlashDumpResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes data = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.DebugLinkFlashDumpResponse.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.DebugLinkFlashDumpResponse.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.DebugLinkFlashDumpResponse.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkFlashDumpResponse} returns this\n */\nproto.DebugLinkFlashDumpResponse.prototype.setData = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkFlashDumpResponse} returns this\n */\nproto.DebugLinkFlashDumpResponse.prototype.clearData = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkFlashDumpResponse.prototype.hasData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SoftReset.prototype.toObject = function(opt_includeInstance) {\n  return proto.SoftReset.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SoftReset} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SoftReset.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SoftReset}\n */\nproto.SoftReset.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SoftReset;\n  return proto.SoftReset.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SoftReset} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SoftReset}\n */\nproto.SoftReset.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SoftReset.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SoftReset.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SoftReset} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SoftReset.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FirmwareErase.prototype.toObject = function(opt_includeInstance) {\n  return proto.FirmwareErase.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FirmwareErase} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FirmwareErase.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FirmwareErase}\n */\nproto.FirmwareErase.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FirmwareErase;\n  return proto.FirmwareErase.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FirmwareErase} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FirmwareErase}\n */\nproto.FirmwareErase.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FirmwareErase.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FirmwareErase.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FirmwareErase} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FirmwareErase.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FirmwareUpload.prototype.toObject = function(opt_includeInstance) {\n  return proto.FirmwareUpload.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FirmwareUpload} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FirmwareUpload.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payloadHash: msg.getPayloadHash_asB64(),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FirmwareUpload}\n */\nproto.FirmwareUpload.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FirmwareUpload;\n  return proto.FirmwareUpload.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FirmwareUpload} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FirmwareUpload}\n */\nproto.FirmwareUpload.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayloadHash(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FirmwareUpload.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FirmwareUpload.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FirmwareUpload} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FirmwareUpload.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required bytes payload_hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.FirmwareUpload.prototype.getPayloadHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * required bytes payload_hash = 1;\n * This is a type-conversion wrapper around `getPayloadHash()`\n * @return {string}\n */\nproto.FirmwareUpload.prototype.getPayloadHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayloadHash()));\n};\n\n\n/**\n * required bytes payload_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayloadHash()`\n * @return {!Uint8Array}\n */\nproto.FirmwareUpload.prototype.getPayloadHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayloadHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FirmwareUpload} returns this\n */\nproto.FirmwareUpload.prototype.setPayloadHash = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FirmwareUpload} returns this\n */\nproto.FirmwareUpload.prototype.clearPayloadHash = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FirmwareUpload.prototype.hasPayloadHash = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required bytes payload = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.FirmwareUpload.prototype.getPayload = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * required bytes payload = 2;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.FirmwareUpload.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * required bytes payload = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.FirmwareUpload.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.FirmwareUpload} returns this\n */\nproto.FirmwareUpload.prototype.setPayload = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.FirmwareUpload} returns this\n */\nproto.FirmwareUpload.prototype.clearPayload = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.FirmwareUpload.prototype.hasPayload = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkDecision.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkDecision.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkDecision} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkDecision.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    yesNo: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkDecision}\n */\nproto.DebugLinkDecision.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkDecision;\n  return proto.DebugLinkDecision.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkDecision} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkDecision}\n */\nproto.DebugLinkDecision.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setYesNo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkDecision.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkDecision.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkDecision} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkDecision.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * required bool yes_no = 1;\n * @return {boolean}\n */\nproto.DebugLinkDecision.prototype.getYesNo = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.DebugLinkDecision} returns this\n */\nproto.DebugLinkDecision.prototype.setYesNo = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkDecision} returns this\n */\nproto.DebugLinkDecision.prototype.clearYesNo = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkDecision.prototype.hasYesNo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkGetState.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkGetState.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkGetState} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkGetState.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkGetState}\n */\nproto.DebugLinkGetState.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkGetState;\n  return proto.DebugLinkGetState.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkGetState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkGetState}\n */\nproto.DebugLinkGetState.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkGetState.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkGetState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkGetState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkGetState.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkState.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkState.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkState} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkState.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    layout: msg.getLayout_asB64(),\n    pin: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    matrix: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,\n    mnemonic: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,\n    node: (f = msg.getNode()) && types_pb.HDNodeType.toObject(includeInstance, f),\n    passphraseProtection: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,\n    resetWord: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,\n    resetEntropy: msg.getResetEntropy_asB64(),\n    recoveryFakeWord: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,\n    recoveryWordPos: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,\n    recoveryCipher: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,\n    recoveryAutoCompletedWord: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,\n    firmwareHash: msg.getFirmwareHash_asB64(),\n    storageHash: msg.getStorageHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkState}\n */\nproto.DebugLinkState.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkState;\n  return proto.DebugLinkState.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkState}\n */\nproto.DebugLinkState.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLayout(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPin(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMatrix(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMnemonic(value);\n      break;\n    case 5:\n      var value = new types_pb.HDNodeType;\n      reader.readMessage(value,types_pb.HDNodeType.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPassphraseProtection(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResetWord(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setResetEntropy(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRecoveryFakeWord(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRecoveryWordPos(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRecoveryCipher(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRecoveryAutoCompletedWord(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirmwareHash(value);\n      break;\n    case 14:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setStorageHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkState.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkState.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      types_pb.HDNodeType.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeBytes(\n      14,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes layout = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.DebugLinkState.prototype.getLayout = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes layout = 1;\n * This is a type-conversion wrapper around `getLayout()`\n * @return {string}\n */\nproto.DebugLinkState.prototype.getLayout_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLayout()));\n};\n\n\n/**\n * optional bytes layout = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLayout()`\n * @return {!Uint8Array}\n */\nproto.DebugLinkState.prototype.getLayout_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLayout()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setLayout = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearLayout = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasLayout = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string pin = 2;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getPin = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setPin = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearPin = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasPin = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string matrix = 3;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getMatrix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setMatrix = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearMatrix = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasMatrix = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string mnemonic = 4;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getMnemonic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setMnemonic = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearMnemonic = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasMnemonic = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional HDNodeType node = 5;\n * @return {?proto.HDNodeType}\n */\nproto.DebugLinkState.prototype.getNode = function() {\n  return /** @type{?proto.HDNodeType} */ (\n    jspb.Message.getWrapperField(this, types_pb.HDNodeType, 5));\n};\n\n\n/**\n * @param {?proto.HDNodeType|undefined} value\n * @return {!proto.DebugLinkState} returns this\n*/\nproto.DebugLinkState.prototype.setNode = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearNode = function() {\n  return this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bool passphrase_protection = 6;\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.getPassphraseProtection = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setPassphraseProtection = function(value) {\n  return jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearPassphraseProtection = function() {\n  return jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasPassphraseProtection = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional string reset_word = 7;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getResetWord = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setResetWord = function(value) {\n  return jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearResetWord = function() {\n  return jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasResetWord = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional bytes reset_entropy = 8;\n * @return {!(string|Uint8Array)}\n */\nproto.DebugLinkState.prototype.getResetEntropy = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes reset_entropy = 8;\n * This is a type-conversion wrapper around `getResetEntropy()`\n * @return {string}\n */\nproto.DebugLinkState.prototype.getResetEntropy_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getResetEntropy()));\n};\n\n\n/**\n * optional bytes reset_entropy = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResetEntropy()`\n * @return {!Uint8Array}\n */\nproto.DebugLinkState.prototype.getResetEntropy_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getResetEntropy()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setResetEntropy = function(value) {\n  return jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearResetEntropy = function() {\n  return jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasResetEntropy = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional string recovery_fake_word = 9;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getRecoveryFakeWord = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setRecoveryFakeWord = function(value) {\n  return jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearRecoveryFakeWord = function() {\n  return jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasRecoveryFakeWord = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional uint32 recovery_word_pos = 10;\n * @return {number}\n */\nproto.DebugLinkState.prototype.getRecoveryWordPos = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setRecoveryWordPos = function(value) {\n  return jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearRecoveryWordPos = function() {\n  return jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasRecoveryWordPos = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional string recovery_cipher = 11;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getRecoveryCipher = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setRecoveryCipher = function(value) {\n  return jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearRecoveryCipher = function() {\n  return jspb.Message.setField(this, 11, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasRecoveryCipher = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional string recovery_auto_completed_word = 12;\n * @return {string}\n */\nproto.DebugLinkState.prototype.getRecoveryAutoCompletedWord = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setRecoveryAutoCompletedWord = function(value) {\n  return jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearRecoveryAutoCompletedWord = function() {\n  return jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasRecoveryAutoCompletedWord = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional bytes firmware_hash = 13;\n * @return {!(string|Uint8Array)}\n */\nproto.DebugLinkState.prototype.getFirmwareHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes firmware_hash = 13;\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {string}\n */\nproto.DebugLinkState.prototype.getFirmwareHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirmwareHash()));\n};\n\n\n/**\n * optional bytes firmware_hash = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirmwareHash()`\n * @return {!Uint8Array}\n */\nproto.DebugLinkState.prototype.getFirmwareHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirmwareHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setFirmwareHash = function(value) {\n  return jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearFirmwareHash = function() {\n  return jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasFirmwareHash = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional bytes storage_hash = 14;\n * @return {!(string|Uint8Array)}\n */\nproto.DebugLinkState.prototype.getStorageHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * optional bytes storage_hash = 14;\n * This is a type-conversion wrapper around `getStorageHash()`\n * @return {string}\n */\nproto.DebugLinkState.prototype.getStorageHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getStorageHash()));\n};\n\n\n/**\n * optional bytes storage_hash = 14;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStorageHash()`\n * @return {!Uint8Array}\n */\nproto.DebugLinkState.prototype.getStorageHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getStorageHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.setStorageHash = function(value) {\n  return jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkState} returns this\n */\nproto.DebugLinkState.prototype.clearStorageHash = function() {\n  return jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkState.prototype.hasStorageHash = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkStop.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkStop.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkStop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkStop.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkStop}\n */\nproto.DebugLinkStop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkStop;\n  return proto.DebugLinkStop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkStop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkStop}\n */\nproto.DebugLinkStop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkStop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkStop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkStop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkStop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkLog.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkLog.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkLog} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkLog.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    level: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,\n    bucket: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,\n    text: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkLog}\n */\nproto.DebugLinkLog.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkLog;\n  return proto.DebugLinkLog.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkLog} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkLog}\n */\nproto.DebugLinkLog.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLevel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBucket(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkLog.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkLog.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkLog} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkLog.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 level = 1;\n * @return {number}\n */\nproto.DebugLinkLog.prototype.getLevel = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.DebugLinkLog} returns this\n */\nproto.DebugLinkLog.prototype.setLevel = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkLog} returns this\n */\nproto.DebugLinkLog.prototype.clearLevel = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkLog.prototype.hasLevel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string bucket = 2;\n * @return {string}\n */\nproto.DebugLinkLog.prototype.getBucket = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkLog} returns this\n */\nproto.DebugLinkLog.prototype.setBucket = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkLog} returns this\n */\nproto.DebugLinkLog.prototype.clearBucket = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkLog.prototype.hasBucket = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string text = 3;\n * @return {string}\n */\nproto.DebugLinkLog.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DebugLinkLog} returns this\n */\nproto.DebugLinkLog.prototype.setText = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.DebugLinkLog} returns this\n */\nproto.DebugLinkLog.prototype.clearText = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.DebugLinkLog.prototype.hasText = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DebugLinkFillConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.DebugLinkFillConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DebugLinkFillConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkFillConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DebugLinkFillConfig}\n */\nproto.DebugLinkFillConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DebugLinkFillConfig;\n  return proto.DebugLinkFillConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DebugLinkFillConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DebugLinkFillConfig}\n */\nproto.DebugLinkFillConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DebugLinkFillConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DebugLinkFillConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DebugLinkFillConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DebugLinkFillConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ChangeWipeCode.prototype.toObject = function(opt_includeInstance) {\n  return proto.ChangeWipeCode.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ChangeWipeCode} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ChangeWipeCode.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    remove: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ChangeWipeCode}\n */\nproto.ChangeWipeCode.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ChangeWipeCode;\n  return proto.ChangeWipeCode.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ChangeWipeCode} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ChangeWipeCode}\n */\nproto.ChangeWipeCode.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRemove(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ChangeWipeCode.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ChangeWipeCode.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ChangeWipeCode} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ChangeWipeCode.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool remove = 1;\n * @return {boolean}\n */\nproto.ChangeWipeCode.prototype.getRemove = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ChangeWipeCode} returns this\n */\nproto.ChangeWipeCode.prototype.setRemove = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ChangeWipeCode} returns this\n */\nproto.ChangeWipeCode.prototype.clearRemove = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ChangeWipeCode.prototype.hasRemove = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * @enum {number}\n */\nproto.MessageType = {\n  MESSAGETYPE_INITIALIZE: 0,\n  MESSAGETYPE_PING: 1,\n  MESSAGETYPE_SUCCESS: 2,\n  MESSAGETYPE_FAILURE: 3,\n  MESSAGETYPE_CHANGEPIN: 4,\n  MESSAGETYPE_WIPEDEVICE: 5,\n  MESSAGETYPE_FIRMWAREERASE: 6,\n  MESSAGETYPE_FIRMWAREUPLOAD: 7,\n  MESSAGETYPE_GETENTROPY: 9,\n  MESSAGETYPE_ENTROPY: 10,\n  MESSAGETYPE_GETPUBLICKEY: 11,\n  MESSAGETYPE_PUBLICKEY: 12,\n  MESSAGETYPE_LOADDEVICE: 13,\n  MESSAGETYPE_RESETDEVICE: 14,\n  MESSAGETYPE_SIGNTX: 15,\n  MESSAGETYPE_FEATURES: 17,\n  MESSAGETYPE_PINMATRIXREQUEST: 18,\n  MESSAGETYPE_PINMATRIXACK: 19,\n  MESSAGETYPE_CANCEL: 20,\n  MESSAGETYPE_TXREQUEST: 21,\n  MESSAGETYPE_TXACK: 22,\n  MESSAGETYPE_CIPHERKEYVALUE: 23,\n  MESSAGETYPE_CLEARSESSION: 24,\n  MESSAGETYPE_APPLYSETTINGS: 25,\n  MESSAGETYPE_BUTTONREQUEST: 26,\n  MESSAGETYPE_BUTTONACK: 27,\n  MESSAGETYPE_GETADDRESS: 29,\n  MESSAGETYPE_ADDRESS: 30,\n  MESSAGETYPE_ENTROPYREQUEST: 35,\n  MESSAGETYPE_ENTROPYACK: 36,\n  MESSAGETYPE_SIGNMESSAGE: 38,\n  MESSAGETYPE_VERIFYMESSAGE: 39,\n  MESSAGETYPE_MESSAGESIGNATURE: 40,\n  MESSAGETYPE_PASSPHRASEREQUEST: 41,\n  MESSAGETYPE_PASSPHRASEACK: 42,\n  MESSAGETYPE_RECOVERYDEVICE: 45,\n  MESSAGETYPE_WORDREQUEST: 46,\n  MESSAGETYPE_WORDACK: 47,\n  MESSAGETYPE_CIPHEREDKEYVALUE: 48,\n  MESSAGETYPE_ENCRYPTMESSAGE: 49,\n  MESSAGETYPE_ENCRYPTEDMESSAGE: 50,\n  MESSAGETYPE_DECRYPTMESSAGE: 51,\n  MESSAGETYPE_DECRYPTEDMESSAGE: 52,\n  MESSAGETYPE_SIGNIDENTITY: 53,\n  MESSAGETYPE_SIGNEDIDENTITY: 54,\n  MESSAGETYPE_GETFEATURES: 55,\n  MESSAGETYPE_ETHEREUMGETADDRESS: 56,\n  MESSAGETYPE_ETHEREUMADDRESS: 57,\n  MESSAGETYPE_ETHEREUMSIGNTX: 58,\n  MESSAGETYPE_ETHEREUMTXREQUEST: 59,\n  MESSAGETYPE_ETHEREUMTXACK: 60,\n  MESSAGETYPE_CHARACTERREQUEST: 80,\n  MESSAGETYPE_CHARACTERACK: 81,\n  MESSAGETYPE_RAWTXACK: 82,\n  MESSAGETYPE_APPLYPOLICIES: 83,\n  MESSAGETYPE_FLASHHASH: 84,\n  MESSAGETYPE_FLASHWRITE: 85,\n  MESSAGETYPE_FLASHHASHRESPONSE: 86,\n  MESSAGETYPE_DEBUGLINKFLASHDUMP: 87,\n  MESSAGETYPE_DEBUGLINKFLASHDUMPRESPONSE: 88,\n  MESSAGETYPE_SOFTRESET: 89,\n  MESSAGETYPE_DEBUGLINKDECISION: 100,\n  MESSAGETYPE_DEBUGLINKGETSTATE: 101,\n  MESSAGETYPE_DEBUGLINKSTATE: 102,\n  MESSAGETYPE_DEBUGLINKSTOP: 103,\n  MESSAGETYPE_DEBUGLINKLOG: 104,\n  MESSAGETYPE_DEBUGLINKFILLCONFIG: 105,\n  MESSAGETYPE_GETCOINTABLE: 106,\n  MESSAGETYPE_COINTABLE: 107,\n  MESSAGETYPE_ETHEREUMSIGNMESSAGE: 108,\n  MESSAGETYPE_ETHEREUMVERIFYMESSAGE: 109,\n  MESSAGETYPE_ETHEREUMMESSAGESIGNATURE: 110,\n  MESSAGETYPE_CHANGEWIPECODE: 111,\n  MESSAGETYPE_RIPPLEGETADDRESS: 400,\n  MESSAGETYPE_RIPPLEADDRESS: 401,\n  MESSAGETYPE_RIPPLESIGNTX: 402,\n  MESSAGETYPE_RIPPLESIGNEDTX: 403,\n  MESSAGETYPE_THORCHAINGETADDRESS: 500,\n  MESSAGETYPE_THORCHAINADDRESS: 501,\n  MESSAGETYPE_THORCHAINSIGNTX: 502,\n  MESSAGETYPE_THORCHAINMSGREQUEST: 503,\n  MESSAGETYPE_THORCHAINMSGACK: 504,\n  MESSAGETYPE_THORCHAINSIGNEDTX: 505,\n  MESSAGETYPE_EOSGETPUBLICKEY: 600,\n  MESSAGETYPE_EOSPUBLICKEY: 601,\n  MESSAGETYPE_EOSSIGNTX: 602,\n  MESSAGETYPE_EOSTXACTIONREQUEST: 603,\n  MESSAGETYPE_EOSTXACTIONACK: 604,\n  MESSAGETYPE_EOSSIGNEDTX: 605,\n  MESSAGETYPE_NANOGETADDRESS: 700,\n  MESSAGETYPE_NANOADDRESS: 701,\n  MESSAGETYPE_NANOSIGNTX: 702,\n  MESSAGETYPE_NANOSIGNEDTX: 703,\n  MESSAGETYPE_BINANCEGETADDRESS: 800,\n  MESSAGETYPE_BINANCEADDRESS: 801,\n  MESSAGETYPE_BINANCEGETPUBLICKEY: 802,\n  MESSAGETYPE_BINANCEPUBLICKEY: 803,\n  MESSAGETYPE_BINANCESIGNTX: 804,\n  MESSAGETYPE_BINANCETXREQUEST: 805,\n  MESSAGETYPE_BINANCETRANSFERMSG: 806,\n  MESSAGETYPE_BINANCEORDERMSG: 807,\n  MESSAGETYPE_BINANCECANCELMSG: 808,\n  MESSAGETYPE_BINANCESIGNEDTX: 809,\n  MESSAGETYPE_COSMOSGETADDRESS: 900,\n  MESSAGETYPE_COSMOSADDRESS: 901,\n  MESSAGETYPE_COSMOSSIGNTX: 902,\n  MESSAGETYPE_COSMOSMSGREQUEST: 903,\n  MESSAGETYPE_COSMOSMSGACK: 904,\n  MESSAGETYPE_COSMOSSIGNEDTX: 905,\n  MESSAGETYPE_TENDERMINTGETADDRESS: 1000,\n  MESSAGETYPE_TENDERMINTADDRESS: 1001,\n  MESSAGETYPE_TENDERMINTSIGNTX: 1002,\n  MESSAGETYPE_TENDERMINTMSGREQUEST: 1003,\n  MESSAGETYPE_TENDERMINTMSGACK: 1004,\n  MESSAGETYPE_TENDERMINTMSGSEND: 1005,\n  MESSAGETYPE_TENDERMINTSIGNEDTX: 1006\n};\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"script"}