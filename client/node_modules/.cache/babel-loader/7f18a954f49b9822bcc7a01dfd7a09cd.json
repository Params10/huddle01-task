{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"./utils\");\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst jsbi_1 = __importDefault(require(\"jsbi\"));\n\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\n\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k))))));\n\nclass Xoshiro {\n  constructor(seed) {\n    this.next = () => {\n      return new bignumber_js_1.default(this.roll().toString());\n    };\n\n    this.nextDouble = () => {\n      return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n    };\n\n    this.nextInt = (low, high) => {\n      return Math.floor(this.nextDouble().toNumber() * (high - low + 1) + low);\n    };\n\n    this.nextByte = () => this.nextInt(0, 255);\n\n    this.nextData = count => [...new Array(count)].map(() => this.nextByte());\n\n    const digest = utils_1.sha256Hash(seed);\n    this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n    this.setS(digest);\n  }\n\n  setS(digest) {\n    for (let i = 0; i < 4; i++) {\n      let o = i * 8;\n      let v = jsbi_1.default.BigInt(0);\n\n      for (let n = 0; n < 8; n++) {\n        v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n        v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n      }\n\n      this.s[i] = jsbi_1.default.asUintN(64, v);\n    }\n  }\n\n  roll() {\n    const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n    const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n    this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n    this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n    this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n    this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n    this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n    this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n    return result;\n  }\n\n}\n\nexports.default = Xoshiro;","map":{"version":3,"sources":["../src/xoshiro.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst jsbi_1 = __importDefault(require(\"jsbi\"));\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, (jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k)))))));\nclass Xoshiro {\n    constructor(seed) {\n        this.next = () => {\n            return new bignumber_js_1.default(this.roll().toString());\n        };\n        this.nextDouble = () => {\n            return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n        };\n        this.nextInt = (low, high) => {\n            return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n        };\n        this.nextByte = () => this.nextInt(0, 255);\n        this.nextData = (count) => ([...new Array(count)].map(() => this.nextByte()));\n        const digest = utils_1.sha256Hash(seed);\n        this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n        this.setS(digest);\n    }\n    setS(digest) {\n        for (let i = 0; i < 4; i++) {\n            let o = i * 8;\n            let v = jsbi_1.default.BigInt(0);\n            for (let n = 0; n < 8; n++) {\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n            }\n            this.s[i] = jsbi_1.default.asUintN(64, v);\n        }\n    }\n    roll() {\n        const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n        const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n        this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n        this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n        this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n        this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n        return result;\n    }\n}\nexports.default = Xoshiro;\n//# sourceMappingURL=xoshiro.js.map"]},"metadata":{},"sourceType":"script"}