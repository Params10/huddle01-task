{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathComponent = void 0;\n\nclass PathComponent {\n  constructor(args) {\n    this.getIndex = () => this.index;\n\n    this.isWildcard = () => this.wildcard;\n\n    this.isHardened = () => this.hardened;\n\n    this.index = args.index;\n    this.hardened = args.hardened;\n\n    if (this.index !== undefined) {\n      this.wildcard = false;\n    } else {\n      this.wildcard = true;\n    }\n\n    if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {\n      throw new Error(`#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`);\n    }\n  }\n\n}\n\nexports.PathComponent = PathComponent;\nPathComponent.HARDENED_BIT = 0x80000000;","map":{"version":3,"sources":["../src/PathComponent.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAa,aAAb,CAA0B;AAOxB,EAAA,WAAA,CAAY,IAAZ,EAAuD;AAiBhD,SAAA,QAAA,GAAW,MAAM,KAAK,KAAtB;;AACA,SAAA,UAAA,GAAa,MAAM,KAAK,QAAxB;;AACA,SAAA,UAAA,GAAa,MAAM,KAAK,QAAxB;;AAlBL,SAAK,KAAL,GAAa,IAAI,CAAC,KAAlB;AACA,SAAK,QAAL,GAAgB,IAAI,CAAC,QAArB;;AAEA,QAAI,KAAK,KAAL,KAAe,SAAnB,EAA8B;AAC5B,WAAK,QAAL,GAAgB,KAAhB;AACD,KAFD,MAEO;AACL,WAAK,QAAL,GAAgB,IAAhB;AACD;;AAED,QAAI,KAAK,KAAL,IAAc,CAAC,KAAK,KAAL,GAAa,aAAa,CAAC,YAA5B,MAA8C,CAAhE,EAAmE;AACjE,YAAM,IAAI,KAAJ,CACJ,gEAAgE,KAAK,KAAK,uCADtE,CAAN;AAGD;AACF;;AAtBuB;;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA;AACyB,aAAA,CAAA,YAAA,GAAe,UAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathComponent = void 0;\nclass PathComponent {\n    constructor(args) {\n        this.getIndex = () => this.index;\n        this.isWildcard = () => this.wildcard;\n        this.isHardened = () => this.hardened;\n        this.index = args.index;\n        this.hardened = args.hardened;\n        if (this.index !== undefined) {\n            this.wildcard = false;\n        }\n        else {\n            this.wildcard = true;\n        }\n        if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {\n            throw new Error(`#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`);\n        }\n    }\n}\nexports.PathComponent = PathComponent;\nPathComponent.HARDENED_BIT = 0x80000000;\n//# sourceMappingURL=PathComponent.js.map"]},"metadata":{},"sourceType":"script"}