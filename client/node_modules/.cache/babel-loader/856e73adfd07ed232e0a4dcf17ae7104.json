{"ast":null,"code":"import bowser from \"bowser\";\nexport default function deviceInfo(window) {\n  window.BOWSER = bowser;\n  const ua = navigator.userAgent;\n  const browser = bowser.getParser(ua);\n  let flag;\n  if (browser.satisfies({\n    chrome: \">=0\",\n    chromium: \">=0\"\n  })) flag = \"chrome\";else if (browser.satisfies({\n    firefox: \">=0\"\n  })) flag = \"firefox\";else if (browser.satisfies({\n    safari: \">=0\"\n  })) flag = \"safari\";else if (browser.satisfies({\n    opera: \">=0\"\n  })) flag = \"opera\";else if (browser.satisfies({\n    \"microsoft edge\": \">=0\"\n  })) flag = \"edge\";else flag = \"unknown\";\n  return {\n    flag,\n    name: browser.getBrowserName(),\n    version: browser.getBrowserVersion()\n  };\n}","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/huddle01-client/src/utils/deviceInfo.js"],"names":["bowser","deviceInfo","window","BOWSER","ua","navigator","userAgent","browser","getParser","flag","satisfies","chrome","chromium","firefox","safari","opera","name","getBrowserName","version","getBrowserVersion"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACzCA,EAAAA,MAAM,CAACC,MAAP,GAAgBH,MAAhB;AACA,QAAMI,EAAE,GAAGC,SAAS,CAACC,SAArB;AACA,QAAMC,OAAO,GAAGP,MAAM,CAACQ,SAAP,CAAiBJ,EAAjB,CAAhB;AACA,MAAIK,IAAJ;AAEA,MAAIF,OAAO,CAACG,SAAR,CAAkB;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAAlB,CAAJ,EAA2DH,IAAI,GAAG,QAAP,CAA3D,KACK,IAAIF,OAAO,CAACG,SAAR,CAAkB;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAAlB,CAAJ,EAA2CJ,IAAI,GAAG,SAAP,CAA3C,KACA,IAAIF,OAAO,CAACG,SAAR,CAAkB;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAlB,CAAJ,EAA0CL,IAAI,GAAG,QAAP,CAA1C,KACA,IAAIF,OAAO,CAACG,SAAR,CAAkB;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAlB,CAAJ,EAAyCN,IAAI,GAAG,OAAP,CAAzC,KACA,IAAIF,OAAO,CAACG,SAAR,CAAkB;AAAE,sBAAkB;AAApB,GAAlB,CAAJ,EAAoDD,IAAI,GAAG,MAAP,CAApD,KACAA,IAAI,GAAG,SAAP;AAEL,SAAO;AACLA,IAAAA,IADK;AAELO,IAAAA,IAAI,EAAET,OAAO,CAACU,cAAR,EAFD;AAGLC,IAAAA,OAAO,EAAEX,OAAO,CAACY,iBAAR;AAHJ,GAAP;AAKD","sourcesContent":["import bowser from \"bowser\";\n\nexport default function deviceInfo(window) {\n  window.BOWSER = bowser;\n  const ua = navigator.userAgent;\n  const browser = bowser.getParser(ua);\n  let flag;\n\n  if (browser.satisfies({ chrome: \">=0\", chromium: \">=0\" })) flag = \"chrome\";\n  else if (browser.satisfies({ firefox: \">=0\" })) flag = \"firefox\";\n  else if (browser.satisfies({ safari: \">=0\" })) flag = \"safari\";\n  else if (browser.satisfies({ opera: \">=0\" })) flag = \"opera\";\n  else if (browser.satisfies({ \"microsoft edge\": \">=0\" })) flag = \"edge\";\n  else flag = \"unknown\";\n\n  return {\n    flag,\n    name: browser.getBrowserName(),\n    version: browser.getBrowserVersion(),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}