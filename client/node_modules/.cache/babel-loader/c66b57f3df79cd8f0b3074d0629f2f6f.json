{"ast":null,"code":"\"use strict\";\n/* global RTCRtpTransceiver */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Device = exports.detectDevice = void 0;\n\nconst bowser_1 = __importDefault(require(\"bowser\"));\n\nconst Logger_1 = require(\"./Logger\");\n\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\n\nconst errors_1 = require(\"./errors\");\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst ortc = __importStar(require(\"./ortc\"));\n\nconst Transport_1 = require(\"./Transport\");\n\nconst Chrome74_1 = require(\"./handlers/Chrome74\");\n\nconst Chrome70_1 = require(\"./handlers/Chrome70\");\n\nconst Chrome67_1 = require(\"./handlers/Chrome67\");\n\nconst Chrome55_1 = require(\"./handlers/Chrome55\");\n\nconst Firefox60_1 = require(\"./handlers/Firefox60\");\n\nconst Safari12_1 = require(\"./handlers/Safari12\");\n\nconst Safari11_1 = require(\"./handlers/Safari11\");\n\nconst Edge11_1 = require(\"./handlers/Edge11\");\n\nconst ReactNative_1 = require(\"./handlers/ReactNative\");\n\nconst logger = new Logger_1.Logger('Device');\n\nfunction detectDevice() {\n  // React-Native.\n  // NOTE: react-native-webrtc >= 1.75.0 is required.\n  if (typeof navigator === 'object' && navigator.product === 'ReactNative') {\n    if (typeof RTCPeerConnection === 'undefined') {\n      logger.warn('this._detectDevice() | unsupported ReactNative without RTCPeerConnection');\n      return undefined;\n    }\n\n    logger.debug('this._detectDevice() | ReactNative handler chosen');\n    return 'ReactNative';\n  } // Browser.\n  else if (typeof navigator === 'object' && typeof navigator.userAgent === 'string') {\n    const ua = navigator.userAgent;\n    const browser = bowser_1.default.getParser(ua);\n    const engine = browser.getEngine(); // Chrome and Chromium.\n\n    if (browser.satisfies({\n      chrome: '>=74',\n      chromium: '>=74'\n    })) {\n      return 'Chrome74';\n    } else if (browser.satisfies({\n      chrome: '>=70',\n      chromium: '>=70'\n    })) {\n      return 'Chrome70';\n    } else if (browser.satisfies({\n      chrome: '>=67',\n      chromium: '>=67'\n    })) {\n      return 'Chrome67';\n    } else if (browser.satisfies({\n      chrome: '>=55',\n      chromium: '>=55'\n    })) {\n      return 'Chrome55';\n    } // Firefox.\n    else if (browser.satisfies({\n      firefox: '>=60'\n    })) {\n      return 'Firefox60';\n    } // Safari with Unified-Plan support enabled.\n    else if (browser.satisfies({\n      safari: '>=12.0'\n    }) && typeof RTCRtpTransceiver !== 'undefined' && RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n      return 'Safari12';\n    } // Safari with Plab-B support.\n    else if (browser.satisfies({\n      safari: '>=11'\n    })) {\n      return 'Safari11';\n    } // Old Edge with ORTC support.\n    else if (browser.satisfies({\n      'microsoft edge': '>=11'\n    }) && browser.satisfies({\n      'microsoft edge': '<=18'\n    })) {\n      return 'Edge11';\n    } // Best effort for Chromium based browsers.\n    else if (engine.name && engine.name.toLowerCase() === 'blink') {\n      const match = ua.match(/(?:(?:Chrome|Chromium))[ /](\\w+)/i);\n\n      if (match) {\n        const version = Number(match[1]);\n\n        if (version >= 74) {\n          return 'Chrome74';\n        } else if (version >= 70) {\n          return 'Chrome70';\n        } else if (version >= 67) {\n          return 'Chrome67';\n        } else {\n          return 'Chrome55';\n        }\n      } else {\n        return 'Chrome74';\n      }\n    } // Unsupported browser.\n    else {\n      logger.warn('this._detectDevice() | browser not supported [name:%s, version:%s]', browser.getBrowserName(), browser.getBrowserVersion());\n      return undefined;\n    }\n  } // Unknown device.\n  else {\n    logger.warn('this._detectDevice() | unknown device');\n    return undefined;\n  }\n}\n\nexports.detectDevice = detectDevice;\n\nclass Device {\n  /**\n   * Create a new Device to connect to mediasoup server.\n   *\n   * @throws {UnsupportedError} if device is not supported.\n   */\n  constructor({\n    handlerName,\n    handlerFactory,\n    Handler\n  } = {}) {\n    // Loaded flag.\n    this._loaded = false; // Observer instance.\n\n    this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n    logger.debug('constructor()'); // Handle deprecated option.\n\n    if (Handler) {\n      logger.warn('constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead');\n      if (typeof Handler === 'string') handlerName = Handler;else throw new TypeError('non string Handler option no longer supported, use handlerFactory instead');\n    }\n\n    if (handlerName && handlerFactory) {\n      throw new TypeError('just one of handlerName or handlerInterface can be given');\n    }\n\n    if (handlerFactory) {\n      this._handlerFactory = handlerFactory;\n    } else {\n      if (handlerName) {\n        logger.debug('constructor() | handler given: %s', handlerName);\n      } else {\n        handlerName = detectDevice();\n        if (handlerName) logger.debug('constructor() | detected handler: %s', handlerName);else throw new errors_1.UnsupportedError('device not supported');\n      }\n\n      switch (handlerName) {\n        case 'Chrome74':\n          this._handlerFactory = Chrome74_1.Chrome74.createFactory();\n          break;\n\n        case 'Chrome70':\n          this._handlerFactory = Chrome70_1.Chrome70.createFactory();\n          break;\n\n        case 'Chrome67':\n          this._handlerFactory = Chrome67_1.Chrome67.createFactory();\n          break;\n\n        case 'Chrome55':\n          this._handlerFactory = Chrome55_1.Chrome55.createFactory();\n          break;\n\n        case 'Firefox60':\n          this._handlerFactory = Firefox60_1.Firefox60.createFactory();\n          break;\n\n        case 'Safari12':\n          this._handlerFactory = Safari12_1.Safari12.createFactory();\n          break;\n\n        case 'Safari11':\n          this._handlerFactory = Safari11_1.Safari11.createFactory();\n          break;\n\n        case 'Edge11':\n          this._handlerFactory = Edge11_1.Edge11.createFactory();\n          break;\n\n        case 'ReactNative':\n          this._handlerFactory = ReactNative_1.ReactNative.createFactory();\n          break;\n\n        default:\n          throw new TypeError(`unknown handlerName \"${handlerName}\"`);\n      }\n    } // Create a temporal handler to get its name.\n\n\n    const handler = this._handlerFactory();\n\n    this._handlerName = handler.name;\n    handler.close();\n    this._extendedRtpCapabilities = undefined;\n    this._recvRtpCapabilities = undefined;\n    this._canProduceByKind = {\n      audio: false,\n      video: false\n    };\n    this._sctpCapabilities = undefined;\n  }\n  /**\n   * The RTC handler name.\n   */\n\n\n  get handlerName() {\n    return this._handlerName;\n  }\n  /**\n   * Whether the Device is loaded.\n   */\n\n\n  get loaded() {\n    return this._loaded;\n  }\n  /**\n   * RTP capabilities of the Device for receiving media.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   */\n\n\n  get rtpCapabilities() {\n    if (!this._loaded) throw new errors_1.InvalidStateError('not loaded');\n    return this._recvRtpCapabilities;\n  }\n  /**\n   * SCTP capabilities of the Device.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   */\n\n\n  get sctpCapabilities() {\n    if (!this._loaded) throw new errors_1.InvalidStateError('not loaded');\n    return this._sctpCapabilities;\n  }\n  /**\n   * Observer.\n   *\n   * @emits newtransport - (transport: Transport)\n   */\n\n\n  get observer() {\n    return this._observer;\n  }\n  /**\n   * Initialize the Device.\n   */\n\n\n  async load({\n    routerRtpCapabilities\n  }) {\n    logger.debug('load() [routerRtpCapabilities:%o]', routerRtpCapabilities);\n    routerRtpCapabilities = utils.clone(routerRtpCapabilities, undefined); // Temporal handler to get its capabilities.\n\n    let handler;\n\n    try {\n      if (this._loaded) throw new errors_1.InvalidStateError('already loaded'); // This may throw.\n\n      ortc.validateRtpCapabilities(routerRtpCapabilities);\n      handler = this._handlerFactory();\n      const nativeRtpCapabilities = await handler.getNativeRtpCapabilities();\n      logger.debug('load() | got native RTP capabilities:%o', nativeRtpCapabilities); // This may throw.\n\n      ortc.validateRtpCapabilities(nativeRtpCapabilities); // Get extended RTP capabilities.\n\n      this._extendedRtpCapabilities = ortc.getExtendedRtpCapabilities(nativeRtpCapabilities, routerRtpCapabilities);\n      logger.debug('load() | got extended RTP capabilities:%o', this._extendedRtpCapabilities); // Check whether we can produce audio/video.\n\n      this._canProduceByKind.audio = ortc.canSend('audio', this._extendedRtpCapabilities);\n      this._canProduceByKind.video = ortc.canSend('video', this._extendedRtpCapabilities); // Generate our receiving RTP capabilities for receiving media.\n\n      this._recvRtpCapabilities = ortc.getRecvRtpCapabilities(this._extendedRtpCapabilities); // This may throw.\n\n      ortc.validateRtpCapabilities(this._recvRtpCapabilities);\n      logger.debug('load() | got receiving RTP capabilities:%o', this._recvRtpCapabilities); // Generate our SCTP capabilities.\n\n      this._sctpCapabilities = await handler.getNativeSctpCapabilities();\n      logger.debug('load() | got native SCTP capabilities:%o', this._sctpCapabilities); // This may throw.\n\n      ortc.validateSctpCapabilities(this._sctpCapabilities);\n      logger.debug('load() succeeded');\n      this._loaded = true;\n      handler.close();\n    } catch (error) {\n      if (handler) handler.close();\n      throw error;\n    }\n  }\n  /**\n   * Whether we can produce audio/video.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   * @throws {TypeError} if wrong arguments.\n   */\n\n\n  canProduce(kind) {\n    if (!this._loaded) throw new errors_1.InvalidStateError('not loaded');else if (kind !== 'audio' && kind !== 'video') throw new TypeError(`invalid kind \"${kind}\"`);\n    return this._canProduceByKind[kind];\n  }\n  /**\n   * Creates a Transport for sending media.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   * @throws {TypeError} if wrong arguments.\n   */\n\n\n  createSendTransport({\n    id,\n    iceParameters,\n    iceCandidates,\n    dtlsParameters,\n    sctpParameters,\n    iceServers,\n    iceTransportPolicy,\n    additionalSettings,\n    proprietaryConstraints,\n    appData = {}\n  }) {\n    logger.debug('createSendTransport()');\n    return this._createTransport({\n      direction: 'send',\n      id: id,\n      iceParameters: iceParameters,\n      iceCandidates: iceCandidates,\n      dtlsParameters: dtlsParameters,\n      sctpParameters: sctpParameters,\n      iceServers: iceServers,\n      iceTransportPolicy: iceTransportPolicy,\n      additionalSettings: additionalSettings,\n      proprietaryConstraints: proprietaryConstraints,\n      appData: appData\n    });\n  }\n  /**\n   * Creates a Transport for receiving media.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   * @throws {TypeError} if wrong arguments.\n   */\n\n\n  createRecvTransport({\n    id,\n    iceParameters,\n    iceCandidates,\n    dtlsParameters,\n    sctpParameters,\n    iceServers,\n    iceTransportPolicy,\n    additionalSettings,\n    proprietaryConstraints,\n    appData = {}\n  }) {\n    logger.debug('createRecvTransport()');\n    return this._createTransport({\n      direction: 'recv',\n      id: id,\n      iceParameters: iceParameters,\n      iceCandidates: iceCandidates,\n      dtlsParameters: dtlsParameters,\n      sctpParameters: sctpParameters,\n      iceServers: iceServers,\n      iceTransportPolicy: iceTransportPolicy,\n      additionalSettings: additionalSettings,\n      proprietaryConstraints: proprietaryConstraints,\n      appData: appData\n    });\n  }\n\n  _createTransport({\n    direction,\n    id,\n    iceParameters,\n    iceCandidates,\n    dtlsParameters,\n    sctpParameters,\n    iceServers,\n    iceTransportPolicy,\n    additionalSettings,\n    proprietaryConstraints,\n    appData = {}\n  }) {\n    if (!this._loaded) throw new errors_1.InvalidStateError('not loaded');else if (typeof id !== 'string') throw new TypeError('missing id');else if (typeof iceParameters !== 'object') throw new TypeError('missing iceParameters');else if (!Array.isArray(iceCandidates)) throw new TypeError('missing iceCandidates');else if (typeof dtlsParameters !== 'object') throw new TypeError('missing dtlsParameters');else if (sctpParameters && typeof sctpParameters !== 'object') throw new TypeError('wrong sctpParameters');else if (appData && typeof appData !== 'object') throw new TypeError('if given, appData must be an object'); // Create a new Transport.\n\n    const transport = new Transport_1.Transport({\n      direction,\n      id,\n      iceParameters,\n      iceCandidates,\n      dtlsParameters,\n      sctpParameters,\n      iceServers,\n      iceTransportPolicy,\n      additionalSettings,\n      proprietaryConstraints,\n      appData,\n      handlerFactory: this._handlerFactory,\n      extendedRtpCapabilities: this._extendedRtpCapabilities,\n      canProduceByKind: this._canProduceByKind\n    }); // Emit observer event.\n\n    this._observer.safeEmit('newtransport', transport);\n\n    return transport;\n  }\n\n}\n\nexports.Device = Device;","map":{"version":3,"sources":["/home/param/Desktop/huddle01-task/client/node_modules/mediasoup-client/lib/Device.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","__importDefault","exports","Device","detectDevice","bowser_1","require","Logger_1","EnhancedEventEmitter_1","errors_1","utils","ortc","Transport_1","Chrome74_1","Chrome70_1","Chrome67_1","Chrome55_1","Firefox60_1","Safari12_1","Safari11_1","Edge11_1","ReactNative_1","logger","Logger","navigator","product","RTCPeerConnection","warn","debug","userAgent","ua","browser","default","getParser","engine","getEngine","satisfies","chrome","chromium","firefox","safari","RTCRtpTransceiver","prototype","name","toLowerCase","match","version","Number","getBrowserName","getBrowserVersion","constructor","handlerName","handlerFactory","Handler","_loaded","_observer","EnhancedEventEmitter","TypeError","_handlerFactory","UnsupportedError","Chrome74","createFactory","Chrome70","Chrome67","Chrome55","Firefox60","Safari12","Safari11","Edge11","ReactNative","handler","_handlerName","close","_extendedRtpCapabilities","_recvRtpCapabilities","_canProduceByKind","audio","video","_sctpCapabilities","loaded","rtpCapabilities","InvalidStateError","sctpCapabilities","observer","load","routerRtpCapabilities","clone","validateRtpCapabilities","nativeRtpCapabilities","getNativeRtpCapabilities","getExtendedRtpCapabilities","canSend","getRecvRtpCapabilities","getNativeSctpCapabilities","validateSctpCapabilities","error","canProduce","kind","createSendTransport","id","iceParameters","iceCandidates","dtlsParameters","sctpParameters","iceServers","iceTransportPolicy","additionalSettings","proprietaryConstraints","appData","_createTransport","direction","createRecvTransport","Array","isArray","transport","Transport","extendedRtpCapabilities","canProduceByKind","safeEmit"],"mappings":"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","sourcesContent":["\"use strict\";\n/* global RTCRtpTransceiver */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Device = exports.detectDevice = void 0;\nconst bowser_1 = __importDefault(require(\"bowser\"));\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst utils = __importStar(require(\"./utils\"));\nconst ortc = __importStar(require(\"./ortc\"));\nconst Transport_1 = require(\"./Transport\");\nconst Chrome74_1 = require(\"./handlers/Chrome74\");\nconst Chrome70_1 = require(\"./handlers/Chrome70\");\nconst Chrome67_1 = require(\"./handlers/Chrome67\");\nconst Chrome55_1 = require(\"./handlers/Chrome55\");\nconst Firefox60_1 = require(\"./handlers/Firefox60\");\nconst Safari12_1 = require(\"./handlers/Safari12\");\nconst Safari11_1 = require(\"./handlers/Safari11\");\nconst Edge11_1 = require(\"./handlers/Edge11\");\nconst ReactNative_1 = require(\"./handlers/ReactNative\");\nconst logger = new Logger_1.Logger('Device');\nfunction detectDevice() {\n    // React-Native.\n    // NOTE: react-native-webrtc >= 1.75.0 is required.\n    if (typeof navigator === 'object' && navigator.product === 'ReactNative') {\n        if (typeof RTCPeerConnection === 'undefined') {\n            logger.warn('this._detectDevice() | unsupported ReactNative without RTCPeerConnection');\n            return undefined;\n        }\n        logger.debug('this._detectDevice() | ReactNative handler chosen');\n        return 'ReactNative';\n    }\n    // Browser.\n    else if (typeof navigator === 'object' && typeof navigator.userAgent === 'string') {\n        const ua = navigator.userAgent;\n        const browser = bowser_1.default.getParser(ua);\n        const engine = browser.getEngine();\n        // Chrome and Chromium.\n        if (browser.satisfies({ chrome: '>=74', chromium: '>=74' })) {\n            return 'Chrome74';\n        }\n        else if (browser.satisfies({ chrome: '>=70', chromium: '>=70' })) {\n            return 'Chrome70';\n        }\n        else if (browser.satisfies({ chrome: '>=67', chromium: '>=67' })) {\n            return 'Chrome67';\n        }\n        else if (browser.satisfies({ chrome: '>=55', chromium: '>=55' })) {\n            return 'Chrome55';\n        }\n        // Firefox.\n        else if (browser.satisfies({ firefox: '>=60' })) {\n            return 'Firefox60';\n        }\n        // Safari with Unified-Plan support enabled.\n        else if (browser.satisfies({ safari: '>=12.0' }) &&\n            typeof RTCRtpTransceiver !== 'undefined' &&\n            RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n            return 'Safari12';\n        }\n        // Safari with Plab-B support.\n        else if (browser.satisfies({ safari: '>=11' })) {\n            return 'Safari11';\n        }\n        // Old Edge with ORTC support.\n        else if (browser.satisfies({ 'microsoft edge': '>=11' }) &&\n            browser.satisfies({ 'microsoft edge': '<=18' })) {\n            return 'Edge11';\n        }\n        // Best effort for Chromium based browsers.\n        else if (engine.name && engine.name.toLowerCase() === 'blink') {\n            const match = ua.match(/(?:(?:Chrome|Chromium))[ /](\\w+)/i);\n            if (match) {\n                const version = Number(match[1]);\n                if (version >= 74) {\n                    return 'Chrome74';\n                }\n                else if (version >= 70) {\n                    return 'Chrome70';\n                }\n                else if (version >= 67) {\n                    return 'Chrome67';\n                }\n                else {\n                    return 'Chrome55';\n                }\n            }\n            else {\n                return 'Chrome74';\n            }\n        }\n        // Unsupported browser.\n        else {\n            logger.warn('this._detectDevice() | browser not supported [name:%s, version:%s]', browser.getBrowserName(), browser.getBrowserVersion());\n            return undefined;\n        }\n    }\n    // Unknown device.\n    else {\n        logger.warn('this._detectDevice() | unknown device');\n        return undefined;\n    }\n}\nexports.detectDevice = detectDevice;\nclass Device {\n    /**\n     * Create a new Device to connect to mediasoup server.\n     *\n     * @throws {UnsupportedError} if device is not supported.\n     */\n    constructor({ handlerName, handlerFactory, Handler } = {}) {\n        // Loaded flag.\n        this._loaded = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        // Handle deprecated option.\n        if (Handler) {\n            logger.warn('constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead');\n            if (typeof Handler === 'string')\n                handlerName = Handler;\n            else\n                throw new TypeError('non string Handler option no longer supported, use handlerFactory instead');\n        }\n        if (handlerName && handlerFactory) {\n            throw new TypeError('just one of handlerName or handlerInterface can be given');\n        }\n        if (handlerFactory) {\n            this._handlerFactory = handlerFactory;\n        }\n        else {\n            if (handlerName) {\n                logger.debug('constructor() | handler given: %s', handlerName);\n            }\n            else {\n                handlerName = detectDevice();\n                if (handlerName)\n                    logger.debug('constructor() | detected handler: %s', handlerName);\n                else\n                    throw new errors_1.UnsupportedError('device not supported');\n            }\n            switch (handlerName) {\n                case 'Chrome74':\n                    this._handlerFactory = Chrome74_1.Chrome74.createFactory();\n                    break;\n                case 'Chrome70':\n                    this._handlerFactory = Chrome70_1.Chrome70.createFactory();\n                    break;\n                case 'Chrome67':\n                    this._handlerFactory = Chrome67_1.Chrome67.createFactory();\n                    break;\n                case 'Chrome55':\n                    this._handlerFactory = Chrome55_1.Chrome55.createFactory();\n                    break;\n                case 'Firefox60':\n                    this._handlerFactory = Firefox60_1.Firefox60.createFactory();\n                    break;\n                case 'Safari12':\n                    this._handlerFactory = Safari12_1.Safari12.createFactory();\n                    break;\n                case 'Safari11':\n                    this._handlerFactory = Safari11_1.Safari11.createFactory();\n                    break;\n                case 'Edge11':\n                    this._handlerFactory = Edge11_1.Edge11.createFactory();\n                    break;\n                case 'ReactNative':\n                    this._handlerFactory = ReactNative_1.ReactNative.createFactory();\n                    break;\n                default:\n                    throw new TypeError(`unknown handlerName \"${handlerName}\"`);\n            }\n        }\n        // Create a temporal handler to get its name.\n        const handler = this._handlerFactory();\n        this._handlerName = handler.name;\n        handler.close();\n        this._extendedRtpCapabilities = undefined;\n        this._recvRtpCapabilities = undefined;\n        this._canProduceByKind =\n            {\n                audio: false,\n                video: false\n            };\n        this._sctpCapabilities = undefined;\n    }\n    /**\n     * The RTC handler name.\n     */\n    get handlerName() {\n        return this._handlerName;\n    }\n    /**\n     * Whether the Device is loaded.\n     */\n    get loaded() {\n        return this._loaded;\n    }\n    /**\n     * RTP capabilities of the Device for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get rtpCapabilities() {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        return this._recvRtpCapabilities;\n    }\n    /**\n     * SCTP capabilities of the Device.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get sctpCapabilities() {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        return this._sctpCapabilities;\n    }\n    /**\n     * Observer.\n     *\n     * @emits newtransport - (transport: Transport)\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Initialize the Device.\n     */\n    async load({ routerRtpCapabilities }) {\n        logger.debug('load() [routerRtpCapabilities:%o]', routerRtpCapabilities);\n        routerRtpCapabilities = utils.clone(routerRtpCapabilities, undefined);\n        // Temporal handler to get its capabilities.\n        let handler;\n        try {\n            if (this._loaded)\n                throw new errors_1.InvalidStateError('already loaded');\n            // This may throw.\n            ortc.validateRtpCapabilities(routerRtpCapabilities);\n            handler = this._handlerFactory();\n            const nativeRtpCapabilities = await handler.getNativeRtpCapabilities();\n            logger.debug('load() | got native RTP capabilities:%o', nativeRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(nativeRtpCapabilities);\n            // Get extended RTP capabilities.\n            this._extendedRtpCapabilities = ortc.getExtendedRtpCapabilities(nativeRtpCapabilities, routerRtpCapabilities);\n            logger.debug('load() | got extended RTP capabilities:%o', this._extendedRtpCapabilities);\n            // Check whether we can produce audio/video.\n            this._canProduceByKind.audio =\n                ortc.canSend('audio', this._extendedRtpCapabilities);\n            this._canProduceByKind.video =\n                ortc.canSend('video', this._extendedRtpCapabilities);\n            // Generate our receiving RTP capabilities for receiving media.\n            this._recvRtpCapabilities =\n                ortc.getRecvRtpCapabilities(this._extendedRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(this._recvRtpCapabilities);\n            logger.debug('load() | got receiving RTP capabilities:%o', this._recvRtpCapabilities);\n            // Generate our SCTP capabilities.\n            this._sctpCapabilities = await handler.getNativeSctpCapabilities();\n            logger.debug('load() | got native SCTP capabilities:%o', this._sctpCapabilities);\n            // This may throw.\n            ortc.validateSctpCapabilities(this._sctpCapabilities);\n            logger.debug('load() succeeded');\n            this._loaded = true;\n            handler.close();\n        }\n        catch (error) {\n            if (handler)\n                handler.close();\n            throw error;\n        }\n    }\n    /**\n     * Whether we can produce audio/video.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    canProduce(kind) {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        else if (kind !== 'audio' && kind !== 'video')\n            throw new TypeError(`invalid kind \"${kind}\"`);\n        return this._canProduceByKind[kind];\n    }\n    /**\n     * Creates a Transport for sending media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createSendTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData = {} }) {\n        logger.debug('createSendTransport()');\n        return this._createTransport({\n            direction: 'send',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData\n        });\n    }\n    /**\n     * Creates a Transport for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createRecvTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData = {} }) {\n        logger.debug('createRecvTransport()');\n        return this._createTransport({\n            direction: 'recv',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData\n        });\n    }\n    _createTransport({ direction, id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData = {} }) {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        else if (typeof id !== 'string')\n            throw new TypeError('missing id');\n        else if (typeof iceParameters !== 'object')\n            throw new TypeError('missing iceParameters');\n        else if (!Array.isArray(iceCandidates))\n            throw new TypeError('missing iceCandidates');\n        else if (typeof dtlsParameters !== 'object')\n            throw new TypeError('missing dtlsParameters');\n        else if (sctpParameters && typeof sctpParameters !== 'object')\n            throw new TypeError('wrong sctpParameters');\n        else if (appData && typeof appData !== 'object')\n            throw new TypeError('if given, appData must be an object');\n        // Create a new Transport.\n        const transport = new Transport_1.Transport({\n            direction,\n            id,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            iceServers,\n            iceTransportPolicy,\n            additionalSettings,\n            proprietaryConstraints,\n            appData,\n            handlerFactory: this._handlerFactory,\n            extendedRtpCapabilities: this._extendedRtpCapabilities,\n            canProduceByKind: this._canProduceByKind\n        });\n        // Emit observer event.\n        this._observer.safeEmit('newtransport', transport);\n        return transport;\n    }\n}\nexports.Device = Device;\n"]},"metadata":{},"sourceType":"script"}